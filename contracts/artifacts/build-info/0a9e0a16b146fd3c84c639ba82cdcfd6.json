{
	"id": "0a9e0a16b146fd3c84c639ba82cdcfd6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SongNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\";\n\ncontract SongNFT is ERC1155URIStorage {\n    constructor() ERC1155(\"\"){}\n\n    uint256 public currentID;\n\n    function mint(\n        uint256 amount,\n        string memory uri\n    ) external {\n        _mint(msg.sender, currentID, amount, \"\");\n        _setURI(currentID, uri);\n        currentID++;\n    }\n\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value) external  {\n        super.safeTransferFrom(from,  to,  id,  value, \"\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev ERC1155 token with storage based token URI management.\n * Inspired by the ERC721URIStorage extension\n */\nabstract contract ERC1155URIStorage is ERC1155 {\n    using Strings for uint256;\n\n    // Optional base URI\n    string private _baseURI = \"\";\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the concatenation of the `_baseURI`\n     * and the token-specific uri if the latter is set\n     *\n     * This enables the following behaviors:\n     *\n     * - if `_tokenURIs[tokenId]` is set, then the result is the concatenation\n     *   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`\n     *   is empty per default);\n     *\n     * - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`\n     *   which in most cases will contain `ERC1155._uri`;\n     *\n     * - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a\n     *   uri value set, then the result is empty.\n     */\n    function uri(uint256 tokenId) public view virtual override returns (string memory) {\n        string memory tokenURI = _tokenURIs[tokenId];\n\n        // If token URI is set, concatenate base URI and tokenURI (via string.concat).\n        return bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId);\n    }\n\n    /**\n     * @dev Sets `tokenURI` as the tokenURI of `tokenId`.\n     */\n    function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {\n        _tokenURIs[tokenId] = tokenURI;\n        emit URI(uri(tokenId), tokenId);\n    }\n\n    /**\n     * @dev Sets `baseURI` as the `_baseURI` for all tokens\n     */\n    function _setBaseURI(string memory baseURI) internal virtual {\n        _baseURI = baseURI;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol": {
				"ERC1155URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1155 token with storage based token URI management. Inspired by the ERC721URIStorage extension",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1155 token with storage based token URI management. Inspired by the ERC721URIStorage extension\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":\"ERC1155URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0xb4eb1c685e07054beaab5d980a18dec0ea59470154fa1ef847f8cfb6ddc1f543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cea55f4390e3c35e08616bb3c4932ab54157eb60e3939798860b26bdd62fac0\",\"dweb:/ipfs/QmWTMWhGVPnaGhwExT8618GSqm2gejaf8yanp9fjsd8oQS\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1367,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_baseURI",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1371,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e08f1d50717c6a7be8ddec85a51f1a756b0bae2c2967c3175bfda73ada5e92e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209e08f1d50717c6a7be8ddec85a51f1a756b0bae2c2967c3175bfda73ada5e92e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADDMOD CALL 0xD5 SMOD OR 0xC6 0xA7 0xBE DUP14 0xDE 0xC8 GAS MLOAD CALL 0xA7 JUMP 0xB0 0xBA 0xE2 0xC2 SWAP7 PUSH29 0x3175BFDA73ADA5E92E64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209e08f1d50717c6a7be8ddec85a51f1a756b0bae2c2967c3175bfda73ada5e92e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADDMOD CALL 0xD5 SMOD OR 0xC6 0xA7 0xBE DUP14 0xDE 0xC8 GAS MLOAD CALL 0xA7 JUMP 0xB0 0xBA 0xE2 0xC2 SWAP7 PUSH29 0x3175BFDA73ADA5E92E64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e08f1d50717c6a7be8ddec85a51f1a756b0bae2c2967c3175bfda73ada5e92e64736f6c634300081a0033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SongNFT.sol": {
				"SongNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SongNFT.sol\":249:712  contract SongNFT is ERC1155URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":476:504  string private _baseURI = \"\" */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n  0x03\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/SongNFT.sol\":293:320  constructor() ERC1155(\"\"){} */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/SongNFT.sol\":249:712  contract SongNFT is ERC1155URIStorage {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_13:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_14:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_15:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_16:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_38:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_40\n  tag_15\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":714:798   */\ntag_39:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_17:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_18:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_19:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_20:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_45\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_19\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1429:1468   */\n  tag_46\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_19\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_21:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_22:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_23:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_50\n    /* \"#utility.yul\":1818:1852   */\n  tag_51\n    /* \"#utility.yul\":1827:1851   */\n  tag_52\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_21\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1818:1852   */\n  tag_22\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1800:1853   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_24:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_25:\n    /* \"#utility.yul\":2056:2095   */\n  tag_55\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_23\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2117:2208   */\n  tag_56\n    /* \"#utility.yul\":2166:2207   */\n  tag_57\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_24\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_26:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_27:\n    /* \"#utility.yul\":2377:2409   */\n  tag_60\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2418:2483   */\n  tag_61\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_25\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_28:\n    /* \"#utility.yul\":2555:2675   */\ntag_63:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_66\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_27\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_29:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_69\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_17\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2906:2935   */\n  tag_70\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_18\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_71:\n    /* \"#utility.yul\":3133:3213   */\n  tag_72\n    /* \"#utility.yul\":3189:3211   */\n  tag_73\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_18\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_28\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_68:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_30:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_31:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_76\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_30\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_32:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_78\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_80\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_82\n  tag_14\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4038:4094   */\ntag_81:\n    /* \"#utility.yul\":4118:4156   */\n  tag_83\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_16\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4203:4270   */\n  tag_84\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_29\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_87:\n    /* \"#utility.yul\":5144:5211   */\n  tag_88\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_32\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_85)\n    /* \"#utility.yul\":4365:4983   */\ntag_86:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_89\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_17\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_90:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_90)\ntag_92:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_94\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_31\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_93:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_85:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SongNFT.sol\":249:712  contract SongNFT is ERC1155URIStorage {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SongNFT.sol\":249:712  contract SongNFT is ERC1155URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2eb2c2d6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x77097fc8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0febdd49\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1c75cfb4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1331:1663  function uri(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SongNFT.sol\":554:710  function safeTransferFrom(address from, address to, uint256 id, uint256 value) external  {... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/SongNFT.sol\":326:350  uint256 public currentID */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SongNFT.sol\":357:548  function mint(... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_69\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_70\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1331:1663  function uri(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1399:1412  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1424:1446  string memory tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1449:1459  _tokenURIs */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1449:1468  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1460:1467  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1449:1468  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1424:1468  string memory tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_75\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1598:1599  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1579:1587  tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1573:1595  bytes(tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1573:1599  bytes(tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1573:1656  bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId) */\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1638:1656  super.uri(tokenId) */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1648:1655  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1638:1647  super.uri */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1638:1656  super.uri(tokenId) */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1573:1656  bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId) */\n      jump(tag_83)\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1616:1624  _baseURI */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1626:1634  tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1602:1635  string.concat(_baseURI, tokenURI) */\n      add(0x20, mload(0x40))\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1573:1656  bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId) */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1566:1656  return bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1331:1663  function uri(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SongNFT.sol\":554:710  function safeTransferFrom(address from, address to, uint256 id, uint256 value) external  {... */\n    tag_36:\n        /* \"contracts/SongNFT.sol\":653:703  super.safeTransferFrom(from,  to,  id,  value, \"\") */\n      tag_87\n        /* \"contracts/SongNFT.sol\":676:680  from */\n      dup5\n        /* \"contracts/SongNFT.sol\":683:685  to */\n      dup5\n        /* \"contracts/SongNFT.sol\":688:690  id */\n      dup5\n        /* \"contracts/SongNFT.sol\":693:698  value */\n      dup5\n        /* \"contracts/SongNFT.sol\":653:703  super.safeTransferFrom(from,  to,  id,  value, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/SongNFT.sol\":653:675  super.safeTransferFrom */\n      tag_66\n        /* \"contracts/SongNFT.sol\":653:703  super.safeTransferFrom(from,  to,  id,  value, \"\") */\n      jump\t// in\n    tag_87:\n        /* \"contracts/SongNFT.sol\":554:710  function safeTransferFrom(address from, address to, uint256 id, uint256 value) external  {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SongNFT.sol\":326:350  uint256 public currentID */\n    tag_38:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_102\n      jumpi\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n    tag_102:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_105:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_111\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_113\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_18\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n    tag_114:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_106)\n    tag_107:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SongNFT.sol\":357:548  function mint(... */\n    tag_53:\n        /* \"contracts/SongNFT.sol\":447:487  _mint(msg.sender, currentID, amount, \"\") */\n      tag_118\n        /* \"contracts/SongNFT.sol\":453:463  msg.sender */\n      caller\n        /* \"contracts/SongNFT.sol\":465:474  currentID */\n      sload(0x05)\n        /* \"contracts/SongNFT.sol\":476:482  amount */\n      dup5\n        /* \"contracts/SongNFT.sol\":447:487  _mint(msg.sender, currentID, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/SongNFT.sol\":447:452  _mint */\n      tag_119\n        /* \"contracts/SongNFT.sol\":447:487  _mint(msg.sender, currentID, amount, \"\") */\n      jump\t// in\n    tag_118:\n        /* \"contracts/SongNFT.sol\":497:520  _setURI(currentID, uri) */\n      tag_120\n        /* \"contracts/SongNFT.sol\":505:514  currentID */\n      sload(0x05)\n        /* \"contracts/SongNFT.sol\":516:519  uri */\n      dup3\n        /* \"contracts/SongNFT.sol\":497:504  _setURI */\n      tag_121\n        /* \"contracts/SongNFT.sol\":497:520  _setURI(currentID, uri) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/SongNFT.sol\":530:539  currentID */\n      0x05\n      0x00\n        /* \"contracts/SongNFT.sol\":530:541  currentID++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/SongNFT.sol\":357:548  function mint(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_131\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_75\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_75\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1743:1906  function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1850:1858  tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1828:1838  _tokenURIs */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1828:1847  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1839:1846  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1828:1847  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1828:1858  _tokenURIs[tokenId] = tokenURI */\n      swap1\n      dup2\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1891:1898  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1873:1899  URI(uri(tokenId), tokenId) */\n      0x6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1877:1889  uri(tokenId) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1881:1888  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1877:1880  uri */\n      tag_30\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1877:1889  uri(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1873:1899  URI(uri(tokenId), tokenId) */\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1743:1906  function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_113\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_113\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_187)\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_113\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_113\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_195)\n    tag_196:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_113\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_113\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_211)\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_212\n      swap3\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      0x01\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_221\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_226\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_225)\n    tag_226:\n      0x60\n      swap2\n      pop\n    tag_225:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_237\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_238:\n      0x01\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_239\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_244\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_243)\n    tag_244:\n      0x60\n      swap2\n      pop\n    tag_243:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_251:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_252:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_253:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_254:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_255:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_330\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_254\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_256:\n        /* \"#utility.yul\":641:665   */\n      tag_332\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_255\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_333:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_257:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_335\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_256\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_258:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_259:\n        /* \"#utility.yul\":997:1021   */\n      tag_338\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_258\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_339:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_260:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_341\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_259\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_17:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_344\n      tag_252\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1290:1409   */\n    tag_343:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_345\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_257\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_346\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_260\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_261:\n        /* \"#utility.yul\":1764:1788   */\n      tag_348\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_258\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_20:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_350\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_261\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_262:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_263:\n        /* \"#utility.yul\":2256:2279   */\n      tag_353\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_262\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_354:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_264:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_356\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_263\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_23:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_359\n      tag_252\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":2528:2647   */\n    tag_358:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_360\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_264\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_265:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_266:\n        /* \"#utility.yul\":2963:2984   */\n      tag_363\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_265\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_26:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_365\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_266\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_29:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_368\n      tag_252\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3289:3408   */\n    tag_367:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_369\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_260\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_267:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_268:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:3967   */\n    tag_269:\n        /* \"#utility.yul\":3917:3923   */\n      dup3\n        /* \"#utility.yul\":3912:3915   */\n      dup2\n        /* \"#utility.yul\":3907:3910   */\n      dup4\n        /* \"#utility.yul\":3901:3924   */\n      mcopy\n        /* \"#utility.yul\":3958:3959   */\n      0x00\n        /* \"#utility.yul\":3949:3955   */\n      dup4\n        /* \"#utility.yul\":3944:3947   */\n      dup4\n        /* \"#utility.yul\":3940:3956   */\n      add\n        /* \"#utility.yul\":3933:3960   */\n      mstore\n        /* \"#utility.yul\":3828:3967   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3973:4075   */\n    tag_270:\n        /* \"#utility.yul\":4014:4020   */\n      0x00\n        /* \"#utility.yul\":4065:4067   */\n      0x1f\n        /* \"#utility.yul\":4061:4068   */\n      not\n        /* \"#utility.yul\":4056:4058   */\n      0x1f\n        /* \"#utility.yul\":4049:4054   */\n      dup4\n        /* \"#utility.yul\":4045:4059   */\n      add\n        /* \"#utility.yul\":4041:4069   */\n      and\n        /* \"#utility.yul\":4031:4069   */\n      swap1\n      pop\n        /* \"#utility.yul\":3973:4075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4081:4458   */\n    tag_271:\n        /* \"#utility.yul\":4169:4172   */\n      0x00\n        /* \"#utility.yul\":4197:4236   */\n      tag_375\n        /* \"#utility.yul\":4230:4235   */\n      dup3\n        /* \"#utility.yul\":4197:4236   */\n      tag_267\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4252:4323   */\n      tag_376\n        /* \"#utility.yul\":4316:4322   */\n      dup2\n        /* \"#utility.yul\":4311:4314   */\n      dup6\n        /* \"#utility.yul\":4252:4323   */\n      tag_268\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4245:4323   */\n      swap4\n      pop\n        /* \"#utility.yul\":4332:4397   */\n      tag_377\n        /* \"#utility.yul\":4390:4396   */\n      dup2\n        /* \"#utility.yul\":4385:4388   */\n      dup6\n        /* \"#utility.yul\":4378:4382   */\n      0x20\n        /* \"#utility.yul\":4371:4376   */\n      dup7\n        /* \"#utility.yul\":4367:4383   */\n      add\n        /* \"#utility.yul\":4332:4397   */\n      tag_269\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4422:4451   */\n      tag_378\n        /* \"#utility.yul\":4444:4450   */\n      dup2\n        /* \"#utility.yul\":4422:4451   */\n      tag_270\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4417:4420   */\n      dup5\n        /* \"#utility.yul\":4413:4452   */\n      add\n        /* \"#utility.yul\":4406:4452   */\n      swap2\n      pop\n        /* \"#utility.yul\":4173:4458   */\n      pop\n        /* \"#utility.yul\":4081:4458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4464:4777   */\n    tag_32:\n        /* \"#utility.yul\":4577:4581   */\n      0x00\n        /* \"#utility.yul\":4615:4617   */\n      0x20\n        /* \"#utility.yul\":4604:4613   */\n      dup3\n        /* \"#utility.yul\":4600:4618   */\n      add\n        /* \"#utility.yul\":4592:4618   */\n      swap1\n      pop\n        /* \"#utility.yul\":4664:4673   */\n      dup2\n        /* \"#utility.yul\":4658:4662   */\n      dup2\n        /* \"#utility.yul\":4654:4674   */\n      sub\n        /* \"#utility.yul\":4650:4651   */\n      0x00\n        /* \"#utility.yul\":4639:4648   */\n      dup4\n        /* \"#utility.yul\":4635:4652   */\n      add\n        /* \"#utility.yul\":4628:4675   */\n      mstore\n        /* \"#utility.yul\":4692:4770   */\n      tag_380\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4756:4762   */\n      dup5\n        /* \"#utility.yul\":4692:4770   */\n      tag_271\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4684:4770   */\n      swap1\n      pop\n        /* \"#utility.yul\":4464:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5548   */\n    tag_35:\n        /* \"#utility.yul\":4869:4875   */\n      0x00\n        /* \"#utility.yul\":4877:4883   */\n      dup1\n        /* \"#utility.yul\":4885:4891   */\n      0x00\n        /* \"#utility.yul\":4893:4899   */\n      dup1\n        /* \"#utility.yul\":4942:4945   */\n      0x80\n        /* \"#utility.yul\":4930:4939   */\n      dup6\n        /* \"#utility.yul\":4921:4928   */\n      dup8\n        /* \"#utility.yul\":4917:4940   */\n      sub\n        /* \"#utility.yul\":4913:4946   */\n      slt\n        /* \"#utility.yul\":4910:5030   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":4949:5028   */\n      tag_383\n      tag_252\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4910:5030   */\n    tag_382:\n        /* \"#utility.yul\":5069:5070   */\n      0x00\n        /* \"#utility.yul\":5094:5147   */\n      tag_384\n        /* \"#utility.yul\":5139:5146   */\n      dup8\n        /* \"#utility.yul\":5130:5136   */\n      dup3\n        /* \"#utility.yul\":5119:5128   */\n      dup9\n        /* \"#utility.yul\":5115:5137   */\n      add\n        /* \"#utility.yul\":5094:5147   */\n      tag_257\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5084:5147   */\n      swap5\n      pop\n        /* \"#utility.yul\":5040:5157   */\n      pop\n        /* \"#utility.yul\":5196:5198   */\n      0x20\n        /* \"#utility.yul\":5222:5275   */\n      tag_385\n        /* \"#utility.yul\":5267:5274   */\n      dup8\n        /* \"#utility.yul\":5258:5264   */\n      dup3\n        /* \"#utility.yul\":5247:5256   */\n      dup9\n        /* \"#utility.yul\":5243:5265   */\n      add\n        /* \"#utility.yul\":5222:5275   */\n      tag_257\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5212:5275   */\n      swap4\n      pop\n        /* \"#utility.yul\":5167:5285   */\n      pop\n        /* \"#utility.yul\":5324:5326   */\n      0x40\n        /* \"#utility.yul\":5350:5403   */\n      tag_386\n        /* \"#utility.yul\":5395:5402   */\n      dup8\n        /* \"#utility.yul\":5386:5392   */\n      dup3\n        /* \"#utility.yul\":5375:5384   */\n      dup9\n        /* \"#utility.yul\":5371:5393   */\n      add\n        /* \"#utility.yul\":5350:5403   */\n      tag_260\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5340:5403   */\n      swap3\n      pop\n        /* \"#utility.yul\":5295:5413   */\n      pop\n        /* \"#utility.yul\":5452:5454   */\n      0x60\n        /* \"#utility.yul\":5478:5531   */\n      tag_387\n        /* \"#utility.yul\":5523:5530   */\n      dup8\n        /* \"#utility.yul\":5514:5520   */\n      dup3\n        /* \"#utility.yul\":5503:5512   */\n      dup9\n        /* \"#utility.yul\":5499:5521   */\n      add\n        /* \"#utility.yul\":5478:5531   */\n      tag_260\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5468:5531   */\n      swap2\n      pop\n        /* \"#utility.yul\":5423:5541   */\n      pop\n        /* \"#utility.yul\":4783:5548   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5554:5671   */\n    tag_272:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5660:5661   */\n      dup1\n        /* \"#utility.yul\":5653:5665   */\n      revert\n        /* \"#utility.yul\":5677:5857   */\n    tag_104:\n        /* \"#utility.yul\":5725:5802   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5722:5723   */\n      0x00\n        /* \"#utility.yul\":5715:5803   */\n      mstore\n        /* \"#utility.yul\":5822:5826   */\n      0x41\n        /* \"#utility.yul\":5819:5820   */\n      0x04\n        /* \"#utility.yul\":5812:5827   */\n      mstore\n        /* \"#utility.yul\":5846:5850   */\n      0x24\n        /* \"#utility.yul\":5843:5844   */\n      0x00\n        /* \"#utility.yul\":5836:5851   */\n      revert\n        /* \"#utility.yul\":5863:6144   */\n    tag_273:\n        /* \"#utility.yul\":5946:5973   */\n      tag_391\n        /* \"#utility.yul\":5968:5972   */\n      dup3\n        /* \"#utility.yul\":5946:5973   */\n      tag_270\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5938:5944   */\n      dup2\n        /* \"#utility.yul\":5934:5974   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup2\n        /* \"#utility.yul\":6064:6074   */\n      dup2\n        /* \"#utility.yul\":6061:6083   */\n      lt\n        /* \"#utility.yul\":6040:6058   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6028:6038   */\n      dup3\n        /* \"#utility.yul\":6025:6059   */\n      gt\n        /* \"#utility.yul\":6022:6084   */\n      or\n        /* \"#utility.yul\":6019:6107   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":6087:6105   */\n      tag_393\n      tag_104\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6019:6107   */\n    tag_392:\n        /* \"#utility.yul\":6127:6137   */\n      dup1\n        /* \"#utility.yul\":6123:6125   */\n      0x40\n        /* \"#utility.yul\":6116:6138   */\n      mstore\n        /* \"#utility.yul\":5906:6144   */\n      pop\n        /* \"#utility.yul\":5863:6144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6150:6279   */\n    tag_274:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6211:6231   */\n      tag_395\n      tag_251\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6201:6231   */\n      swap1\n      pop\n        /* \"#utility.yul\":6240:6273   */\n      tag_396\n        /* \"#utility.yul\":6268:6272   */\n      dup3\n        /* \"#utility.yul\":6260:6266   */\n      dup3\n        /* \"#utility.yul\":6240:6273   */\n      tag_273\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6150:6279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6285:6596   */\n    tag_275:\n        /* \"#utility.yul\":6362:6366   */\n      0x00\n        /* \"#utility.yul\":6452:6470   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6444:6450   */\n      dup3\n        /* \"#utility.yul\":6441:6471   */\n      gt\n        /* \"#utility.yul\":6438:6494   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":6474:6492   */\n      tag_399\n      tag_104\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6438:6494   */\n    tag_398:\n        /* \"#utility.yul\":6524:6528   */\n      0x20\n        /* \"#utility.yul\":6516:6522   */\n      dup3\n        /* \"#utility.yul\":6512:6529   */\n      mul\n        /* \"#utility.yul\":6504:6529   */\n      swap1\n      pop\n        /* \"#utility.yul\":6584:6588   */\n      0x20\n        /* \"#utility.yul\":6578:6582   */\n      dup2\n        /* \"#utility.yul\":6574:6589   */\n      add\n        /* \"#utility.yul\":6566:6589   */\n      swap1\n      pop\n        /* \"#utility.yul\":6285:6596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6602:6719   */\n    tag_276:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6708:6709   */\n      dup1\n        /* \"#utility.yul\":6701:6713   */\n      revert\n        /* \"#utility.yul\":6742:7452   */\n    tag_277:\n        /* \"#utility.yul\":6838:6843   */\n      0x00\n        /* \"#utility.yul\":6863:6944   */\n      tag_402\n        /* \"#utility.yul\":6879:6943   */\n      tag_403\n        /* \"#utility.yul\":6936:6942   */\n      dup5\n        /* \"#utility.yul\":6879:6943   */\n      tag_275\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6863:6944   */\n      tag_274\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":6854:6944   */\n      swap1\n      pop\n        /* \"#utility.yul\":6964:6969   */\n      dup1\n        /* \"#utility.yul\":6993:6999   */\n      dup4\n        /* \"#utility.yul\":6986:6991   */\n      dup3\n        /* \"#utility.yul\":6979:7000   */\n      mstore\n        /* \"#utility.yul\":7027:7031   */\n      0x20\n        /* \"#utility.yul\":7020:7025   */\n      dup3\n        /* \"#utility.yul\":7016:7032   */\n      add\n        /* \"#utility.yul\":7009:7032   */\n      swap1\n      pop\n        /* \"#utility.yul\":7080:7084   */\n      0x20\n        /* \"#utility.yul\":7072:7078   */\n      dup5\n        /* \"#utility.yul\":7068:7085   */\n      mul\n        /* \"#utility.yul\":7060:7066   */\n      dup4\n        /* \"#utility.yul\":7056:7086   */\n      add\n        /* \"#utility.yul\":7109:7112   */\n      dup6\n        /* \"#utility.yul\":7101:7107   */\n      dup2\n        /* \"#utility.yul\":7098:7113   */\n      gt\n        /* \"#utility.yul\":7095:7217   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":7128:7207   */\n      tag_405\n      tag_276\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7095:7217   */\n    tag_404:\n        /* \"#utility.yul\":7243:7249   */\n      dup4\n        /* \"#utility.yul\":7226:7446   */\n    tag_406:\n        /* \"#utility.yul\":7260:7266   */\n      dup2\n        /* \"#utility.yul\":7255:7258   */\n      dup2\n        /* \"#utility.yul\":7252:7267   */\n      lt\n        /* \"#utility.yul\":7226:7446   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":7335:7338   */\n      dup1\n        /* \"#utility.yul\":7364:7401   */\n      tag_409\n        /* \"#utility.yul\":7397:7400   */\n      dup9\n        /* \"#utility.yul\":7385:7395   */\n      dup3\n        /* \"#utility.yul\":7364:7401   */\n      tag_260\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7359:7362   */\n      dup5\n        /* \"#utility.yul\":7352:7402   */\n      mstore\n        /* \"#utility.yul\":7431:7435   */\n      0x20\n        /* \"#utility.yul\":7426:7429   */\n      dup5\n        /* \"#utility.yul\":7422:7436   */\n      add\n        /* \"#utility.yul\":7415:7436   */\n      swap4\n      pop\n        /* \"#utility.yul\":7302:7446   */\n      pop\n        /* \"#utility.yul\":7286:7290   */\n      0x20\n        /* \"#utility.yul\":7281:7284   */\n      dup2\n        /* \"#utility.yul\":7277:7291   */\n      add\n        /* \"#utility.yul\":7270:7291   */\n      swap1\n      pop\n        /* \"#utility.yul\":7226:7446   */\n      jump(tag_406)\n    tag_408:\n        /* \"#utility.yul\":7230:7251   */\n      pop\n        /* \"#utility.yul\":6844:7452   */\n      pop\n      pop\n        /* \"#utility.yul\":6742:7452   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7475:7845   */\n    tag_278:\n        /* \"#utility.yul\":7546:7551   */\n      0x00\n        /* \"#utility.yul\":7595:7598   */\n      dup3\n        /* \"#utility.yul\":7588:7592   */\n      0x1f\n        /* \"#utility.yul\":7580:7586   */\n      dup4\n        /* \"#utility.yul\":7576:7593   */\n      add\n        /* \"#utility.yul\":7572:7599   */\n      slt\n        /* \"#utility.yul\":7562:7684   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":7603:7682   */\n      tag_412\n      tag_272\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7562:7684   */\n    tag_411:\n        /* \"#utility.yul\":7720:7726   */\n      dup2\n        /* \"#utility.yul\":7707:7727   */\n      calldataload\n        /* \"#utility.yul\":7745:7839   */\n      tag_413\n        /* \"#utility.yul\":7835:7838   */\n      dup5\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7820:7824   */\n      0x20\n        /* \"#utility.yul\":7812:7818   */\n      dup7\n        /* \"#utility.yul\":7808:7825   */\n      add\n        /* \"#utility.yul\":7745:7839   */\n      tag_277\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7736:7839   */\n      swap2\n      pop\n        /* \"#utility.yul\":7552:7845   */\n      pop\n        /* \"#utility.yul\":7475:7845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7851:7968   */\n    tag_279:\n        /* \"#utility.yul\":7960:7961   */\n      0x00\n        /* \"#utility.yul\":7957:7958   */\n      dup1\n        /* \"#utility.yul\":7950:7962   */\n      revert\n        /* \"#utility.yul\":7974:8281   */\n    tag_280:\n        /* \"#utility.yul\":8035:8039   */\n      0x00\n        /* \"#utility.yul\":8125:8143   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8117:8123   */\n      dup3\n        /* \"#utility.yul\":8114:8144   */\n      gt\n        /* \"#utility.yul\":8111:8167   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":8147:8165   */\n      tag_417\n      tag_104\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8111:8167   */\n    tag_416:\n        /* \"#utility.yul\":8185:8214   */\n      tag_418\n        /* \"#utility.yul\":8207:8213   */\n      dup3\n        /* \"#utility.yul\":8185:8214   */\n      tag_270\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8177:8214   */\n      swap1\n      pop\n        /* \"#utility.yul\":8269:8273   */\n      0x20\n        /* \"#utility.yul\":8263:8267   */\n      dup2\n        /* \"#utility.yul\":8259:8274   */\n      add\n        /* \"#utility.yul\":8251:8274   */\n      swap1\n      pop\n        /* \"#utility.yul\":7974:8281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8287:8435   */\n    tag_281:\n        /* \"#utility.yul\":8385:8391   */\n      dup3\n        /* \"#utility.yul\":8380:8383   */\n      dup2\n        /* \"#utility.yul\":8375:8378   */\n      dup4\n        /* \"#utility.yul\":8362:8392   */\n      calldatacopy\n        /* \"#utility.yul\":8426:8427   */\n      0x00\n        /* \"#utility.yul\":8417:8423   */\n      dup4\n        /* \"#utility.yul\":8412:8415   */\n      dup4\n        /* \"#utility.yul\":8408:8424   */\n      add\n        /* \"#utility.yul\":8401:8428   */\n      mstore\n        /* \"#utility.yul\":8287:8435   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8441:8864   */\n    tag_282:\n        /* \"#utility.yul\":8518:8523   */\n      0x00\n        /* \"#utility.yul\":8543:8608   */\n      tag_421\n        /* \"#utility.yul\":8559:8607   */\n      tag_422\n        /* \"#utility.yul\":8600:8606   */\n      dup5\n        /* \"#utility.yul\":8559:8607   */\n      tag_280\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8543:8608   */\n      tag_274\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8534:8608   */\n      swap1\n      pop\n        /* \"#utility.yul\":8631:8637   */\n      dup3\n        /* \"#utility.yul\":8624:8629   */\n      dup2\n        /* \"#utility.yul\":8617:8638   */\n      mstore\n        /* \"#utility.yul\":8669:8673   */\n      0x20\n        /* \"#utility.yul\":8662:8667   */\n      dup2\n        /* \"#utility.yul\":8658:8674   */\n      add\n        /* \"#utility.yul\":8707:8710   */\n      dup5\n        /* \"#utility.yul\":8698:8704   */\n      dup5\n        /* \"#utility.yul\":8693:8696   */\n      dup5\n        /* \"#utility.yul\":8689:8705   */\n      add\n        /* \"#utility.yul\":8686:8711   */\n      gt\n        /* \"#utility.yul\":8683:8795   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":8714:8793   */\n      tag_424\n      tag_279\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8683:8795   */\n    tag_423:\n        /* \"#utility.yul\":8804:8858   */\n      tag_425\n        /* \"#utility.yul\":8851:8857   */\n      dup5\n        /* \"#utility.yul\":8846:8849   */\n      dup3\n        /* \"#utility.yul\":8841:8844   */\n      dup6\n        /* \"#utility.yul\":8804:8858   */\n      tag_281\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8524:8864   */\n      pop\n        /* \"#utility.yul\":8441:8864   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8883:9221   */\n    tag_283:\n        /* \"#utility.yul\":8938:8943   */\n      0x00\n        /* \"#utility.yul\":8987:8990   */\n      dup3\n        /* \"#utility.yul\":8980:8984   */\n      0x1f\n        /* \"#utility.yul\":8972:8978   */\n      dup4\n        /* \"#utility.yul\":8968:8985   */\n      add\n        /* \"#utility.yul\":8964:8991   */\n      slt\n        /* \"#utility.yul\":8954:9076   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":8995:9074   */\n      tag_428\n      tag_272\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":8954:9076   */\n    tag_427:\n        /* \"#utility.yul\":9112:9118   */\n      dup2\n        /* \"#utility.yul\":9099:9119   */\n      calldataload\n        /* \"#utility.yul\":9137:9215   */\n      tag_429\n        /* \"#utility.yul\":9211:9214   */\n      dup5\n        /* \"#utility.yul\":9203:9209   */\n      dup3\n        /* \"#utility.yul\":9196:9200   */\n      0x20\n        /* \"#utility.yul\":9188:9194   */\n      dup7\n        /* \"#utility.yul\":9184:9201   */\n      add\n        /* \"#utility.yul\":9137:9215   */\n      tag_282\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9128:9215   */\n      swap2\n      pop\n        /* \"#utility.yul\":8944:9221   */\n      pop\n        /* \"#utility.yul\":8883:9221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9227:10736   */\n    tag_42:\n        /* \"#utility.yul\":9381:9387   */\n      0x00\n        /* \"#utility.yul\":9389:9395   */\n      dup1\n        /* \"#utility.yul\":9397:9403   */\n      0x00\n        /* \"#utility.yul\":9405:9411   */\n      dup1\n        /* \"#utility.yul\":9413:9419   */\n      0x00\n        /* \"#utility.yul\":9462:9465   */\n      0xa0\n        /* \"#utility.yul\":9450:9459   */\n      dup7\n        /* \"#utility.yul\":9441:9448   */\n      dup9\n        /* \"#utility.yul\":9437:9460   */\n      sub\n        /* \"#utility.yul\":9433:9466   */\n      slt\n        /* \"#utility.yul\":9430:9550   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":9469:9548   */\n      tag_432\n      tag_252\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":9430:9550   */\n    tag_431:\n        /* \"#utility.yul\":9589:9590   */\n      0x00\n        /* \"#utility.yul\":9614:9667   */\n      tag_433\n        /* \"#utility.yul\":9659:9666   */\n      dup9\n        /* \"#utility.yul\":9650:9656   */\n      dup3\n        /* \"#utility.yul\":9639:9648   */\n      dup10\n        /* \"#utility.yul\":9635:9657   */\n      add\n        /* \"#utility.yul\":9614:9667   */\n      tag_257\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9604:9667   */\n      swap6\n      pop\n        /* \"#utility.yul\":9560:9677   */\n      pop\n        /* \"#utility.yul\":9716:9718   */\n      0x20\n        /* \"#utility.yul\":9742:9795   */\n      tag_434\n        /* \"#utility.yul\":9787:9794   */\n      dup9\n        /* \"#utility.yul\":9778:9784   */\n      dup3\n        /* \"#utility.yul\":9767:9776   */\n      dup10\n        /* \"#utility.yul\":9763:9785   */\n      add\n        /* \"#utility.yul\":9742:9795   */\n      tag_257\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9732:9795   */\n      swap5\n      pop\n        /* \"#utility.yul\":9687:9805   */\n      pop\n        /* \"#utility.yul\":9872:9874   */\n      0x40\n        /* \"#utility.yul\":9861:9870   */\n      dup7\n        /* \"#utility.yul\":9857:9875   */\n      add\n        /* \"#utility.yul\":9844:9876   */\n      calldataload\n        /* \"#utility.yul\":9903:9921   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9895:9901   */\n      dup2\n        /* \"#utility.yul\":9892:9922   */\n      gt\n        /* \"#utility.yul\":9889:10006   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":9925:10004   */\n      tag_436\n      tag_253\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9889:10006   */\n    tag_435:\n        /* \"#utility.yul\":10030:10108   */\n      tag_437\n        /* \"#utility.yul\":10100:10107   */\n      dup9\n        /* \"#utility.yul\":10091:10097   */\n      dup3\n        /* \"#utility.yul\":10080:10089   */\n      dup10\n        /* \"#utility.yul\":10076:10098   */\n      add\n        /* \"#utility.yul\":10030:10108   */\n      tag_278\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10020:10108   */\n      swap4\n      pop\n        /* \"#utility.yul\":9815:10118   */\n      pop\n        /* \"#utility.yul\":10185:10187   */\n      0x60\n        /* \"#utility.yul\":10174:10183   */\n      dup7\n        /* \"#utility.yul\":10170:10188   */\n      add\n        /* \"#utility.yul\":10157:10189   */\n      calldataload\n        /* \"#utility.yul\":10216:10234   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10208:10214   */\n      dup2\n        /* \"#utility.yul\":10205:10235   */\n      gt\n        /* \"#utility.yul\":10202:10319   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":10238:10317   */\n      tag_439\n      tag_253\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10202:10319   */\n    tag_438:\n        /* \"#utility.yul\":10343:10421   */\n      tag_440\n        /* \"#utility.yul\":10413:10420   */\n      dup9\n        /* \"#utility.yul\":10404:10410   */\n      dup3\n        /* \"#utility.yul\":10393:10402   */\n      dup10\n        /* \"#utility.yul\":10389:10411   */\n      add\n        /* \"#utility.yul\":10343:10421   */\n      tag_278\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10333:10421   */\n      swap3\n      pop\n        /* \"#utility.yul\":10128:10431   */\n      pop\n        /* \"#utility.yul\":10498:10501   */\n      0x80\n        /* \"#utility.yul\":10487:10496   */\n      dup7\n        /* \"#utility.yul\":10483:10502   */\n      add\n        /* \"#utility.yul\":10470:10503   */\n      calldataload\n        /* \"#utility.yul\":10530:10548   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10522:10528   */\n      dup2\n        /* \"#utility.yul\":10519:10549   */\n      gt\n        /* \"#utility.yul\":10516:10633   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":10552:10631   */\n      tag_442\n      tag_253\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10516:10633   */\n    tag_441:\n        /* \"#utility.yul\":10657:10719   */\n      tag_443\n        /* \"#utility.yul\":10711:10718   */\n      dup9\n        /* \"#utility.yul\":10702:10708   */\n      dup3\n        /* \"#utility.yul\":10691:10700   */\n      dup10\n        /* \"#utility.yul\":10687:10709   */\n      add\n        /* \"#utility.yul\":10657:10719   */\n      tag_283\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10647:10719   */\n      swap2\n      pop\n        /* \"#utility.yul\":10441:10729   */\n      pop\n        /* \"#utility.yul\":9227:10736   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10742:11053   */\n    tag_284:\n        /* \"#utility.yul\":10819:10823   */\n      0x00\n        /* \"#utility.yul\":10909:10927   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10901:10907   */\n      dup3\n        /* \"#utility.yul\":10898:10928   */\n      gt\n        /* \"#utility.yul\":10895:10951   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":10931:10949   */\n      tag_446\n      tag_104\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10895:10951   */\n    tag_445:\n        /* \"#utility.yul\":10981:10985   */\n      0x20\n        /* \"#utility.yul\":10973:10979   */\n      dup3\n        /* \"#utility.yul\":10969:10986   */\n      mul\n        /* \"#utility.yul\":10961:10986   */\n      swap1\n      pop\n        /* \"#utility.yul\":11041:11045   */\n      0x20\n        /* \"#utility.yul\":11035:11039   */\n      dup2\n        /* \"#utility.yul\":11031:11046   */\n      add\n        /* \"#utility.yul\":11023:11046   */\n      swap1\n      pop\n        /* \"#utility.yul\":10742:11053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11076:11786   */\n    tag_285:\n        /* \"#utility.yul\":11172:11177   */\n      0x00\n        /* \"#utility.yul\":11197:11278   */\n      tag_448\n        /* \"#utility.yul\":11213:11277   */\n      tag_449\n        /* \"#utility.yul\":11270:11276   */\n      dup5\n        /* \"#utility.yul\":11213:11277   */\n      tag_284\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11197:11278   */\n      tag_274\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11188:11278   */\n      swap1\n      pop\n        /* \"#utility.yul\":11298:11303   */\n      dup1\n        /* \"#utility.yul\":11327:11333   */\n      dup4\n        /* \"#utility.yul\":11320:11325   */\n      dup3\n        /* \"#utility.yul\":11313:11334   */\n      mstore\n        /* \"#utility.yul\":11361:11365   */\n      0x20\n        /* \"#utility.yul\":11354:11359   */\n      dup3\n        /* \"#utility.yul\":11350:11366   */\n      add\n        /* \"#utility.yul\":11343:11366   */\n      swap1\n      pop\n        /* \"#utility.yul\":11414:11418   */\n      0x20\n        /* \"#utility.yul\":11406:11412   */\n      dup5\n        /* \"#utility.yul\":11402:11419   */\n      mul\n        /* \"#utility.yul\":11394:11400   */\n      dup4\n        /* \"#utility.yul\":11390:11420   */\n      add\n        /* \"#utility.yul\":11443:11446   */\n      dup6\n        /* \"#utility.yul\":11435:11441   */\n      dup2\n        /* \"#utility.yul\":11432:11447   */\n      gt\n        /* \"#utility.yul\":11429:11551   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":11462:11541   */\n      tag_451\n      tag_276\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11429:11551   */\n    tag_450:\n        /* \"#utility.yul\":11577:11583   */\n      dup4\n        /* \"#utility.yul\":11560:11780   */\n    tag_452:\n        /* \"#utility.yul\":11594:11600   */\n      dup2\n        /* \"#utility.yul\":11589:11592   */\n      dup2\n        /* \"#utility.yul\":11586:11601   */\n      lt\n        /* \"#utility.yul\":11560:11780   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":11669:11672   */\n      dup1\n        /* \"#utility.yul\":11698:11735   */\n      tag_455\n        /* \"#utility.yul\":11731:11734   */\n      dup9\n        /* \"#utility.yul\":11719:11729   */\n      dup3\n        /* \"#utility.yul\":11698:11735   */\n      tag_257\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11693:11696   */\n      dup5\n        /* \"#utility.yul\":11686:11736   */\n      mstore\n        /* \"#utility.yul\":11765:11769   */\n      0x20\n        /* \"#utility.yul\":11760:11763   */\n      dup5\n        /* \"#utility.yul\":11756:11770   */\n      add\n        /* \"#utility.yul\":11749:11770   */\n      swap4\n      pop\n        /* \"#utility.yul\":11636:11780   */\n      pop\n        /* \"#utility.yul\":11620:11624   */\n      0x20\n        /* \"#utility.yul\":11615:11618   */\n      dup2\n        /* \"#utility.yul\":11611:11625   */\n      add\n        /* \"#utility.yul\":11604:11625   */\n      swap1\n      pop\n        /* \"#utility.yul\":11560:11780   */\n      jump(tag_452)\n    tag_454:\n        /* \"#utility.yul\":11564:11585   */\n      pop\n        /* \"#utility.yul\":11178:11786   */\n      pop\n      pop\n        /* \"#utility.yul\":11076:11786   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11809:12179   */\n    tag_286:\n        /* \"#utility.yul\":11880:11885   */\n      0x00\n        /* \"#utility.yul\":11929:11932   */\n      dup3\n        /* \"#utility.yul\":11922:11926   */\n      0x1f\n        /* \"#utility.yul\":11914:11920   */\n      dup4\n        /* \"#utility.yul\":11910:11927   */\n      add\n        /* \"#utility.yul\":11906:11933   */\n      slt\n        /* \"#utility.yul\":11896:12018   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":11937:12016   */\n      tag_458\n      tag_272\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":11896:12018   */\n    tag_457:\n        /* \"#utility.yul\":12054:12060   */\n      dup2\n        /* \"#utility.yul\":12041:12061   */\n      calldataload\n        /* \"#utility.yul\":12079:12173   */\n      tag_459\n        /* \"#utility.yul\":12169:12172   */\n      dup5\n        /* \"#utility.yul\":12161:12167   */\n      dup3\n        /* \"#utility.yul\":12154:12158   */\n      0x20\n        /* \"#utility.yul\":12146:12152   */\n      dup7\n        /* \"#utility.yul\":12142:12159   */\n      add\n        /* \"#utility.yul\":12079:12173   */\n      tag_285\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12070:12173   */\n      swap2\n      pop\n        /* \"#utility.yul\":11886:12179   */\n      pop\n        /* \"#utility.yul\":11809:12179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12185:13079   */\n    tag_46:\n        /* \"#utility.yul\":12303:12309   */\n      0x00\n        /* \"#utility.yul\":12311:12317   */\n      dup1\n        /* \"#utility.yul\":12360:12362   */\n      0x40\n        /* \"#utility.yul\":12348:12357   */\n      dup4\n        /* \"#utility.yul\":12339:12346   */\n      dup6\n        /* \"#utility.yul\":12335:12358   */\n      sub\n        /* \"#utility.yul\":12331:12363   */\n      slt\n        /* \"#utility.yul\":12328:12447   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":12366:12445   */\n      tag_462\n      tag_252\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12328:12447   */\n    tag_461:\n        /* \"#utility.yul\":12514:12515   */\n      0x00\n        /* \"#utility.yul\":12503:12512   */\n      dup4\n        /* \"#utility.yul\":12499:12516   */\n      add\n        /* \"#utility.yul\":12486:12517   */\n      calldataload\n        /* \"#utility.yul\":12544:12562   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12536:12542   */\n      dup2\n        /* \"#utility.yul\":12533:12563   */\n      gt\n        /* \"#utility.yul\":12530:12647   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":12566:12645   */\n      tag_464\n      tag_253\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12530:12647   */\n    tag_463:\n        /* \"#utility.yul\":12671:12749   */\n      tag_465\n        /* \"#utility.yul\":12741:12748   */\n      dup6\n        /* \"#utility.yul\":12732:12738   */\n      dup3\n        /* \"#utility.yul\":12721:12730   */\n      dup7\n        /* \"#utility.yul\":12717:12739   */\n      add\n        /* \"#utility.yul\":12671:12749   */\n      tag_286\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12661:12749   */\n      swap3\n      pop\n        /* \"#utility.yul\":12457:12759   */\n      pop\n        /* \"#utility.yul\":12826:12828   */\n      0x20\n        /* \"#utility.yul\":12815:12824   */\n      dup4\n        /* \"#utility.yul\":12811:12829   */\n      add\n        /* \"#utility.yul\":12798:12830   */\n      calldataload\n        /* \"#utility.yul\":12857:12875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12849:12855   */\n      dup2\n        /* \"#utility.yul\":12846:12876   */\n      gt\n        /* \"#utility.yul\":12843:12960   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":12879:12958   */\n      tag_467\n      tag_253\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12843:12960   */\n    tag_466:\n        /* \"#utility.yul\":12984:13062   */\n      tag_468\n        /* \"#utility.yul\":13054:13061   */\n      dup6\n        /* \"#utility.yul\":13045:13051   */\n      dup3\n        /* \"#utility.yul\":13034:13043   */\n      dup7\n        /* \"#utility.yul\":13030:13052   */\n      add\n        /* \"#utility.yul\":12984:13062   */\n      tag_278\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":12974:13062   */\n      swap2\n      pop\n        /* \"#utility.yul\":12769:13072   */\n      pop\n        /* \"#utility.yul\":12185:13079   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13085:13199   */\n    tag_287:\n        /* \"#utility.yul\":13152:13158   */\n      0x00\n        /* \"#utility.yul\":13186:13191   */\n      dup2\n        /* \"#utility.yul\":13180:13192   */\n      mload\n        /* \"#utility.yul\":13170:13192   */\n      swap1\n      pop\n        /* \"#utility.yul\":13085:13199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13205:13389   */\n    tag_288:\n        /* \"#utility.yul\":13304:13315   */\n      0x00\n        /* \"#utility.yul\":13338:13344   */\n      dup3\n        /* \"#utility.yul\":13333:13336   */\n      dup3\n        /* \"#utility.yul\":13326:13345   */\n      mstore\n        /* \"#utility.yul\":13378:13382   */\n      0x20\n        /* \"#utility.yul\":13373:13376   */\n      dup3\n        /* \"#utility.yul\":13369:13383   */\n      add\n        /* \"#utility.yul\":13354:13383   */\n      swap1\n      pop\n        /* \"#utility.yul\":13205:13389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13395:13527   */\n    tag_289:\n        /* \"#utility.yul\":13462:13466   */\n      0x00\n        /* \"#utility.yul\":13485:13488   */\n      dup2\n        /* \"#utility.yul\":13477:13488   */\n      swap1\n      pop\n        /* \"#utility.yul\":13515:13519   */\n      0x20\n        /* \"#utility.yul\":13510:13513   */\n      dup3\n        /* \"#utility.yul\":13506:13520   */\n      add\n        /* \"#utility.yul\":13498:13520   */\n      swap1\n      pop\n        /* \"#utility.yul\":13395:13527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13533:13641   */\n    tag_290:\n        /* \"#utility.yul\":13610:13634   */\n      tag_473\n        /* \"#utility.yul\":13628:13633   */\n      dup2\n        /* \"#utility.yul\":13610:13634   */\n      tag_258\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13605:13608   */\n      dup3\n        /* \"#utility.yul\":13598:13635   */\n      mstore\n        /* \"#utility.yul\":13533:13641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13647:13826   */\n    tag_291:\n        /* \"#utility.yul\":13716:13726   */\n      0x00\n        /* \"#utility.yul\":13737:13783   */\n      tag_475\n        /* \"#utility.yul\":13779:13782   */\n      dup4\n        /* \"#utility.yul\":13771:13777   */\n      dup4\n        /* \"#utility.yul\":13737:13783   */\n      tag_290\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":13815:13819   */\n      0x20\n        /* \"#utility.yul\":13810:13813   */\n      dup4\n        /* \"#utility.yul\":13806:13820   */\n      add\n        /* \"#utility.yul\":13792:13820   */\n      swap1\n      pop\n        /* \"#utility.yul\":13647:13826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13832:13945   */\n    tag_292:\n        /* \"#utility.yul\":13902:13906   */\n      0x00\n        /* \"#utility.yul\":13934:13938   */\n      0x20\n        /* \"#utility.yul\":13929:13932   */\n      dup3\n        /* \"#utility.yul\":13925:13939   */\n      add\n        /* \"#utility.yul\":13917:13939   */\n      swap1\n      pop\n        /* \"#utility.yul\":13832:13945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13981:14713   */\n    tag_293:\n        /* \"#utility.yul\":14100:14103   */\n      0x00\n        /* \"#utility.yul\":14129:14183   */\n      tag_478\n        /* \"#utility.yul\":14177:14182   */\n      dup3\n        /* \"#utility.yul\":14129:14183   */\n      tag_287\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":14199:14285   */\n      tag_479\n        /* \"#utility.yul\":14278:14284   */\n      dup2\n        /* \"#utility.yul\":14273:14276   */\n      dup6\n        /* \"#utility.yul\":14199:14285   */\n      tag_288\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":14192:14285   */\n      swap4\n      pop\n        /* \"#utility.yul\":14309:14365   */\n      tag_480\n        /* \"#utility.yul\":14359:14364   */\n      dup4\n        /* \"#utility.yul\":14309:14365   */\n      tag_289\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":14388:14395   */\n      dup1\n        /* \"#utility.yul\":14419:14420   */\n      0x00\n        /* \"#utility.yul\":14404:14688   */\n    tag_481:\n        /* \"#utility.yul\":14429:14435   */\n      dup4\n        /* \"#utility.yul\":14426:14427   */\n      dup2\n        /* \"#utility.yul\":14423:14436   */\n      lt\n        /* \"#utility.yul\":14404:14688   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":14505:14511   */\n      dup2\n        /* \"#utility.yul\":14499:14512   */\n      mload\n        /* \"#utility.yul\":14532:14595   */\n      tag_484\n        /* \"#utility.yul\":14591:14594   */\n      dup9\n        /* \"#utility.yul\":14576:14589   */\n      dup3\n        /* \"#utility.yul\":14532:14595   */\n      tag_291\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14525:14595   */\n      swap8\n      pop\n        /* \"#utility.yul\":14618:14678   */\n      tag_485\n        /* \"#utility.yul\":14671:14677   */\n      dup4\n        /* \"#utility.yul\":14618:14678   */\n      tag_292\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":14608:14678   */\n      swap3\n      pop\n        /* \"#utility.yul\":14464:14688   */\n      pop\n        /* \"#utility.yul\":14451:14452   */\n      0x01\n        /* \"#utility.yul\":14448:14449   */\n      dup2\n        /* \"#utility.yul\":14444:14453   */\n      add\n        /* \"#utility.yul\":14439:14453   */\n      swap1\n      pop\n        /* \"#utility.yul\":14404:14688   */\n      jump(tag_481)\n    tag_483:\n        /* \"#utility.yul\":14408:14422   */\n      pop\n        /* \"#utility.yul\":14704:14707   */\n      dup6\n        /* \"#utility.yul\":14697:14707   */\n      swap4\n      pop\n        /* \"#utility.yul\":14105:14713   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13981:14713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14719:15092   */\n    tag_49:\n        /* \"#utility.yul\":14862:14866   */\n      0x00\n        /* \"#utility.yul\":14900:14902   */\n      0x20\n        /* \"#utility.yul\":14889:14898   */\n      dup3\n        /* \"#utility.yul\":14885:14903   */\n      add\n        /* \"#utility.yul\":14877:14903   */\n      swap1\n      pop\n        /* \"#utility.yul\":14949:14958   */\n      dup2\n        /* \"#utility.yul\":14943:14947   */\n      dup2\n        /* \"#utility.yul\":14939:14959   */\n      sub\n        /* \"#utility.yul\":14935:14936   */\n      0x00\n        /* \"#utility.yul\":14924:14933   */\n      dup4\n        /* \"#utility.yul\":14920:14937   */\n      add\n        /* \"#utility.yul\":14913:14960   */\n      mstore\n        /* \"#utility.yul\":14977:15085   */\n      tag_487\n        /* \"#utility.yul\":15080:15084   */\n      dup2\n        /* \"#utility.yul\":15071:15077   */\n      dup5\n        /* \"#utility.yul\":14977:15085   */\n      tag_293\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":14969:15085   */\n      swap1\n      pop\n        /* \"#utility.yul\":14719:15092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15098:15406   */\n    tag_294:\n        /* \"#utility.yul\":15160:15164   */\n      0x00\n        /* \"#utility.yul\":15250:15268   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15242:15248   */\n      dup3\n        /* \"#utility.yul\":15239:15269   */\n      gt\n        /* \"#utility.yul\":15236:15292   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":15272:15290   */\n      tag_490\n      tag_104\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":15236:15292   */\n    tag_489:\n        /* \"#utility.yul\":15310:15339   */\n      tag_491\n        /* \"#utility.yul\":15332:15338   */\n      dup3\n        /* \"#utility.yul\":15310:15339   */\n      tag_270\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":15302:15339   */\n      swap1\n      pop\n        /* \"#utility.yul\":15394:15398   */\n      0x20\n        /* \"#utility.yul\":15388:15392   */\n      dup2\n        /* \"#utility.yul\":15384:15399   */\n      add\n        /* \"#utility.yul\":15376:15399   */\n      swap1\n      pop\n        /* \"#utility.yul\":15098:15406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15412:15837   */\n    tag_295:\n        /* \"#utility.yul\":15490:15495   */\n      0x00\n        /* \"#utility.yul\":15515:15581   */\n      tag_493\n        /* \"#utility.yul\":15531:15580   */\n      tag_494\n        /* \"#utility.yul\":15573:15579   */\n      dup5\n        /* \"#utility.yul\":15531:15580   */\n      tag_294\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15515:15581   */\n      tag_274\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":15506:15581   */\n      swap1\n      pop\n        /* \"#utility.yul\":15604:15610   */\n      dup3\n        /* \"#utility.yul\":15597:15602   */\n      dup2\n        /* \"#utility.yul\":15590:15611   */\n      mstore\n        /* \"#utility.yul\":15642:15646   */\n      0x20\n        /* \"#utility.yul\":15635:15640   */\n      dup2\n        /* \"#utility.yul\":15631:15647   */\n      add\n        /* \"#utility.yul\":15680:15683   */\n      dup5\n        /* \"#utility.yul\":15671:15677   */\n      dup5\n        /* \"#utility.yul\":15666:15669   */\n      dup5\n        /* \"#utility.yul\":15662:15678   */\n      add\n        /* \"#utility.yul\":15659:15684   */\n      gt\n        /* \"#utility.yul\":15656:15768   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":15687:15766   */\n      tag_496\n      tag_279\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":15656:15768   */\n    tag_495:\n        /* \"#utility.yul\":15777:15831   */\n      tag_497\n        /* \"#utility.yul\":15824:15830   */\n      dup5\n        /* \"#utility.yul\":15819:15822   */\n      dup3\n        /* \"#utility.yul\":15814:15817   */\n      dup6\n        /* \"#utility.yul\":15777:15831   */\n      tag_281\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":15496:15837   */\n      pop\n        /* \"#utility.yul\":15412:15837   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15857:16197   */\n    tag_296:\n        /* \"#utility.yul\":15913:15918   */\n      0x00\n        /* \"#utility.yul\":15962:15965   */\n      dup3\n        /* \"#utility.yul\":15955:15959   */\n      0x1f\n        /* \"#utility.yul\":15947:15953   */\n      dup4\n        /* \"#utility.yul\":15943:15960   */\n      add\n        /* \"#utility.yul\":15939:15966   */\n      slt\n        /* \"#utility.yul\":15929:16051   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":15970:16049   */\n      tag_500\n      tag_272\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":15929:16051   */\n    tag_499:\n        /* \"#utility.yul\":16087:16093   */\n      dup2\n        /* \"#utility.yul\":16074:16094   */\n      calldataload\n        /* \"#utility.yul\":16112:16191   */\n      tag_501\n        /* \"#utility.yul\":16187:16190   */\n      dup5\n        /* \"#utility.yul\":16179:16185   */\n      dup3\n        /* \"#utility.yul\":16172:16176   */\n      0x20\n        /* \"#utility.yul\":16164:16170   */\n      dup7\n        /* \"#utility.yul\":16160:16177   */\n      add\n        /* \"#utility.yul\":16112:16191   */\n      tag_295\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":16103:16191   */\n      swap2\n      pop\n        /* \"#utility.yul\":15919:16197   */\n      pop\n        /* \"#utility.yul\":15857:16197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16203:16857   */\n    tag_52:\n        /* \"#utility.yul\":16281:16287   */\n      0x00\n        /* \"#utility.yul\":16289:16295   */\n      dup1\n        /* \"#utility.yul\":16338:16340   */\n      0x40\n        /* \"#utility.yul\":16326:16335   */\n      dup4\n        /* \"#utility.yul\":16317:16324   */\n      dup6\n        /* \"#utility.yul\":16313:16336   */\n      sub\n        /* \"#utility.yul\":16309:16341   */\n      slt\n        /* \"#utility.yul\":16306:16425   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":16344:16423   */\n      tag_504\n      tag_252\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16306:16425   */\n    tag_503:\n        /* \"#utility.yul\":16464:16465   */\n      0x00\n        /* \"#utility.yul\":16489:16542   */\n      tag_505\n        /* \"#utility.yul\":16534:16541   */\n      dup6\n        /* \"#utility.yul\":16525:16531   */\n      dup3\n        /* \"#utility.yul\":16514:16523   */\n      dup7\n        /* \"#utility.yul\":16510:16532   */\n      add\n        /* \"#utility.yul\":16489:16542   */\n      tag_260\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":16479:16542   */\n      swap3\n      pop\n        /* \"#utility.yul\":16435:16552   */\n      pop\n        /* \"#utility.yul\":16619:16621   */\n      0x20\n        /* \"#utility.yul\":16608:16617   */\n      dup4\n        /* \"#utility.yul\":16604:16622   */\n      add\n        /* \"#utility.yul\":16591:16623   */\n      calldataload\n        /* \"#utility.yul\":16650:16668   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16642:16648   */\n      dup2\n        /* \"#utility.yul\":16639:16669   */\n      gt\n        /* \"#utility.yul\":16636:16753   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":16672:16751   */\n      tag_507\n      tag_253\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":16636:16753   */\n    tag_506:\n        /* \"#utility.yul\":16777:16840   */\n      tag_508\n        /* \"#utility.yul\":16832:16839   */\n      dup6\n        /* \"#utility.yul\":16823:16829   */\n      dup3\n        /* \"#utility.yul\":16812:16821   */\n      dup7\n        /* \"#utility.yul\":16808:16830   */\n      add\n        /* \"#utility.yul\":16777:16840   */\n      tag_296\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":16767:16840   */\n      swap2\n      pop\n        /* \"#utility.yul\":16562:16850   */\n      pop\n        /* \"#utility.yul\":16203:16857   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16863:16979   */\n    tag_297:\n        /* \"#utility.yul\":16933:16954   */\n      tag_510\n        /* \"#utility.yul\":16948:16953   */\n      dup2\n        /* \"#utility.yul\":16933:16954   */\n      tag_265\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":16926:16931   */\n      dup2\n        /* \"#utility.yul\":16923:16955   */\n      eq\n        /* \"#utility.yul\":16913:16973   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":16969:16970   */\n      0x00\n        /* \"#utility.yul\":16966:16967   */\n      dup1\n        /* \"#utility.yul\":16959:16971   */\n      revert\n        /* \"#utility.yul\":16913:16973   */\n    tag_511:\n        /* \"#utility.yul\":16863:16979   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16985:17118   */\n    tag_298:\n        /* \"#utility.yul\":17028:17033   */\n      0x00\n        /* \"#utility.yul\":17066:17072   */\n      dup2\n        /* \"#utility.yul\":17053:17073   */\n      calldataload\n        /* \"#utility.yul\":17044:17073   */\n      swap1\n      pop\n        /* \"#utility.yul\":17082:17112   */\n      tag_513\n        /* \"#utility.yul\":17106:17111   */\n      dup2\n        /* \"#utility.yul\":17082:17112   */\n      tag_297\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":16985:17118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17124:17592   */\n    tag_56:\n        /* \"#utility.yul\":17189:17195   */\n      0x00\n        /* \"#utility.yul\":17197:17203   */\n      dup1\n        /* \"#utility.yul\":17246:17248   */\n      0x40\n        /* \"#utility.yul\":17234:17243   */\n      dup4\n        /* \"#utility.yul\":17225:17232   */\n      dup6\n        /* \"#utility.yul\":17221:17244   */\n      sub\n        /* \"#utility.yul\":17217:17249   */\n      slt\n        /* \"#utility.yul\":17214:17333   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":17252:17331   */\n      tag_516\n      tag_252\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":17214:17333   */\n    tag_515:\n        /* \"#utility.yul\":17372:17373   */\n      0x00\n        /* \"#utility.yul\":17397:17450   */\n      tag_517\n        /* \"#utility.yul\":17442:17449   */\n      dup6\n        /* \"#utility.yul\":17433:17439   */\n      dup3\n        /* \"#utility.yul\":17422:17431   */\n      dup7\n        /* \"#utility.yul\":17418:17440   */\n      add\n        /* \"#utility.yul\":17397:17450   */\n      tag_257\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":17387:17450   */\n      swap3\n      pop\n        /* \"#utility.yul\":17343:17460   */\n      pop\n        /* \"#utility.yul\":17499:17501   */\n      0x20\n        /* \"#utility.yul\":17525:17575   */\n      tag_518\n        /* \"#utility.yul\":17567:17574   */\n      dup6\n        /* \"#utility.yul\":17558:17564   */\n      dup3\n        /* \"#utility.yul\":17547:17556   */\n      dup7\n        /* \"#utility.yul\":17543:17565   */\n      add\n        /* \"#utility.yul\":17525:17575   */\n      tag_298\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":17515:17575   */\n      swap2\n      pop\n        /* \"#utility.yul\":17470:17585   */\n      pop\n        /* \"#utility.yul\":17124:17592   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17598:18072   */\n    tag_60:\n        /* \"#utility.yul\":17666:17672   */\n      0x00\n        /* \"#utility.yul\":17674:17680   */\n      dup1\n        /* \"#utility.yul\":17723:17725   */\n      0x40\n        /* \"#utility.yul\":17711:17720   */\n      dup4\n        /* \"#utility.yul\":17702:17709   */\n      dup6\n        /* \"#utility.yul\":17698:17721   */\n      sub\n        /* \"#utility.yul\":17694:17726   */\n      slt\n        /* \"#utility.yul\":17691:17810   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":17729:17808   */\n      tag_521\n      tag_252\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17691:17810   */\n    tag_520:\n        /* \"#utility.yul\":17849:17850   */\n      0x00\n        /* \"#utility.yul\":17874:17927   */\n      tag_522\n        /* \"#utility.yul\":17919:17926   */\n      dup6\n        /* \"#utility.yul\":17910:17916   */\n      dup3\n        /* \"#utility.yul\":17899:17908   */\n      dup7\n        /* \"#utility.yul\":17895:17917   */\n      add\n        /* \"#utility.yul\":17874:17927   */\n      tag_257\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":17864:17927   */\n      swap3\n      pop\n        /* \"#utility.yul\":17820:17937   */\n      pop\n        /* \"#utility.yul\":17976:17978   */\n      0x20\n        /* \"#utility.yul\":18002:18055   */\n      tag_523\n        /* \"#utility.yul\":18047:18054   */\n      dup6\n        /* \"#utility.yul\":18038:18044   */\n      dup3\n        /* \"#utility.yul\":18027:18036   */\n      dup7\n        /* \"#utility.yul\":18023:18045   */\n      add\n        /* \"#utility.yul\":18002:18055   */\n      tag_257\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":17992:18055   */\n      swap2\n      pop\n        /* \"#utility.yul\":17947:18065   */\n      pop\n        /* \"#utility.yul\":17598:18072   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18078:19167   */\n    tag_65:\n        /* \"#utility.yul\":18182:18188   */\n      0x00\n        /* \"#utility.yul\":18190:18196   */\n      dup1\n        /* \"#utility.yul\":18198:18204   */\n      0x00\n        /* \"#utility.yul\":18206:18212   */\n      dup1\n        /* \"#utility.yul\":18214:18220   */\n      0x00\n        /* \"#utility.yul\":18263:18266   */\n      0xa0\n        /* \"#utility.yul\":18251:18260   */\n      dup7\n        /* \"#utility.yul\":18242:18249   */\n      dup9\n        /* \"#utility.yul\":18238:18261   */\n      sub\n        /* \"#utility.yul\":18234:18267   */\n      slt\n        /* \"#utility.yul\":18231:18351   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":18270:18349   */\n      tag_526\n      tag_252\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":18231:18351   */\n    tag_525:\n        /* \"#utility.yul\":18390:18391   */\n      0x00\n        /* \"#utility.yul\":18415:18468   */\n      tag_527\n        /* \"#utility.yul\":18460:18467   */\n      dup9\n        /* \"#utility.yul\":18451:18457   */\n      dup3\n        /* \"#utility.yul\":18440:18449   */\n      dup10\n        /* \"#utility.yul\":18436:18458   */\n      add\n        /* \"#utility.yul\":18415:18468   */\n      tag_257\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18405:18468   */\n      swap6\n      pop\n        /* \"#utility.yul\":18361:18478   */\n      pop\n        /* \"#utility.yul\":18517:18519   */\n      0x20\n        /* \"#utility.yul\":18543:18596   */\n      tag_528\n        /* \"#utility.yul\":18588:18595   */\n      dup9\n        /* \"#utility.yul\":18579:18585   */\n      dup3\n        /* \"#utility.yul\":18568:18577   */\n      dup10\n        /* \"#utility.yul\":18564:18586   */\n      add\n        /* \"#utility.yul\":18543:18596   */\n      tag_257\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18533:18596   */\n      swap5\n      pop\n        /* \"#utility.yul\":18488:18606   */\n      pop\n        /* \"#utility.yul\":18645:18647   */\n      0x40\n        /* \"#utility.yul\":18671:18724   */\n      tag_529\n        /* \"#utility.yul\":18716:18723   */\n      dup9\n        /* \"#utility.yul\":18707:18713   */\n      dup3\n        /* \"#utility.yul\":18696:18705   */\n      dup10\n        /* \"#utility.yul\":18692:18714   */\n      add\n        /* \"#utility.yul\":18671:18724   */\n      tag_260\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":18661:18724   */\n      swap4\n      pop\n        /* \"#utility.yul\":18616:18734   */\n      pop\n        /* \"#utility.yul\":18773:18775   */\n      0x60\n        /* \"#utility.yul\":18799:18852   */\n      tag_530\n        /* \"#utility.yul\":18844:18851   */\n      dup9\n        /* \"#utility.yul\":18835:18841   */\n      dup3\n        /* \"#utility.yul\":18824:18833   */\n      dup10\n        /* \"#utility.yul\":18820:18842   */\n      add\n        /* \"#utility.yul\":18799:18852   */\n      tag_260\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18789:18852   */\n      swap3\n      pop\n        /* \"#utility.yul\":18744:18862   */\n      pop\n        /* \"#utility.yul\":18929:18932   */\n      0x80\n        /* \"#utility.yul\":18918:18927   */\n      dup7\n        /* \"#utility.yul\":18914:18933   */\n      add\n        /* \"#utility.yul\":18901:18934   */\n      calldataload\n        /* \"#utility.yul\":18961:18979   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18953:18959   */\n      dup2\n        /* \"#utility.yul\":18950:18980   */\n      gt\n        /* \"#utility.yul\":18947:19064   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":18983:19062   */\n      tag_532\n      tag_253\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":18947:19064   */\n    tag_531:\n        /* \"#utility.yul\":19088:19150   */\n      tag_533\n        /* \"#utility.yul\":19142:19149   */\n      dup9\n        /* \"#utility.yul\":19133:19139   */\n      dup3\n        /* \"#utility.yul\":19122:19131   */\n      dup10\n        /* \"#utility.yul\":19118:19140   */\n      add\n        /* \"#utility.yul\":19088:19150   */\n      tag_283\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":19078:19150   */\n      swap2\n      pop\n        /* \"#utility.yul\":18872:19160   */\n      pop\n        /* \"#utility.yul\":18078:19167   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19173:19353   */\n    tag_299:\n        /* \"#utility.yul\":19221:19298   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19218:19219   */\n      0x00\n        /* \"#utility.yul\":19211:19299   */\n      mstore\n        /* \"#utility.yul\":19318:19322   */\n      0x22\n        /* \"#utility.yul\":19315:19316   */\n      0x04\n        /* \"#utility.yul\":19308:19323   */\n      mstore\n        /* \"#utility.yul\":19342:19346   */\n      0x24\n        /* \"#utility.yul\":19339:19340   */\n      0x00\n        /* \"#utility.yul\":19332:19347   */\n      revert\n        /* \"#utility.yul\":19359:19679   */\n    tag_75:\n        /* \"#utility.yul\":19403:19409   */\n      0x00\n        /* \"#utility.yul\":19440:19441   */\n      0x02\n        /* \"#utility.yul\":19434:19438   */\n      dup3\n        /* \"#utility.yul\":19430:19442   */\n      div\n        /* \"#utility.yul\":19420:19442   */\n      swap1\n      pop\n        /* \"#utility.yul\":19487:19488   */\n      0x01\n        /* \"#utility.yul\":19481:19485   */\n      dup3\n        /* \"#utility.yul\":19477:19489   */\n      and\n        /* \"#utility.yul\":19508:19526   */\n      dup1\n        /* \"#utility.yul\":19498:19579   */\n      tag_536\n      jumpi\n        /* \"#utility.yul\":19564:19568   */\n      0x7f\n        /* \"#utility.yul\":19556:19562   */\n      dup3\n        /* \"#utility.yul\":19552:19569   */\n      and\n        /* \"#utility.yul\":19542:19569   */\n      swap2\n      pop\n        /* \"#utility.yul\":19498:19579   */\n    tag_536:\n        /* \"#utility.yul\":19626:19628   */\n      0x20\n        /* \"#utility.yul\":19618:19624   */\n      dup3\n        /* \"#utility.yul\":19615:19629   */\n      lt\n        /* \"#utility.yul\":19595:19613   */\n      dup2\n        /* \"#utility.yul\":19592:19630   */\n      sub\n        /* \"#utility.yul\":19589:19673   */\n      tag_537\n      jumpi\n        /* \"#utility.yul\":19645:19663   */\n      tag_538\n      tag_299\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":19589:19673   */\n    tag_537:\n        /* \"#utility.yul\":19410:19679   */\n      pop\n        /* \"#utility.yul\":19359:19679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19685:19833   */\n    tag_300:\n        /* \"#utility.yul\":19787:19798   */\n      0x00\n        /* \"#utility.yul\":19824:19827   */\n      dup2\n        /* \"#utility.yul\":19809:19827   */\n      swap1\n      pop\n        /* \"#utility.yul\":19685:19833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19839:19980   */\n    tag_301:\n        /* \"#utility.yul\":19888:19892   */\n      0x00\n        /* \"#utility.yul\":19911:19914   */\n      dup2\n        /* \"#utility.yul\":19903:19914   */\n      swap1\n      pop\n        /* \"#utility.yul\":19934:19937   */\n      dup2\n        /* \"#utility.yul\":19931:19932   */\n      0x00\n        /* \"#utility.yul\":19924:19938   */\n      mstore\n        /* \"#utility.yul\":19968:19972   */\n      0x20\n        /* \"#utility.yul\":19965:19966   */\n      0x00\n        /* \"#utility.yul\":19955:19973   */\n      keccak256\n        /* \"#utility.yul\":19947:19973   */\n      swap1\n      pop\n        /* \"#utility.yul\":19839:19980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20010:20884   */\n    tag_302:\n        /* \"#utility.yul\":20113:20116   */\n      0x00\n        /* \"#utility.yul\":20150:20155   */\n      dup2\n        /* \"#utility.yul\":20144:20156   */\n      sload\n        /* \"#utility.yul\":20179:20215   */\n      tag_542\n        /* \"#utility.yul\":20205:20214   */\n      dup2\n        /* \"#utility.yul\":20179:20215   */\n      tag_75\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":20231:20320   */\n      tag_543\n        /* \"#utility.yul\":20313:20319   */\n      dup2\n        /* \"#utility.yul\":20308:20311   */\n      dup7\n        /* \"#utility.yul\":20231:20320   */\n      tag_300\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":20224:20320   */\n      swap5\n      pop\n        /* \"#utility.yul\":20351:20352   */\n      0x01\n        /* \"#utility.yul\":20340:20349   */\n      dup3\n        /* \"#utility.yul\":20336:20353   */\n      and\n        /* \"#utility.yul\":20367:20368   */\n      0x00\n        /* \"#utility.yul\":20362:20528   */\n      dup2\n      eq\n      tag_545\n      jumpi\n        /* \"#utility.yul\":20542:20543   */\n      0x01\n        /* \"#utility.yul\":20537:20878   */\n      dup2\n      eq\n      tag_546\n      jumpi\n        /* \"#utility.yul\":20329:20878   */\n      jump(tag_544)\n        /* \"#utility.yul\":20362:20528   */\n    tag_545:\n        /* \"#utility.yul\":20446:20450   */\n      0xff\n        /* \"#utility.yul\":20442:20451   */\n      not\n        /* \"#utility.yul\":20431:20440   */\n      dup4\n        /* \"#utility.yul\":20427:20452   */\n      and\n        /* \"#utility.yul\":20422:20425   */\n      dup7\n        /* \"#utility.yul\":20415:20453   */\n      mstore\n        /* \"#utility.yul\":20508:20514   */\n      dup2\n        /* \"#utility.yul\":20501:20515   */\n      iszero\n        /* \"#utility.yul\":20494:20516   */\n      iszero\n        /* \"#utility.yul\":20486:20492   */\n      dup3\n        /* \"#utility.yul\":20482:20517   */\n      mul\n        /* \"#utility.yul\":20477:20480   */\n      dup7\n        /* \"#utility.yul\":20473:20518   */\n      add\n        /* \"#utility.yul\":20466:20518   */\n      swap4\n      pop\n        /* \"#utility.yul\":20362:20528   */\n      jump(tag_544)\n        /* \"#utility.yul\":20537:20878   */\n    tag_546:\n        /* \"#utility.yul\":20604:20642   */\n      tag_547\n        /* \"#utility.yul\":20636:20641   */\n      dup6\n        /* \"#utility.yul\":20604:20642   */\n      tag_301\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":20664:20665   */\n      0x00\n        /* \"#utility.yul\":20678:20832   */\n    tag_548:\n        /* \"#utility.yul\":20692:20698   */\n      dup4\n        /* \"#utility.yul\":20689:20690   */\n      dup2\n        /* \"#utility.yul\":20686:20699   */\n      lt\n        /* \"#utility.yul\":20678:20832   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":20766:20773   */\n      dup2\n        /* \"#utility.yul\":20760:20774   */\n      sload\n        /* \"#utility.yul\":20756:20757   */\n      dup2\n        /* \"#utility.yul\":20751:20754   */\n      dup10\n        /* \"#utility.yul\":20747:20758   */\n      add\n        /* \"#utility.yul\":20740:20775   */\n      mstore\n        /* \"#utility.yul\":20816:20817   */\n      0x01\n        /* \"#utility.yul\":20807:20814   */\n      dup3\n        /* \"#utility.yul\":20803:20818   */\n      add\n        /* \"#utility.yul\":20792:20818   */\n      swap2\n      pop\n        /* \"#utility.yul\":20714:20718   */\n      0x20\n        /* \"#utility.yul\":20711:20712   */\n      dup2\n        /* \"#utility.yul\":20707:20719   */\n      add\n        /* \"#utility.yul\":20702:20719   */\n      swap1\n      pop\n        /* \"#utility.yul\":20678:20832   */\n      jump(tag_548)\n    tag_550:\n        /* \"#utility.yul\":20861:20867   */\n      dup4\n        /* \"#utility.yul\":20856:20859   */\n      dup9\n        /* \"#utility.yul\":20852:20868   */\n      add\n        /* \"#utility.yul\":20845:20868   */\n      swap6\n      pop\n        /* \"#utility.yul\":20544:20878   */\n      pop\n      pop\n        /* \"#utility.yul\":20329:20878   */\n    tag_544:\n      pop\n        /* \"#utility.yul\":20117:20884   */\n      pop\n      pop\n        /* \"#utility.yul\":20010:20884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20890:21280   */\n    tag_303:\n        /* \"#utility.yul\":20996:20999   */\n      0x00\n        /* \"#utility.yul\":21024:21063   */\n      tag_552\n        /* \"#utility.yul\":21057:21062   */\n      dup3\n        /* \"#utility.yul\":21024:21063   */\n      tag_267\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":21079:21168   */\n      tag_553\n        /* \"#utility.yul\":21161:21167   */\n      dup2\n        /* \"#utility.yul\":21156:21159   */\n      dup6\n        /* \"#utility.yul\":21079:21168   */\n      tag_300\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":21072:21168   */\n      swap4\n      pop\n        /* \"#utility.yul\":21177:21242   */\n      tag_554\n        /* \"#utility.yul\":21235:21241   */\n      dup2\n        /* \"#utility.yul\":21230:21233   */\n      dup6\n        /* \"#utility.yul\":21223:21227   */\n      0x20\n        /* \"#utility.yul\":21216:21221   */\n      dup7\n        /* \"#utility.yul\":21212:21228   */\n      add\n        /* \"#utility.yul\":21177:21242   */\n      tag_269\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":21267:21273   */\n      dup1\n        /* \"#utility.yul\":21262:21265   */\n      dup5\n        /* \"#utility.yul\":21258:21274   */\n      add\n        /* \"#utility.yul\":21251:21274   */\n      swap2\n      pop\n        /* \"#utility.yul\":21000:21280   */\n      pop\n        /* \"#utility.yul\":20890:21280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21286:21715   */\n    tag_85:\n        /* \"#utility.yul\":21463:21466   */\n      0x00\n        /* \"#utility.yul\":21485:21577   */\n      tag_556\n        /* \"#utility.yul\":21573:21576   */\n      dup3\n        /* \"#utility.yul\":21564:21570   */\n      dup6\n        /* \"#utility.yul\":21485:21577   */\n      tag_302\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":21478:21577   */\n      swap2\n      pop\n        /* \"#utility.yul\":21594:21689   */\n      tag_557\n        /* \"#utility.yul\":21685:21688   */\n      dup3\n        /* \"#utility.yul\":21676:21682   */\n      dup5\n        /* \"#utility.yul\":21594:21689   */\n      tag_303\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":21587:21689   */\n      swap2\n      pop\n        /* \"#utility.yul\":21706:21709   */\n      dup2\n        /* \"#utility.yul\":21699:21709   */\n      swap1\n      pop\n        /* \"#utility.yul\":21286:21715   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21721:21839   */\n    tag_304:\n        /* \"#utility.yul\":21808:21832   */\n      tag_559\n        /* \"#utility.yul\":21826:21831   */\n      dup2\n        /* \"#utility.yul\":21808:21832   */\n      tag_255\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":21803:21806   */\n      dup3\n        /* \"#utility.yul\":21796:21833   */\n      mstore\n        /* \"#utility.yul\":21721:21839   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21845:22177   */\n    tag_95:\n        /* \"#utility.yul\":21966:21970   */\n      0x00\n        /* \"#utility.yul\":22004:22006   */\n      0x40\n        /* \"#utility.yul\":21993:22002   */\n      dup3\n        /* \"#utility.yul\":21989:22007   */\n      add\n        /* \"#utility.yul\":21981:22007   */\n      swap1\n      pop\n        /* \"#utility.yul\":22017:22088   */\n      tag_561\n        /* \"#utility.yul\":22085:22086   */\n      0x00\n        /* \"#utility.yul\":22074:22083   */\n      dup4\n        /* \"#utility.yul\":22070:22087   */\n      add\n        /* \"#utility.yul\":22061:22067   */\n      dup6\n        /* \"#utility.yul\":22017:22088   */\n      tag_304\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":22098:22170   */\n      tag_562\n        /* \"#utility.yul\":22166:22168   */\n      0x20\n        /* \"#utility.yul\":22155:22164   */\n      dup4\n        /* \"#utility.yul\":22151:22169   */\n      add\n        /* \"#utility.yul\":22142:22148   */\n      dup5\n        /* \"#utility.yul\":22098:22170   */\n      tag_304\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":21845:22177   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22183:22515   */\n    tag_101:\n        /* \"#utility.yul\":22304:22308   */\n      0x00\n        /* \"#utility.yul\":22342:22344   */\n      0x40\n        /* \"#utility.yul\":22331:22340   */\n      dup3\n        /* \"#utility.yul\":22327:22345   */\n      add\n        /* \"#utility.yul\":22319:22345   */\n      swap1\n      pop\n        /* \"#utility.yul\":22355:22426   */\n      tag_564\n        /* \"#utility.yul\":22423:22424   */\n      0x00\n        /* \"#utility.yul\":22412:22421   */\n      dup4\n        /* \"#utility.yul\":22408:22425   */\n      add\n        /* \"#utility.yul\":22399:22405   */\n      dup6\n        /* \"#utility.yul\":22355:22426   */\n      tag_261\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":22436:22508   */\n      tag_565\n        /* \"#utility.yul\":22504:22506   */\n      0x20\n        /* \"#utility.yul\":22493:22502   */\n      dup4\n        /* \"#utility.yul\":22489:22507   */\n      add\n        /* \"#utility.yul\":22480:22486   */\n      dup5\n        /* \"#utility.yul\":22436:22508   */\n      tag_261\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":22183:22515   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22521:22701   */\n    tag_116:\n        /* \"#utility.yul\":22569:22646   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22566:22567   */\n      0x00\n        /* \"#utility.yul\":22559:22647   */\n      mstore\n        /* \"#utility.yul\":22666:22670   */\n      0x32\n        /* \"#utility.yul\":22663:22664   */\n      0x04\n        /* \"#utility.yul\":22656:22671   */\n      mstore\n        /* \"#utility.yul\":22690:22694   */\n      0x24\n        /* \"#utility.yul\":22687:22688   */\n      0x00\n        /* \"#utility.yul\":22680:22695   */\n      revert\n        /* \"#utility.yul\":22707:22887   */\n    tag_305:\n        /* \"#utility.yul\":22755:22832   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22752:22753   */\n      0x00\n        /* \"#utility.yul\":22745:22833   */\n      mstore\n        /* \"#utility.yul\":22852:22856   */\n      0x11\n        /* \"#utility.yul\":22849:22850   */\n      0x04\n        /* \"#utility.yul\":22842:22857   */\n      mstore\n        /* \"#utility.yul\":22876:22880   */\n      0x24\n        /* \"#utility.yul\":22873:22874   */\n      0x00\n        /* \"#utility.yul\":22866:22881   */\n      revert\n        /* \"#utility.yul\":22893:23126   */\n    tag_123:\n        /* \"#utility.yul\":22932:22935   */\n      0x00\n        /* \"#utility.yul\":22955:22979   */\n      tag_569\n        /* \"#utility.yul\":22973:22978   */\n      dup3\n        /* \"#utility.yul\":22955:22979   */\n      tag_258\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":22946:22979   */\n      swap2\n      pop\n        /* \"#utility.yul\":23001:23067   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22994:22999   */\n      dup3\n        /* \"#utility.yul\":22991:23068   */\n      sub\n        /* \"#utility.yul\":22988:23091   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":23071:23089   */\n      tag_571\n      tag_305\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":22988:23091   */\n    tag_570:\n        /* \"#utility.yul\":23118:23119   */\n      0x01\n        /* \"#utility.yul\":23111:23116   */\n      dup3\n        /* \"#utility.yul\":23107:23120   */\n      add\n        /* \"#utility.yul\":23100:23120   */\n      swap1\n      pop\n        /* \"#utility.yul\":22893:23126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23132:23354   */\n    tag_148:\n        /* \"#utility.yul\":23225:23229   */\n      0x00\n        /* \"#utility.yul\":23263:23265   */\n      0x20\n        /* \"#utility.yul\":23252:23261   */\n      dup3\n        /* \"#utility.yul\":23248:23266   */\n      add\n        /* \"#utility.yul\":23240:23266   */\n      swap1\n      pop\n        /* \"#utility.yul\":23276:23347   */\n      tag_573\n        /* \"#utility.yul\":23344:23345   */\n      0x00\n        /* \"#utility.yul\":23333:23342   */\n      dup4\n        /* \"#utility.yul\":23329:23346   */\n      add\n        /* \"#utility.yul\":23320:23326   */\n      dup5\n        /* \"#utility.yul\":23276:23347   */\n      tag_304\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":23132:23354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23360:23453   */\n    tag_306:\n        /* \"#utility.yul\":23397:23403   */\n      0x00\n        /* \"#utility.yul\":23444:23446   */\n      0x20\n        /* \"#utility.yul\":23439:23441   */\n      0x1f\n        /* \"#utility.yul\":23432:23437   */\n      dup4\n        /* \"#utility.yul\":23428:23442   */\n      add\n        /* \"#utility.yul\":23424:23447   */\n      div\n        /* \"#utility.yul\":23414:23447   */\n      swap1\n      pop\n        /* \"#utility.yul\":23360:23453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23459:23566   */\n    tag_307:\n        /* \"#utility.yul\":23503:23511   */\n      0x00\n        /* \"#utility.yul\":23553:23558   */\n      dup3\n        /* \"#utility.yul\":23547:23551   */\n      dup3\n        /* \"#utility.yul\":23543:23559   */\n      shl\n        /* \"#utility.yul\":23522:23559   */\n      swap1\n      pop\n        /* \"#utility.yul\":23459:23566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23572:23965   */\n    tag_308:\n        /* \"#utility.yul\":23641:23647   */\n      0x00\n        /* \"#utility.yul\":23691:23692   */\n      0x08\n        /* \"#utility.yul\":23679:23689   */\n      dup4\n        /* \"#utility.yul\":23675:23693   */\n      mul\n        /* \"#utility.yul\":23714:23811   */\n      tag_577\n        /* \"#utility.yul\":23744:23810   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23733:23742   */\n      dup3\n        /* \"#utility.yul\":23714:23811   */\n      tag_307\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":23832:23871   */\n      tag_578\n        /* \"#utility.yul\":23862:23870   */\n      dup7\n        /* \"#utility.yul\":23851:23860   */\n      dup4\n        /* \"#utility.yul\":23832:23871   */\n      tag_307\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":23820:23871   */\n      swap6\n      pop\n        /* \"#utility.yul\":23904:23908   */\n      dup1\n        /* \"#utility.yul\":23900:23909   */\n      not\n        /* \"#utility.yul\":23893:23898   */\n      dup5\n        /* \"#utility.yul\":23889:23910   */\n      and\n        /* \"#utility.yul\":23880:23910   */\n      swap4\n      pop\n        /* \"#utility.yul\":23953:23957   */\n      dup1\n        /* \"#utility.yul\":23943:23951   */\n      dup7\n        /* \"#utility.yul\":23939:23958   */\n      and\n        /* \"#utility.yul\":23932:23937   */\n      dup5\n        /* \"#utility.yul\":23929:23959   */\n      or\n        /* \"#utility.yul\":23919:23959   */\n      swap3\n      pop\n        /* \"#utility.yul\":23648:23965   */\n      pop\n      pop\n        /* \"#utility.yul\":23572:23965   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23971:24031   */\n    tag_309:\n        /* \"#utility.yul\":23999:24002   */\n      0x00\n        /* \"#utility.yul\":24020:24025   */\n      dup2\n        /* \"#utility.yul\":24013:24025   */\n      swap1\n      pop\n        /* \"#utility.yul\":23971:24031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24037:24179   */\n    tag_310:\n        /* \"#utility.yul\":24087:24096   */\n      0x00\n        /* \"#utility.yul\":24120:24173   */\n      tag_581\n        /* \"#utility.yul\":24138:24172   */\n      tag_582\n        /* \"#utility.yul\":24147:24171   */\n      tag_583\n        /* \"#utility.yul\":24165:24170   */\n      dup5\n        /* \"#utility.yul\":24147:24171   */\n      tag_258\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":24138:24172   */\n      tag_309\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":24120:24173   */\n      tag_258\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":24107:24173   */\n      swap1\n      pop\n        /* \"#utility.yul\":24037:24179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24185:24260   */\n    tag_311:\n        /* \"#utility.yul\":24228:24231   */\n      0x00\n        /* \"#utility.yul\":24249:24254   */\n      dup2\n        /* \"#utility.yul\":24242:24254   */\n      swap1\n      pop\n        /* \"#utility.yul\":24185:24260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24266:24535   */\n    tag_312:\n        /* \"#utility.yul\":24376:24415   */\n      tag_586\n        /* \"#utility.yul\":24407:24414   */\n      dup4\n        /* \"#utility.yul\":24376:24415   */\n      tag_310\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":24437:24528   */\n      tag_587\n        /* \"#utility.yul\":24486:24527   */\n      tag_588\n        /* \"#utility.yul\":24510:24526   */\n      dup3\n        /* \"#utility.yul\":24486:24527   */\n      tag_311\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":24478:24484   */\n      dup5\n        /* \"#utility.yul\":24471:24475   */\n      dup5\n        /* \"#utility.yul\":24465:24476   */\n      sload\n        /* \"#utility.yul\":24437:24528   */\n      tag_308\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":24431:24435   */\n      dup3\n        /* \"#utility.yul\":24424:24529   */\n      sstore\n        /* \"#utility.yul\":24342:24535   */\n      pop\n        /* \"#utility.yul\":24266:24535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24541:24614   */\n    tag_313:\n        /* \"#utility.yul\":24586:24589   */\n      0x00\n        /* \"#utility.yul\":24541:24614   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24620:24809   */\n    tag_314:\n        /* \"#utility.yul\":24697:24729   */\n      tag_591\n      tag_313\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":24738:24803   */\n      tag_592\n        /* \"#utility.yul\":24796:24802   */\n      dup2\n        /* \"#utility.yul\":24788:24794   */\n      dup5\n        /* \"#utility.yul\":24782:24786   */\n      dup5\n        /* \"#utility.yul\":24738:24803   */\n      tag_312\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":24673:24809   */\n      pop\n        /* \"#utility.yul\":24620:24809   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24815:25001   */\n    tag_315:\n        /* \"#utility.yul\":24875:24995   */\n    tag_594:\n        /* \"#utility.yul\":24892:24895   */\n      dup2\n        /* \"#utility.yul\":24885:24890   */\n      dup2\n        /* \"#utility.yul\":24882:24896   */\n      lt\n        /* \"#utility.yul\":24875:24995   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":24946:24985   */\n      tag_597\n        /* \"#utility.yul\":24983:24984   */\n      0x00\n        /* \"#utility.yul\":24976:24981   */\n      dup3\n        /* \"#utility.yul\":24946:24985   */\n      tag_314\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":24919:24920   */\n      0x01\n        /* \"#utility.yul\":24912:24917   */\n      dup2\n        /* \"#utility.yul\":24908:24921   */\n      add\n        /* \"#utility.yul\":24899:24921   */\n      swap1\n      pop\n        /* \"#utility.yul\":24875:24995   */\n      jump(tag_594)\n    tag_596:\n        /* \"#utility.yul\":24815:25001   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25007:25550   */\n    tag_316:\n        /* \"#utility.yul\":25108:25110   */\n      0x1f\n        /* \"#utility.yul\":25103:25106   */\n      dup3\n        /* \"#utility.yul\":25100:25111   */\n      gt\n        /* \"#utility.yul\":25097:25543   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":25142:25180   */\n      tag_600\n        /* \"#utility.yul\":25174:25179   */\n      dup2\n        /* \"#utility.yul\":25142:25180   */\n      tag_301\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":25226:25255   */\n      tag_601\n        /* \"#utility.yul\":25244:25254   */\n      dup5\n        /* \"#utility.yul\":25226:25255   */\n      tag_306\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":25216:25224   */\n      dup2\n        /* \"#utility.yul\":25212:25256   */\n      add\n        /* \"#utility.yul\":25409:25411   */\n      0x20\n        /* \"#utility.yul\":25397:25407   */\n      dup6\n        /* \"#utility.yul\":25394:25412   */\n      lt\n        /* \"#utility.yul\":25391:25440   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":25430:25438   */\n      dup2\n        /* \"#utility.yul\":25415:25438   */\n      swap1\n      pop\n        /* \"#utility.yul\":25391:25440   */\n    tag_602:\n        /* \"#utility.yul\":25453:25533   */\n      tag_603\n        /* \"#utility.yul\":25509:25531   */\n      tag_604\n        /* \"#utility.yul\":25527:25530   */\n      dup6\n        /* \"#utility.yul\":25509:25531   */\n      tag_306\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":25499:25507   */\n      dup4\n        /* \"#utility.yul\":25495:25532   */\n      add\n        /* \"#utility.yul\":25482:25493   */\n      dup3\n        /* \"#utility.yul\":25453:25533   */\n      tag_315\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":25112:25543   */\n      pop\n      pop\n        /* \"#utility.yul\":25097:25543   */\n    tag_599:\n        /* \"#utility.yul\":25007:25550   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25556:25673   */\n    tag_317:\n        /* \"#utility.yul\":25610:25618   */\n      0x00\n        /* \"#utility.yul\":25660:25665   */\n      dup3\n        /* \"#utility.yul\":25654:25658   */\n      dup3\n        /* \"#utility.yul\":25650:25666   */\n      shr\n        /* \"#utility.yul\":25629:25666   */\n      swap1\n      pop\n        /* \"#utility.yul\":25556:25673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25679:25848   */\n    tag_318:\n        /* \"#utility.yul\":25723:25729   */\n      0x00\n        /* \"#utility.yul\":25756:25807   */\n      tag_607\n        /* \"#utility.yul\":25804:25805   */\n      0x00\n        /* \"#utility.yul\":25800:25806   */\n      not\n        /* \"#utility.yul\":25792:25797   */\n      dup5\n        /* \"#utility.yul\":25789:25790   */\n      0x08\n        /* \"#utility.yul\":25785:25798   */\n      mul\n        /* \"#utility.yul\":25756:25807   */\n      tag_317\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":25752:25808   */\n      not\n        /* \"#utility.yul\":25837:25841   */\n      dup1\n        /* \"#utility.yul\":25831:25835   */\n      dup4\n        /* \"#utility.yul\":25827:25842   */\n      and\n        /* \"#utility.yul\":25817:25842   */\n      swap2\n      pop\n        /* \"#utility.yul\":25730:25848   */\n      pop\n        /* \"#utility.yul\":25679:25848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25853:26148   */\n    tag_319:\n        /* \"#utility.yul\":25929:25933   */\n      0x00\n        /* \"#utility.yul\":26075:26104   */\n      tag_609\n        /* \"#utility.yul\":26100:26103   */\n      dup4\n        /* \"#utility.yul\":26094:26098   */\n      dup4\n        /* \"#utility.yul\":26075:26104   */\n      tag_318\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":26067:26104   */\n      swap2\n      pop\n        /* \"#utility.yul\":26137:26140   */\n      dup3\n        /* \"#utility.yul\":26134:26135   */\n      0x02\n        /* \"#utility.yul\":26130:26141   */\n      mul\n        /* \"#utility.yul\":26124:26128   */\n      dup3\n        /* \"#utility.yul\":26121:26142   */\n      or\n        /* \"#utility.yul\":26113:26142   */\n      swap1\n      pop\n        /* \"#utility.yul\":25853:26148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26153:27548   */\n    tag_163:\n        /* \"#utility.yul\":26270:26307   */\n      tag_611\n        /* \"#utility.yul\":26303:26306   */\n      dup3\n        /* \"#utility.yul\":26270:26307   */\n      tag_267\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":26372:26390   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26364:26370   */\n      dup2\n        /* \"#utility.yul\":26361:26391   */\n      gt\n        /* \"#utility.yul\":26358:26414   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":26394:26412   */\n      tag_613\n      tag_104\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":26358:26414   */\n    tag_612:\n        /* \"#utility.yul\":26438:26476   */\n      tag_614\n        /* \"#utility.yul\":26470:26474   */\n      dup3\n        /* \"#utility.yul\":26464:26475   */\n      sload\n        /* \"#utility.yul\":26438:26476   */\n      tag_75\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":26523:26590   */\n      tag_615\n        /* \"#utility.yul\":26583:26589   */\n      dup3\n        /* \"#utility.yul\":26575:26581   */\n      dup3\n        /* \"#utility.yul\":26569:26573   */\n      dup6\n        /* \"#utility.yul\":26523:26590   */\n      tag_316\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":26617:26618   */\n      0x00\n        /* \"#utility.yul\":26641:26645   */\n      0x20\n        /* \"#utility.yul\":26628:26645   */\n      swap1\n      pop\n        /* \"#utility.yul\":26673:26675   */\n      0x1f\n        /* \"#utility.yul\":26665:26671   */\n      dup4\n        /* \"#utility.yul\":26662:26676   */\n      gt\n        /* \"#utility.yul\":26690:26691   */\n      0x01\n        /* \"#utility.yul\":26685:27303   */\n      dup2\n      eq\n      tag_617\n      jumpi\n        /* \"#utility.yul\":27347:27348   */\n      0x00\n        /* \"#utility.yul\":27364:27370   */\n      dup5\n        /* \"#utility.yul\":27361:27438   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":27413:27422   */\n      dup3\n        /* \"#utility.yul\":27408:27411   */\n      dup8\n        /* \"#utility.yul\":27404:27423   */\n      add\n        /* \"#utility.yul\":27398:27424   */\n      mload\n        /* \"#utility.yul\":27389:27424   */\n      swap1\n      pop\n        /* \"#utility.yul\":27361:27438   */\n    tag_618:\n        /* \"#utility.yul\":27464:27531   */\n      tag_619\n        /* \"#utility.yul\":27524:27530   */\n      dup6\n        /* \"#utility.yul\":27517:27522   */\n      dup3\n        /* \"#utility.yul\":27464:27531   */\n      tag_319\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":27458:27462   */\n      dup7\n        /* \"#utility.yul\":27451:27532   */\n      sstore\n        /* \"#utility.yul\":27320:27542   */\n      pop\n        /* \"#utility.yul\":26655:27542   */\n      jump(tag_616)\n        /* \"#utility.yul\":26685:27303   */\n    tag_617:\n        /* \"#utility.yul\":26737:26741   */\n      0x1f\n        /* \"#utility.yul\":26733:26742   */\n      not\n        /* \"#utility.yul\":26725:26731   */\n      dup5\n        /* \"#utility.yul\":26721:26743   */\n      and\n        /* \"#utility.yul\":26771:26808   */\n      tag_620\n        /* \"#utility.yul\":26803:26807   */\n      dup7\n        /* \"#utility.yul\":26771:26808   */\n      tag_301\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":26830:26831   */\n      0x00\n        /* \"#utility.yul\":26844:27052   */\n    tag_621:\n        /* \"#utility.yul\":26858:26865   */\n      dup3\n        /* \"#utility.yul\":26855:26856   */\n      dup2\n        /* \"#utility.yul\":26852:26866   */\n      lt\n        /* \"#utility.yul\":26844:27052   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":26937:26946   */\n      dup5\n        /* \"#utility.yul\":26932:26935   */\n      dup10\n        /* \"#utility.yul\":26928:26947   */\n      add\n        /* \"#utility.yul\":26922:26948   */\n      mload\n        /* \"#utility.yul\":26914:26920   */\n      dup3\n        /* \"#utility.yul\":26907:26949   */\n      sstore\n        /* \"#utility.yul\":26988:26989   */\n      0x01\n        /* \"#utility.yul\":26980:26986   */\n      dup3\n        /* \"#utility.yul\":26976:26990   */\n      add\n        /* \"#utility.yul\":26966:26990   */\n      swap2\n      pop\n        /* \"#utility.yul\":27035:27037   */\n      0x20\n        /* \"#utility.yul\":27024:27033   */\n      dup6\n        /* \"#utility.yul\":27020:27038   */\n      add\n        /* \"#utility.yul\":27007:27038   */\n      swap5\n      pop\n        /* \"#utility.yul\":26881:26885   */\n      0x20\n        /* \"#utility.yul\":26878:26879   */\n      dup2\n        /* \"#utility.yul\":26874:26886   */\n      add\n        /* \"#utility.yul\":26869:26886   */\n      swap1\n      pop\n        /* \"#utility.yul\":26844:27052   */\n      jump(tag_621)\n    tag_623:\n        /* \"#utility.yul\":27080:27086   */\n      dup7\n        /* \"#utility.yul\":27071:27078   */\n      dup4\n        /* \"#utility.yul\":27068:27087   */\n      lt\n        /* \"#utility.yul\":27065:27244   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":27138:27147   */\n      dup5\n        /* \"#utility.yul\":27133:27136   */\n      dup10\n        /* \"#utility.yul\":27129:27148   */\n      add\n        /* \"#utility.yul\":27123:27149   */\n      mload\n        /* \"#utility.yul\":27181:27229   */\n      tag_625\n        /* \"#utility.yul\":27223:27227   */\n      0x1f\n        /* \"#utility.yul\":27215:27221   */\n      dup10\n        /* \"#utility.yul\":27211:27228   */\n      and\n        /* \"#utility.yul\":27200:27209   */\n      dup3\n        /* \"#utility.yul\":27181:27229   */\n      tag_318\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":27173:27179   */\n      dup4\n        /* \"#utility.yul\":27166:27230   */\n      sstore\n        /* \"#utility.yul\":27088:27244   */\n      pop\n        /* \"#utility.yul\":27065:27244   */\n    tag_624:\n        /* \"#utility.yul\":27290:27291   */\n      0x01\n        /* \"#utility.yul\":27286:27287   */\n      0x02\n        /* \"#utility.yul\":27278:27284   */\n      dup9\n        /* \"#utility.yul\":27274:27288   */\n      mul\n        /* \"#utility.yul\":27270:27292   */\n      add\n        /* \"#utility.yul\":27264:27268   */\n      dup9\n        /* \"#utility.yul\":27257:27293   */\n      sstore\n        /* \"#utility.yul\":26692:27303   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26655:27542   */\n    tag_616:\n      pop\n        /* \"#utility.yul\":26245:27548   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26153:27548   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27554:28107   */\n    tag_203:\n        /* \"#utility.yul\":27731:27735   */\n      0x00\n        /* \"#utility.yul\":27769:27772   */\n      0x80\n        /* \"#utility.yul\":27758:27767   */\n      dup3\n        /* \"#utility.yul\":27754:27773   */\n      add\n        /* \"#utility.yul\":27746:27773   */\n      swap1\n      pop\n        /* \"#utility.yul\":27783:27854   */\n      tag_627\n        /* \"#utility.yul\":27851:27852   */\n      0x00\n        /* \"#utility.yul\":27840:27849   */\n      dup4\n        /* \"#utility.yul\":27836:27853   */\n      add\n        /* \"#utility.yul\":27827:27833   */\n      dup8\n        /* \"#utility.yul\":27783:27854   */\n      tag_304\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":27864:27936   */\n      tag_628\n        /* \"#utility.yul\":27932:27934   */\n      0x20\n        /* \"#utility.yul\":27921:27930   */\n      dup4\n        /* \"#utility.yul\":27917:27935   */\n      add\n        /* \"#utility.yul\":27908:27914   */\n      dup7\n        /* \"#utility.yul\":27864:27936   */\n      tag_261\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":27946:28018   */\n      tag_629\n        /* \"#utility.yul\":28014:28016   */\n      0x40\n        /* \"#utility.yul\":28003:28012   */\n      dup4\n        /* \"#utility.yul\":27999:28017   */\n      add\n        /* \"#utility.yul\":27990:27996   */\n      dup6\n        /* \"#utility.yul\":27946:28018   */\n      tag_261\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":28028:28100   */\n      tag_630\n        /* \"#utility.yul\":28096:28098   */\n      0x60\n        /* \"#utility.yul\":28085:28094   */\n      dup4\n        /* \"#utility.yul\":28081:28099   */\n      add\n        /* \"#utility.yul\":28072:28078   */\n      dup5\n        /* \"#utility.yul\":28028:28100   */\n      tag_261\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":27554:28107   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28113:28304   */\n    tag_206:\n        /* \"#utility.yul\":28153:28156   */\n      0x00\n        /* \"#utility.yul\":28172:28192   */\n      tag_632\n        /* \"#utility.yul\":28190:28191   */\n      dup3\n        /* \"#utility.yul\":28172:28192   */\n      tag_258\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":28167:28192   */\n      swap2\n      pop\n        /* \"#utility.yul\":28206:28226   */\n      tag_633\n        /* \"#utility.yul\":28224:28225   */\n      dup4\n        /* \"#utility.yul\":28206:28226   */\n      tag_258\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":28201:28226   */\n      swap3\n      pop\n        /* \"#utility.yul\":28249:28250   */\n      dup3\n        /* \"#utility.yul\":28246:28247   */\n      dup3\n        /* \"#utility.yul\":28242:28251   */\n      add\n        /* \"#utility.yul\":28235:28251   */\n      swap1\n      pop\n        /* \"#utility.yul\":28270:28273   */\n      dup1\n        /* \"#utility.yul\":28267:28268   */\n      dup3\n        /* \"#utility.yul\":28264:28274   */\n      gt\n        /* \"#utility.yul\":28261:28297   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":28277:28295   */\n      tag_635\n      tag_305\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":28261:28297   */\n    tag_634:\n        /* \"#utility.yul\":28113:28304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28310:28944   */\n    tag_213:\n        /* \"#utility.yul\":28531:28535   */\n      0x00\n        /* \"#utility.yul\":28569:28571   */\n      0x40\n        /* \"#utility.yul\":28558:28567   */\n      dup3\n        /* \"#utility.yul\":28554:28572   */\n      add\n        /* \"#utility.yul\":28546:28572   */\n      swap1\n      pop\n        /* \"#utility.yul\":28618:28627   */\n      dup2\n        /* \"#utility.yul\":28612:28616   */\n      dup2\n        /* \"#utility.yul\":28608:28628   */\n      sub\n        /* \"#utility.yul\":28604:28605   */\n      0x00\n        /* \"#utility.yul\":28593:28602   */\n      dup4\n        /* \"#utility.yul\":28589:28606   */\n      add\n        /* \"#utility.yul\":28582:28629   */\n      mstore\n        /* \"#utility.yul\":28646:28754   */\n      tag_637\n        /* \"#utility.yul\":28749:28753   */\n      dup2\n        /* \"#utility.yul\":28740:28746   */\n      dup6\n        /* \"#utility.yul\":28646:28754   */\n      tag_293\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":28638:28754   */\n      swap1\n      pop\n        /* \"#utility.yul\":28801:28810   */\n      dup2\n        /* \"#utility.yul\":28795:28799   */\n      dup2\n        /* \"#utility.yul\":28791:28811   */\n      sub\n        /* \"#utility.yul\":28786:28788   */\n      0x20\n        /* \"#utility.yul\":28775:28784   */\n      dup4\n        /* \"#utility.yul\":28771:28789   */\n      add\n        /* \"#utility.yul\":28764:28812   */\n      mstore\n        /* \"#utility.yul\":28829:28937   */\n      tag_638\n        /* \"#utility.yul\":28932:28936   */\n      dup2\n        /* \"#utility.yul\":28923:28929   */\n      dup5\n        /* \"#utility.yul\":28829:28937   */\n      tag_293\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":28821:28937   */\n      swap1\n      pop\n        /* \"#utility.yul\":28310:28944   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28950:29048   */\n    tag_320:\n        /* \"#utility.yul\":29001:29007   */\n      0x00\n        /* \"#utility.yul\":29035:29040   */\n      dup2\n        /* \"#utility.yul\":29029:29041   */\n      mload\n        /* \"#utility.yul\":29019:29041   */\n      swap1\n      pop\n        /* \"#utility.yul\":28950:29048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29054:29222   */\n    tag_321:\n        /* \"#utility.yul\":29137:29148   */\n      0x00\n        /* \"#utility.yul\":29171:29177   */\n      dup3\n        /* \"#utility.yul\":29166:29169   */\n      dup3\n        /* \"#utility.yul\":29159:29178   */\n      mstore\n        /* \"#utility.yul\":29211:29215   */\n      0x20\n        /* \"#utility.yul\":29206:29209   */\n      dup3\n        /* \"#utility.yul\":29202:29216   */\n      add\n        /* \"#utility.yul\":29187:29216   */\n      swap1\n      pop\n        /* \"#utility.yul\":29054:29222   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29228:29601   */\n    tag_322:\n        /* \"#utility.yul\":29314:29317   */\n      0x00\n        /* \"#utility.yul\":29342:29380   */\n      tag_642\n        /* \"#utility.yul\":29374:29379   */\n      dup3\n        /* \"#utility.yul\":29342:29380   */\n      tag_320\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":29396:29466   */\n      tag_643\n        /* \"#utility.yul\":29459:29465   */\n      dup2\n        /* \"#utility.yul\":29454:29457   */\n      dup6\n        /* \"#utility.yul\":29396:29466   */\n      tag_321\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":29389:29466   */\n      swap4\n      pop\n        /* \"#utility.yul\":29475:29540   */\n      tag_644\n        /* \"#utility.yul\":29533:29539   */\n      dup2\n        /* \"#utility.yul\":29528:29531   */\n      dup6\n        /* \"#utility.yul\":29521:29525   */\n      0x20\n        /* \"#utility.yul\":29514:29519   */\n      dup7\n        /* \"#utility.yul\":29510:29526   */\n      add\n        /* \"#utility.yul\":29475:29540   */\n      tag_269\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":29565:29594   */\n      tag_645\n        /* \"#utility.yul\":29587:29593   */\n      dup2\n        /* \"#utility.yul\":29565:29594   */\n      tag_270\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":29560:29563   */\n      dup5\n        /* \"#utility.yul\":29556:29595   */\n      add\n        /* \"#utility.yul\":29549:29595   */\n      swap2\n      pop\n        /* \"#utility.yul\":29318:29601   */\n      pop\n        /* \"#utility.yul\":29228:29601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29607:30358   */\n    tag_217:\n        /* \"#utility.yul\":29830:29834   */\n      0x00\n        /* \"#utility.yul\":29868:29871   */\n      0xa0\n        /* \"#utility.yul\":29857:29866   */\n      dup3\n        /* \"#utility.yul\":29853:29872   */\n      add\n        /* \"#utility.yul\":29845:29872   */\n      swap1\n      pop\n        /* \"#utility.yul\":29882:29953   */\n      tag_647\n        /* \"#utility.yul\":29950:29951   */\n      0x00\n        /* \"#utility.yul\":29939:29948   */\n      dup4\n        /* \"#utility.yul\":29935:29952   */\n      add\n        /* \"#utility.yul\":29926:29932   */\n      dup9\n        /* \"#utility.yul\":29882:29953   */\n      tag_304\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":29963:30035   */\n      tag_648\n        /* \"#utility.yul\":30031:30033   */\n      0x20\n        /* \"#utility.yul\":30020:30029   */\n      dup4\n        /* \"#utility.yul\":30016:30034   */\n      add\n        /* \"#utility.yul\":30007:30013   */\n      dup8\n        /* \"#utility.yul\":29963:30035   */\n      tag_304\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":30045:30117   */\n      tag_649\n        /* \"#utility.yul\":30113:30115   */\n      0x40\n        /* \"#utility.yul\":30102:30111   */\n      dup4\n        /* \"#utility.yul\":30098:30116   */\n      add\n        /* \"#utility.yul\":30089:30095   */\n      dup7\n        /* \"#utility.yul\":30045:30117   */\n      tag_261\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":30127:30199   */\n      tag_650\n        /* \"#utility.yul\":30195:30197   */\n      0x60\n        /* \"#utility.yul\":30184:30193   */\n      dup4\n        /* \"#utility.yul\":30180:30198   */\n      add\n        /* \"#utility.yul\":30171:30177   */\n      dup6\n        /* \"#utility.yul\":30127:30199   */\n      tag_261\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":30247:30256   */\n      dup2\n        /* \"#utility.yul\":30241:30245   */\n      dup2\n        /* \"#utility.yul\":30237:30257   */\n      sub\n        /* \"#utility.yul\":30231:30234   */\n      0x80\n        /* \"#utility.yul\":30220:30229   */\n      dup4\n        /* \"#utility.yul\":30216:30235   */\n      add\n        /* \"#utility.yul\":30209:30258   */\n      mstore\n        /* \"#utility.yul\":30275:30351   */\n      tag_651\n        /* \"#utility.yul\":30346:30350   */\n      dup2\n        /* \"#utility.yul\":30337:30343   */\n      dup5\n        /* \"#utility.yul\":30275:30351   */\n      tag_322\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":30267:30351   */\n      swap1\n      pop\n        /* \"#utility.yul\":29607:30358   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30364:30505   */\n    tag_323:\n        /* \"#utility.yul\":30420:30425   */\n      0x00\n        /* \"#utility.yul\":30451:30457   */\n      dup2\n        /* \"#utility.yul\":30445:30458   */\n      mload\n        /* \"#utility.yul\":30436:30458   */\n      swap1\n      pop\n        /* \"#utility.yul\":30467:30499   */\n      tag_653\n        /* \"#utility.yul\":30493:30498   */\n      dup2\n        /* \"#utility.yul\":30467:30499   */\n      tag_263\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":30364:30505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30511:30860   */\n    tag_220:\n        /* \"#utility.yul\":30580:30586   */\n      0x00\n        /* \"#utility.yul\":30629:30631   */\n      0x20\n        /* \"#utility.yul\":30617:30626   */\n      dup3\n        /* \"#utility.yul\":30608:30615   */\n      dup5\n        /* \"#utility.yul\":30604:30627   */\n      sub\n        /* \"#utility.yul\":30600:30632   */\n      slt\n        /* \"#utility.yul\":30597:30716   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":30635:30714   */\n      tag_656\n      tag_252\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":30597:30716   */\n    tag_655:\n        /* \"#utility.yul\":30755:30756   */\n      0x00\n        /* \"#utility.yul\":30780:30843   */\n      tag_657\n        /* \"#utility.yul\":30835:30842   */\n      dup5\n        /* \"#utility.yul\":30826:30832   */\n      dup3\n        /* \"#utility.yul\":30815:30824   */\n      dup6\n        /* \"#utility.yul\":30811:30833   */\n      add\n        /* \"#utility.yul\":30780:30843   */\n      tag_323\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":30770:30843   */\n      swap2\n      pop\n        /* \"#utility.yul\":30726:30853   */\n      pop\n        /* \"#utility.yul\":30511:30860   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30866:31919   */\n    tag_236:\n        /* \"#utility.yul\":31189:31193   */\n      0x00\n        /* \"#utility.yul\":31227:31230   */\n      0xa0\n        /* \"#utility.yul\":31216:31225   */\n      dup3\n        /* \"#utility.yul\":31212:31231   */\n      add\n        /* \"#utility.yul\":31204:31231   */\n      swap1\n      pop\n        /* \"#utility.yul\":31241:31312   */\n      tag_659\n        /* \"#utility.yul\":31309:31310   */\n      0x00\n        /* \"#utility.yul\":31298:31307   */\n      dup4\n        /* \"#utility.yul\":31294:31311   */\n      add\n        /* \"#utility.yul\":31285:31291   */\n      dup9\n        /* \"#utility.yul\":31241:31312   */\n      tag_304\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":31322:31394   */\n      tag_660\n        /* \"#utility.yul\":31390:31392   */\n      0x20\n        /* \"#utility.yul\":31379:31388   */\n      dup4\n        /* \"#utility.yul\":31375:31393   */\n      add\n        /* \"#utility.yul\":31366:31372   */\n      dup8\n        /* \"#utility.yul\":31322:31394   */\n      tag_304\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":31441:31450   */\n      dup2\n        /* \"#utility.yul\":31435:31439   */\n      dup2\n        /* \"#utility.yul\":31431:31451   */\n      sub\n        /* \"#utility.yul\":31426:31428   */\n      0x40\n        /* \"#utility.yul\":31415:31424   */\n      dup4\n        /* \"#utility.yul\":31411:31429   */\n      add\n        /* \"#utility.yul\":31404:31452   */\n      mstore\n        /* \"#utility.yul\":31469:31577   */\n      tag_661\n        /* \"#utility.yul\":31572:31576   */\n      dup2\n        /* \"#utility.yul\":31563:31569   */\n      dup7\n        /* \"#utility.yul\":31469:31577   */\n      tag_293\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":31461:31577   */\n      swap1\n      pop\n        /* \"#utility.yul\":31624:31633   */\n      dup2\n        /* \"#utility.yul\":31618:31622   */\n      dup2\n        /* \"#utility.yul\":31614:31634   */\n      sub\n        /* \"#utility.yul\":31609:31611   */\n      0x60\n        /* \"#utility.yul\":31598:31607   */\n      dup4\n        /* \"#utility.yul\":31594:31612   */\n      add\n        /* \"#utility.yul\":31587:31635   */\n      mstore\n        /* \"#utility.yul\":31652:31760   */\n      tag_662\n        /* \"#utility.yul\":31755:31759   */\n      dup2\n        /* \"#utility.yul\":31746:31752   */\n      dup6\n        /* \"#utility.yul\":31652:31760   */\n      tag_293\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":31644:31760   */\n      swap1\n      pop\n        /* \"#utility.yul\":31808:31817   */\n      dup2\n        /* \"#utility.yul\":31802:31806   */\n      dup2\n        /* \"#utility.yul\":31798:31818   */\n      sub\n        /* \"#utility.yul\":31792:31795   */\n      0x80\n        /* \"#utility.yul\":31781:31790   */\n      dup4\n        /* \"#utility.yul\":31777:31796   */\n      add\n        /* \"#utility.yul\":31770:31819   */\n      mstore\n        /* \"#utility.yul\":31836:31912   */\n      tag_663\n        /* \"#utility.yul\":31907:31911   */\n      dup2\n        /* \"#utility.yul\":31898:31904   */\n      dup5\n        /* \"#utility.yul\":31836:31912   */\n      tag_322\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":31828:31912   */\n      swap1\n      pop\n        /* \"#utility.yul\":30866:31919   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201c9bc8ffc77b814d6da0adac9cabc17ac141f86175dde5a6265fd86ec23c04eb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3242": {
									"entryPoint": null,
									"id": 3242,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setURI_810": {
									"entryPoint": 82,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:15",
										"nodeType": "YulBlock",
										"src": "0:5231:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:15",
													"nodeType": "YulBlock",
													"src": "66:40:15",
													"statements": [
														{
															"nativeSrc": "77:22:15",
															"nodeType": "YulAssignment",
															"src": "77:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:15"
																},
																"nativeSrc": "87:12:15",
																"nodeType": "YulFunctionCall",
																"src": "87:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:15",
														"nodeType": "YulTypedName",
														"src": "49:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:15",
														"nodeType": "YulTypedName",
														"src": "59:6:15",
														"type": ""
													}
												],
												"src": "7:99:15"
											},
											{
												"body": {
													"nativeSrc": "140:152:15",
													"nodeType": "YulBlock",
													"src": "140:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:15",
																		"nodeType": "YulLiteral",
																		"src": "157:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:15",
																		"nodeType": "YulLiteral",
																		"src": "160:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:15"
																},
																"nativeSrc": "150:88:15",
																"nodeType": "YulFunctionCall",
																"src": "150:88:15"
															},
															"nativeSrc": "150:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:15",
																		"nodeType": "YulLiteral",
																		"src": "254:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:15",
																		"nodeType": "YulLiteral",
																		"src": "257:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:15"
																},
																"nativeSrc": "247:15:15",
																"nodeType": "YulFunctionCall",
																"src": "247:15:15"
															},
															"nativeSrc": "247:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:15",
																		"nodeType": "YulLiteral",
																		"src": "278:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:15",
																		"nodeType": "YulLiteral",
																		"src": "281:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:15"
																},
																"nativeSrc": "271:15:15",
																"nodeType": "YulFunctionCall",
																"src": "271:15:15"
															},
															"nativeSrc": "271:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:15"
											},
											{
												"body": {
													"nativeSrc": "326:152:15",
													"nodeType": "YulBlock",
													"src": "326:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:15",
																		"nodeType": "YulLiteral",
																		"src": "343:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:15",
																		"nodeType": "YulLiteral",
																		"src": "346:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:15"
																},
																"nativeSrc": "336:88:15",
																"nodeType": "YulFunctionCall",
																"src": "336:88:15"
															},
															"nativeSrc": "336:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:15",
																		"nodeType": "YulLiteral",
																		"src": "440:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:15",
																		"nodeType": "YulLiteral",
																		"src": "443:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:15"
																},
																"nativeSrc": "433:15:15",
																"nodeType": "YulFunctionCall",
																"src": "433:15:15"
															},
															"nativeSrc": "433:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:15",
																		"nodeType": "YulLiteral",
																		"src": "464:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:15",
																		"nodeType": "YulLiteral",
																		"src": "467:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:15"
																},
																"nativeSrc": "457:15:15",
																"nodeType": "YulFunctionCall",
																"src": "457:15:15"
															},
															"nativeSrc": "457:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:15"
											},
											{
												"body": {
													"nativeSrc": "535:269:15",
													"nodeType": "YulBlock",
													"src": "535:269:15",
													"statements": [
														{
															"nativeSrc": "545:22:15",
															"nodeType": "YulAssignment",
															"src": "545:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:15",
																		"nodeType": "YulLiteral",
																		"src": "565:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:15"
																},
																"nativeSrc": "555:12:15",
																"nodeType": "YulFunctionCall",
																"src": "555:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:15"
																}
															]
														},
														{
															"nativeSrc": "576:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:15",
																		"nodeType": "YulLiteral",
																		"src": "612:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:15"
																},
																"nativeSrc": "602:12:15",
																"nodeType": "YulFunctionCall",
																"src": "602:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:15",
																	"nodeType": "YulTypedName",
																	"src": "580:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:15",
																"nodeType": "YulBlock",
																"src": "653:51:15",
																"statements": [
																	{
																		"nativeSrc": "667:27:15",
																		"nodeType": "YulAssignment",
																		"src": "667:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:15",
																					"nodeType": "YulLiteral",
																					"src": "689:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:15"
																			},
																			"nativeSrc": "677:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:15"
																},
																"nativeSrc": "626:26:15",
																"nodeType": "YulFunctionCall",
																"src": "626:26:15"
															},
															"nativeSrc": "623:81:15",
															"nodeType": "YulIf",
															"src": "623:81:15"
														},
														{
															"body": {
																"nativeSrc": "756:42:15",
																"nodeType": "YulBlock",
																"src": "756:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:15"
																			},
																			"nativeSrc": "770:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:15"
																		},
																		"nativeSrc": "770:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:15",
																				"nodeType": "YulLiteral",
																				"src": "751:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:15"
																		},
																		"nativeSrc": "740:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:15"
																},
																"nativeSrc": "717:38:15",
																"nodeType": "YulFunctionCall",
																"src": "717:38:15"
															},
															"nativeSrc": "714:84:15",
															"nodeType": "YulIf",
															"src": "714:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:15",
														"nodeType": "YulTypedName",
														"src": "519:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:15",
														"nodeType": "YulTypedName",
														"src": "528:6:15",
														"type": ""
													}
												],
												"src": "484:320:15"
											},
											{
												"body": {
													"nativeSrc": "864:87:15",
													"nodeType": "YulBlock",
													"src": "864:87:15",
													"statements": [
														{
															"nativeSrc": "874:11:15",
															"nodeType": "YulAssignment",
															"src": "874:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:15",
																"nodeType": "YulIdentifier",
																"src": "882:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:15",
																		"nodeType": "YulLiteral",
																		"src": "902:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:15"
																},
																"nativeSrc": "895:14:15",
																"nodeType": "YulFunctionCall",
																"src": "895:14:15"
															},
															"nativeSrc": "895:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:15"
														},
														{
															"nativeSrc": "918:26:15",
															"nodeType": "YulAssignment",
															"src": "918:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:15",
																		"nodeType": "YulLiteral",
																		"src": "936:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:15",
																		"nodeType": "YulLiteral",
																		"src": "939:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:15"
																},
																"nativeSrc": "926:18:15",
																"nodeType": "YulFunctionCall",
																"src": "926:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:15",
														"nodeType": "YulTypedName",
														"src": "851:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:15",
														"nodeType": "YulTypedName",
														"src": "859:4:15",
														"type": ""
													}
												],
												"src": "810:141:15"
											},
											{
												"body": {
													"nativeSrc": "1001:49:15",
													"nodeType": "YulBlock",
													"src": "1001:49:15",
													"statements": [
														{
															"nativeSrc": "1011:33:15",
															"nodeType": "YulAssignment",
															"src": "1011:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:15"
																		},
																		"nativeSrc": "1025:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:15"
																},
																"nativeSrc": "1021:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:15",
														"nodeType": "YulTypedName",
														"src": "984:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:15",
														"nodeType": "YulTypedName",
														"src": "994:6:15",
														"type": ""
													}
												],
												"src": "957:93:15"
											},
											{
												"body": {
													"nativeSrc": "1109:54:15",
													"nodeType": "YulBlock",
													"src": "1109:54:15",
													"statements": [
														{
															"nativeSrc": "1119:37:15",
															"nodeType": "YulAssignment",
															"src": "1119:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:15"
																},
																"nativeSrc": "1140:16:15",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:15",
														"nodeType": "YulTypedName",
														"src": "1084:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:15",
														"nodeType": "YulTypedName",
														"src": "1090:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:15",
														"nodeType": "YulTypedName",
														"src": "1100:8:15",
														"type": ""
													}
												],
												"src": "1056:107:15"
											},
											{
												"body": {
													"nativeSrc": "1245:317:15",
													"nodeType": "YulBlock",
													"src": "1245:317:15",
													"statements": [
														{
															"nativeSrc": "1255:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:15"
																},
																"nativeSrc": "1272:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:15",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:15",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:15"
																},
																"nativeSrc": "1311:97:15",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:15",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:15",
															"nodeType": "YulAssignment",
															"src": "1417:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:15"
																},
																"nativeSrc": "1429:39:15",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:15"
																}
															]
														},
														{
															"nativeSrc": "1477:30:15",
															"nodeType": "YulAssignment",
															"src": "1477:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:15"
																		},
																		"nativeSrc": "1497:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:15"
																},
																"nativeSrc": "1486:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:15"
																}
															]
														},
														{
															"nativeSrc": "1516:40:15",
															"nodeType": "YulAssignment",
															"src": "1516:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:15"
																		},
																		"nativeSrc": "1536:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:15"
																},
																"nativeSrc": "1526:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:15",
														"nodeType": "YulTypedName",
														"src": "1206:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:15",
														"nodeType": "YulTypedName",
														"src": "1213:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:15",
														"nodeType": "YulTypedName",
														"src": "1225:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:15",
														"nodeType": "YulTypedName",
														"src": "1238:6:15",
														"type": ""
													}
												],
												"src": "1169:393:15"
											},
											{
												"body": {
													"nativeSrc": "1613:32:15",
													"nodeType": "YulBlock",
													"src": "1613:32:15",
													"statements": [
														{
															"nativeSrc": "1623:16:15",
															"nodeType": "YulAssignment",
															"src": "1623:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:15",
																"nodeType": "YulIdentifier",
																"src": "1634:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:15",
														"nodeType": "YulTypedName",
														"src": "1595:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:15",
														"nodeType": "YulTypedName",
														"src": "1605:7:15",
														"type": ""
													}
												],
												"src": "1568:77:15"
											},
											{
												"body": {
													"nativeSrc": "1683:28:15",
													"nodeType": "YulBlock",
													"src": "1683:28:15",
													"statements": [
														{
															"nativeSrc": "1693:12:15",
															"nodeType": "YulAssignment",
															"src": "1693:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:15",
																"nodeType": "YulIdentifier",
																"src": "1700:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:15",
														"nodeType": "YulTypedName",
														"src": "1669:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:15",
														"nodeType": "YulTypedName",
														"src": "1679:3:15",
														"type": ""
													}
												],
												"src": "1651:60:15"
											},
											{
												"body": {
													"nativeSrc": "1777:82:15",
													"nodeType": "YulBlock",
													"src": "1777:82:15",
													"statements": [
														{
															"nativeSrc": "1787:66:15",
															"nodeType": "YulAssignment",
															"src": "1787:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:15"
																				},
																				"nativeSrc": "1827:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:15"
																		},
																		"nativeSrc": "1818:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:15"
																},
																"nativeSrc": "1800:53:15",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:15",
														"nodeType": "YulTypedName",
														"src": "1757:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:15",
														"nodeType": "YulTypedName",
														"src": "1767:9:15",
														"type": ""
													}
												],
												"src": "1717:142:15"
											},
											{
												"body": {
													"nativeSrc": "1912:28:15",
													"nodeType": "YulBlock",
													"src": "1912:28:15",
													"statements": [
														{
															"nativeSrc": "1922:12:15",
															"nodeType": "YulAssignment",
															"src": "1922:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:15",
																"nodeType": "YulIdentifier",
																"src": "1929:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:15",
														"nodeType": "YulTypedName",
														"src": "1898:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:15",
														"nodeType": "YulTypedName",
														"src": "1908:3:15",
														"type": ""
													}
												],
												"src": "1865:75:15"
											},
											{
												"body": {
													"nativeSrc": "2022:193:15",
													"nodeType": "YulBlock",
													"src": "2022:193:15",
													"statements": [
														{
															"nativeSrc": "2032:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:15"
																},
																"nativeSrc": "2056:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:15",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:15"
																				},
																				"nativeSrc": "2145:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:15"
																				},
																				"nativeSrc": "2166:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:15"
																		},
																		"nativeSrc": "2117:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:15"
																},
																"nativeSrc": "2104:105:15",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:15"
															},
															"nativeSrc": "2104:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:15",
														"nodeType": "YulTypedName",
														"src": "1999:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:15",
														"nodeType": "YulTypedName",
														"src": "2005:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:15",
														"nodeType": "YulTypedName",
														"src": "2013:7:15",
														"type": ""
													}
												],
												"src": "1946:269:15"
											},
											{
												"body": {
													"nativeSrc": "2270:24:15",
													"nodeType": "YulBlock",
													"src": "2270:24:15",
													"statements": [
														{
															"nativeSrc": "2280:8:15",
															"nodeType": "YulAssignment",
															"src": "2280:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:15",
																"nodeType": "YulLiteral",
																"src": "2287:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:15",
														"nodeType": "YulTypedName",
														"src": "2266:3:15",
														"type": ""
													}
												],
												"src": "2221:73:15"
											},
											{
												"body": {
													"nativeSrc": "2353:136:15",
													"nodeType": "YulBlock",
													"src": "2353:136:15",
													"statements": [
														{
															"nativeSrc": "2363:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:15"
																},
																"nativeSrc": "2377:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:15"
																},
																"nativeSrc": "2418:65:15",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:15"
															},
															"nativeSrc": "2418:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:15",
														"nodeType": "YulTypedName",
														"src": "2339:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:15",
														"nodeType": "YulTypedName",
														"src": "2345:6:15",
														"type": ""
													}
												],
												"src": "2300:189:15"
											},
											{
												"body": {
													"nativeSrc": "2545:136:15",
													"nodeType": "YulBlock",
													"src": "2545:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:15",
																"nodeType": "YulBlock",
																"src": "2612:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:15"
																			},
																			"nativeSrc": "2626:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:15"
																		},
																		"nativeSrc": "2626:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:15"
																},
																"nativeSrc": "2562:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:15"
															},
															"nativeSrc": "2555:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:15",
																"nodeType": "YulBlock",
																"src": "2577:26:15",
																"statements": [
																	{
																		"nativeSrc": "2579:22:15",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:15"
																			},
																			"nativeSrc": "2588:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:15",
																"nodeType": "YulBlock",
																"src": "2559:2:15",
																"statements": []
															},
															"src": "2555:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:15",
														"nodeType": "YulTypedName",
														"src": "2533:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:15",
														"nodeType": "YulTypedName",
														"src": "2540:3:15",
														"type": ""
													}
												],
												"src": "2495:186:15"
											},
											{
												"body": {
													"nativeSrc": "2766:464:15",
													"nodeType": "YulBlock",
													"src": "2766:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:15",
																"nodeType": "YulBlock",
																"src": "2792:431:15",
																"statements": [
																	{
																		"nativeSrc": "2806:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:15"
																			},
																			"nativeSrc": "2822:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:15",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:15"
																					},
																					"nativeSrc": "2906:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:15"
																			},
																			"nativeSrc": "2892:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:15",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:15",
																			"nodeType": "YulBlock",
																			"src": "3093:27:15",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:15",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:15",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:15"
																			},
																			"nativeSrc": "3074:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:15"
																		},
																		"nativeSrc": "3071:49:15",
																		"nodeType": "YulIf",
																		"src": "3071:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:15"
																							},
																							"nativeSrc": "3189:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:15"
																					},
																					"nativeSrc": "3175:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:15"
																			},
																			"nativeSrc": "3133:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:15"
																		},
																		"nativeSrc": "3133:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:15"
																},
																"nativeSrc": "2780:11:15",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:15"
															},
															"nativeSrc": "2777:446:15",
															"nodeType": "YulIf",
															"src": "2777:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:15",
														"nodeType": "YulTypedName",
														"src": "2742:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:15",
														"nodeType": "YulTypedName",
														"src": "2749:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:15",
														"nodeType": "YulTypedName",
														"src": "2754:10:15",
														"type": ""
													}
												],
												"src": "2687:543:15"
											},
											{
												"body": {
													"nativeSrc": "3299:54:15",
													"nodeType": "YulBlock",
													"src": "3299:54:15",
													"statements": [
														{
															"nativeSrc": "3309:37:15",
															"nodeType": "YulAssignment",
															"src": "3309:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:15"
																},
																"nativeSrc": "3330:16:15",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:15",
														"nodeType": "YulTypedName",
														"src": "3274:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:15",
														"nodeType": "YulTypedName",
														"src": "3280:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:15",
														"nodeType": "YulTypedName",
														"src": "3290:8:15",
														"type": ""
													}
												],
												"src": "3236:117:15"
											},
											{
												"body": {
													"nativeSrc": "3410:118:15",
													"nodeType": "YulBlock",
													"src": "3410:118:15",
													"statements": [
														{
															"nativeSrc": "3420:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:15"
																				},
																				"nativeSrc": "3465:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:15"
																				},
																				"nativeSrc": "3480:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:15"
																		},
																		"nativeSrc": "3436:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:15"
																},
																"nativeSrc": "3432:56:15",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:15",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:15",
															"nodeType": "YulAssignment",
															"src": "3497:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:15"
																},
																"nativeSrc": "3507:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:15",
														"nodeType": "YulTypedName",
														"src": "3387:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:15",
														"nodeType": "YulTypedName",
														"src": "3393:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:15",
														"nodeType": "YulTypedName",
														"src": "3403:6:15",
														"type": ""
													}
												],
												"src": "3359:169:15"
											},
											{
												"body": {
													"nativeSrc": "3614:214:15",
													"nodeType": "YulBlock",
													"src": "3614:214:15",
													"statements": [
														{
															"nativeSrc": "3747:37:15",
															"nodeType": "YulAssignment",
															"src": "3747:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:15"
																},
																"nativeSrc": "3755:29:15",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:15"
																}
															]
														},
														{
															"nativeSrc": "3793:29:15",
															"nodeType": "YulAssignment",
															"src": "3793:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:15"
																		},
																		"nativeSrc": "3810:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:15"
																},
																"nativeSrc": "3801:21:15",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:15",
														"nodeType": "YulTypedName",
														"src": "3595:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:15",
														"nodeType": "YulTypedName",
														"src": "3601:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:15",
														"nodeType": "YulTypedName",
														"src": "3609:4:15",
														"type": ""
													}
												],
												"src": "3533:295:15"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:15",
													"nodeType": "YulBlock",
													"src": "3925:1303:15",
													"statements": [
														{
															"nativeSrc": "3936:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:15"
																},
																"nativeSrc": "3950:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:15",
																"nodeType": "YulBlock",
																"src": "4072:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:15"
																			},
																			"nativeSrc": "4074:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:15"
																		},
																		"nativeSrc": "4074:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:15",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:15"
																},
																"nativeSrc": "4041:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:15"
															},
															"nativeSrc": "4038:56:15",
															"nodeType": "YulIf",
															"src": "4038:56:15"
														},
														{
															"nativeSrc": "4104:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:15"
																		},
																		"nativeSrc": "4144:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:15"
																},
																"nativeSrc": "4118:38:15",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:15"
																},
																"nativeSrc": "4203:67:15",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:15"
															},
															"nativeSrc": "4203:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:15"
														},
														{
															"nativeSrc": "4280:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:15",
																"nodeType": "YulLiteral",
																"src": "4297:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:15",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:15",
															"nodeType": "YulAssignment",
															"src": "4308:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:15",
																"nodeType": "YulLiteral",
																"src": "4321:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:15",
																		"nodeType": "YulBlock",
																		"src": "4372:611:15",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:15",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:15"
																							},
																							"nativeSrc": "4413:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:15"
																					},
																					"nativeSrc": "4401:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:15",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:15"
																					},
																					"nativeSrc": "4451:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:15",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:15",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:15",
																					"nodeType": "YulBlock",
																					"src": "4569:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:15"
																												},
																												"nativeSrc": "4608:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:15"
																										},
																										"nativeSrc": "4602:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:15"
																								},
																								"nativeSrc": "4587:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:15"
																							},
																							"nativeSrc": "4587:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:15"
																						},
																						{
																							"nativeSrc": "4646:24:15",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:15",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:15"
																								},
																								"nativeSrc": "4656:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:15",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:15",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:15"
																								},
																								"nativeSrc": "4700:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:15"
																					},
																					"nativeSrc": "4532:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:15"
																				},
																				"nativeSrc": "4524:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:15",
																					"nodeType": "YulBlock",
																					"src": "4547:21:15",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:15",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:15",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:15"
																								},
																								"nativeSrc": "4554:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:15",
																					"nodeType": "YulBlock",
																					"src": "4528:3:15",
																					"statements": []
																				},
																				"src": "4524:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:15",
																					"nodeType": "YulBlock",
																					"src": "4768:156:15",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:15"
																										},
																										"nativeSrc": "4809:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:15"
																								},
																								"nativeSrc": "4803:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:15",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:15",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:15"
																												},
																												"nativeSrc": "4891:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:15"
																										},
																										"nativeSrc": "4861:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:15"
																								},
																								"nativeSrc": "4846:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:15"
																							},
																							"nativeSrc": "4846:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:15"
																					},
																					"nativeSrc": "4748:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:15"
																				},
																				"nativeSrc": "4745:179:15",
																				"nodeType": "YulIf",
																				"src": "4745:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:15",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:15"
																									},
																									"nativeSrc": "4954:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:15",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:15"
																							},
																							"nativeSrc": "4950:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:15"
																					},
																					"nativeSrc": "4937:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:15"
																				},
																				"nativeSrc": "4937:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:15"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:15",
																	"nodeType": "YulCase",
																	"src": "4365:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:15",
																		"nodeType": "YulBlock",
																		"src": "5000:222:15",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:15",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:15",
																					"nodeType": "YulBlock",
																					"src": "5051:67:15",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:15",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:15"
																										},
																										"nativeSrc": "5084:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:15"
																								},
																								"nativeSrc": "5078:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:15"
																				},
																				"nativeSrc": "5041:77:15",
																				"nodeType": "YulIf",
																				"src": "5041:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:15"
																							},
																							"nativeSrc": "5144:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:15"
																					},
																					"nativeSrc": "5131:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:15"
																				},
																				"nativeSrc": "5131:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:15"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:15",
																	"nodeType": "YulCase",
																	"src": "4992:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:15"
																},
																"nativeSrc": "4342:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:15"
															},
															"nativeSrc": "4335:887:15",
															"nodeType": "YulSwitch",
															"src": "4335:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:15",
														"nodeType": "YulTypedName",
														"src": "3914:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:15",
														"nodeType": "YulTypedName",
														"src": "3920:3:15",
														"type": ""
													}
												],
												"src": "3833:1395:15"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405180602001604052805f81525060039081610021919061029f565b5034801561002d575f80fd5b5060405180602001604052805f81525061004c8161005260201b60201c565b5061036e565b8060029081610061919061029f565b5050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806100e057607f821691505b6020821081036100f3576100f261009c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261011a565b61015f868361011a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101a361019e61019984610177565b610180565b610177565b9050919050565b5f819050919050565b6101bc83610189565b6101d06101c8826101aa565b848454610126565b825550505050565b5f90565b6101e46101d8565b6101ef8184846101b3565b505050565b5b81811015610212576102075f826101dc565b6001810190506101f5565b5050565b601f82111561025757610228816100f9565b6102318461010b565b81016020851015610240578190505b61025461024c8561010b565b8301826101f4565b50505b505050565b5f82821c905092915050565b5f6102775f198460080261025c565b1980831691505092915050565b5f61028f8383610268565b9150826002028217905092915050565b6102a882610065565b67ffffffffffffffff8111156102c1576102c061006f565b5b6102cb82546100c9565b6102d6828285610216565b5f60209050601f831160018114610307575f84156102f5578287015190505b6102ff8582610284565b865550610366565b601f198416610315866100f9565b5f5b8281101561033c57848901518255600182019150602085019450602081019050610317565b868310156103595784890151610355601f891682610268565b8355505b6001600288020188555050505b505050505050565b6125c58061037b5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c80632eb2c2d61161006f5780632eb2c2d6146101745780634e1273f41461019057806377097fc8146101c0578063a22cb465146101dc578063e985e9c5146101f8578063f242432a14610228576100a6565b8062fdd58e146100aa57806301ffc9a7146100da5780630e89341c1461010a5780630febdd491461013a5780631c75cfb414610156575b5f80fd5b6100c460048036038101906100bf91906115a7565b610244565b6040516100d191906115f4565b60405180910390f35b6100f460048036038101906100ef9190611662565b610299565b60405161010191906116a7565b60405180910390f35b610124600480360381019061011f91906116c0565b61037a565b604051610131919061175b565b60405180910390f35b610154600480360381019061014f919061177b565b610459565b005b61015e61047a565b60405161016b91906115f4565b60405180910390f35b61018e600480360381019061018991906119cf565b610480565b005b6101aa60048036038101906101a59190611b5a565b610527565b6040516101b79190611c87565b60405180910390f35b6101da60048036038101906101d59190611d45565b61062e565b005b6101f660048036038101906101f19190611dc9565b610671565b005b610212600480360381019061020d9190611e07565b610687565b60405161021f91906116a7565b60405180910390f35b610242600480360381019061023d9190611e45565b610715565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036357507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103735750610372826107bc565b5b9050919050565b60605f60045f8481526020019081526020015f20805461039990611f05565b80601f01602080910402602001604051908101604052809291908181526020018280546103c590611f05565b80156104105780601f106103e757610100808354040283529160200191610410565b820191905f5260205f20905b8154815290600101906020018083116103f357829003601f168201915b505050505090505f81511161042d5761042883610825565b610451565b600381604051602001610441929190612001565b6040516020818303038152906040525b915050919050565b6104748484848460405180602001604052805f815250610715565b50505050565b60055481565b5f6104896108b7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104ce57506104cc8682610687565b155b156105125780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610509929190612033565b60405180910390fd5b61051f86868686866108be565b505050505050565b6060815183511461057357815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161056a92919061205a565b60405180910390fd5b5f835167ffffffffffffffff81111561058f5761058e6117e3565b5b6040519080825280602002602001820160405280156105bd5781602001602082028036833780820191505090505b5090505f5b8451811015610623576105f96105e182876109b290919063ffffffff16565b6105f483876109c590919063ffffffff16565b610244565b82828151811061060c5761060b612081565b5b6020026020010181815250508060010190506105c2565b508091505092915050565b61064a336005548460405180602001604052805f8152506109d8565b61065660055482610a6d565b60055f815480929190610668906120db565b91905055505050565b61068361067c6108b7565b8383610ad0565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f61071e6108b7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561076357506107618682610687565b155b156107a75780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161079e929190612033565b60405180910390fd5b6107b48686868686610c39565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606002805461083490611f05565b80601f016020809104026020016040519081016040528092919081815260200182805461086090611f05565b80156108ab5780601f10610882576101008083540402835291602001916108ab565b820191905f5260205f20905b81548152906001019060200180831161088e57829003601f168201915b50505050509050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361092e575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109259190612122565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361099e575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016109959190612122565b60405180910390fd5b6109ab8585858585610d3f565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a48575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610a3f9190612122565b60405180910390fd5b5f80610a548585610deb565b91509150610a655f87848487610d3f565b505050505050565b8060045f8481526020019081526020015f209081610a8b91906122c6565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b610ab78461037a565b604051610ac4919061175b565b60405180910390a25050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b40575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610b379190612122565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c2c91906116a7565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ca9575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610ca09190612122565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610d19575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610d109190612122565b60405180910390fd5b5f80610d258585610deb565b91509150610d368787848487610d3f565b50505050505050565b610d4b85858585610e1b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610de4575f610d876108b7565b90506001845103610dd3575f610da65f866109c590919063ffffffff16565b90505f610dbc5f866109c590919063ffffffff16565b9050610dcc8389898585896111ab565b5050610de2565b610de181878787878761135a565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610e6557815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610e5c92919061205a565b60405180910390fd5b5f610e6e6108b7565b90505f5b835181101561106a575f610e8f82866109c590919063ffffffff16565b90505f610ea583866109c590919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610fc8575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f7457888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610f6b9493929190612395565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461105d57805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461105591906123d8565b925050819055505b5050806001019050610e72565b506001835103611125575f6110885f856109c590919063ffffffff16565b90505f61109e5f856109c590919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161111692919061205a565b60405180910390a450506111a4565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161119b92919061240b565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611352578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161120b959493929190612492565b6020604051808303815f875af192505050801561124657506040513d601f19601f8201168201806040525081019061124391906124fe565b60015b6112c7573d805f8114611274576040519150601f19603f3d011682016040523d82523d5f602084013e611279565b606091505b505f8151036112bf57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112b69190612122565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461135057846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113479190612122565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611501578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016113ba959493929190612529565b6020604051808303815f875af19250505080156113f557506040513d601f19601f820116820180604052508101906113f291906124fe565b60015b611476573d805f8114611423576040519150601f19603f3d011682016040523d82523d5f602084013e611428565b606091505b505f81510361146e57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114659190612122565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146114ff57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114f69190612122565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115438261151a565b9050919050565b61155381611539565b811461155d575f80fd5b50565b5f8135905061156e8161154a565b92915050565b5f819050919050565b61158681611574565b8114611590575f80fd5b50565b5f813590506115a18161157d565b92915050565b5f80604083850312156115bd576115bc611512565b5b5f6115ca85828601611560565b92505060206115db85828601611593565b9150509250929050565b6115ee81611574565b82525050565b5f6020820190506116075f8301846115e5565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116418161160d565b811461164b575f80fd5b50565b5f8135905061165c81611638565b92915050565b5f6020828403121561167757611676611512565b5b5f6116848482850161164e565b91505092915050565b5f8115159050919050565b6116a18161168d565b82525050565b5f6020820190506116ba5f830184611698565b92915050565b5f602082840312156116d5576116d4611512565b5b5f6116e284828501611593565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61172d826116eb565b61173781856116f5565b9350611747818560208601611705565b61175081611713565b840191505092915050565b5f6020820190508181035f8301526117738184611723565b905092915050565b5f805f806080858703121561179357611792611512565b5b5f6117a087828801611560565b94505060206117b187828801611560565b93505060406117c287828801611593565b92505060606117d387828801611593565b91505092959194509250565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61181982611713565b810181811067ffffffffffffffff82111715611838576118376117e3565b5b80604052505050565b5f61184a611509565b90506118568282611810565b919050565b5f67ffffffffffffffff821115611875576118746117e3565b5b602082029050602081019050919050565b5f80fd5b5f61189c6118978461185b565b611841565b905080838252602082019050602084028301858111156118bf576118be611886565b5b835b818110156118e857806118d48882611593565b8452602084019350506020810190506118c1565b5050509392505050565b5f82601f830112611906576119056117df565b5b813561191684826020860161188a565b91505092915050565b5f80fd5b5f67ffffffffffffffff82111561193d5761193c6117e3565b5b61194682611713565b9050602081019050919050565b828183375f83830152505050565b5f61197361196e84611923565b611841565b90508281526020810184848401111561198f5761198e61191f565b5b61199a848285611953565b509392505050565b5f82601f8301126119b6576119b56117df565b5b81356119c6848260208601611961565b91505092915050565b5f805f805f60a086880312156119e8576119e7611512565b5b5f6119f588828901611560565b9550506020611a0688828901611560565b945050604086013567ffffffffffffffff811115611a2757611a26611516565b5b611a33888289016118f2565b935050606086013567ffffffffffffffff811115611a5457611a53611516565b5b611a60888289016118f2565b925050608086013567ffffffffffffffff811115611a8157611a80611516565b5b611a8d888289016119a2565b9150509295509295909350565b5f67ffffffffffffffff821115611ab457611ab36117e3565b5b602082029050602081019050919050565b5f611ad7611ad284611a9a565b611841565b90508083825260208201905060208402830185811115611afa57611af9611886565b5b835b81811015611b235780611b0f8882611560565b845260208401935050602081019050611afc565b5050509392505050565b5f82601f830112611b4157611b406117df565b5b8135611b51848260208601611ac5565b91505092915050565b5f8060408385031215611b7057611b6f611512565b5b5f83013567ffffffffffffffff811115611b8d57611b8c611516565b5b611b9985828601611b2d565b925050602083013567ffffffffffffffff811115611bba57611bb9611516565b5b611bc6858286016118f2565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611c0281611574565b82525050565b5f611c138383611bf9565b60208301905092915050565b5f602082019050919050565b5f611c3582611bd0565b611c3f8185611bda565b9350611c4a83611bea565b805f5b83811015611c7a578151611c618882611c08565b9750611c6c83611c1f565b925050600181019050611c4d565b5085935050505092915050565b5f6020820190508181035f830152611c9f8184611c2b565b905092915050565b5f67ffffffffffffffff821115611cc157611cc06117e3565b5b611cca82611713565b9050602081019050919050565b5f611ce9611ce484611ca7565b611841565b905082815260208101848484011115611d0557611d0461191f565b5b611d10848285611953565b509392505050565b5f82601f830112611d2c57611d2b6117df565b5b8135611d3c848260208601611cd7565b91505092915050565b5f8060408385031215611d5b57611d5a611512565b5b5f611d6885828601611593565b925050602083013567ffffffffffffffff811115611d8957611d88611516565b5b611d9585828601611d18565b9150509250929050565b611da88161168d565b8114611db2575f80fd5b50565b5f81359050611dc381611d9f565b92915050565b5f8060408385031215611ddf57611dde611512565b5b5f611dec85828601611560565b9250506020611dfd85828601611db5565b9150509250929050565b5f8060408385031215611e1d57611e1c611512565b5b5f611e2a85828601611560565b9250506020611e3b85828601611560565b9150509250929050565b5f805f805f60a08688031215611e5e57611e5d611512565b5b5f611e6b88828901611560565b9550506020611e7c88828901611560565b9450506040611e8d88828901611593565b9350506060611e9e88828901611593565b925050608086013567ffffffffffffffff811115611ebf57611ebe611516565b5b611ecb888289016119a2565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f1c57607f821691505b602082108103611f2f57611f2e611ed8565b5b50919050565b5f81905092915050565b5f819050815f5260205f209050919050565b5f8154611f5d81611f05565b611f678186611f35565b9450600182165f8114611f815760018114611f9657611fc8565b60ff1983168652811515820286019350611fc8565b611f9f85611f3f565b5f5b83811015611fc057815481890152600182019150602081019050611fa1565b838801955050505b50505092915050565b5f611fdb826116eb565b611fe58185611f35565b9350611ff5818560208601611705565b80840191505092915050565b5f61200c8285611f51565b91506120188284611fd1565b91508190509392505050565b61202d81611539565b82525050565b5f6040820190506120465f830185612024565b6120536020830184612024565b9392505050565b5f60408201905061206d5f8301856115e5565b61207a60208301846115e5565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6120e582611574565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612117576121166120ae565b5b600182019050919050565b5f6020820190506121355f830184612024565b92915050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026121857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261214a565b61218f868361214a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6121ca6121c56121c084611574565b6121a7565b611574565b9050919050565b5f819050919050565b6121e3836121b0565b6121f76121ef826121d1565b848454612156565b825550505050565b5f90565b61220b6121ff565b6122168184846121da565b505050565b5b818110156122395761222e5f82612203565b60018101905061221c565b5050565b601f82111561227e5761224f81611f3f565b6122588461213b565b81016020851015612267578190505b61227b6122738561213b565b83018261221b565b50505b505050565b5f82821c905092915050565b5f61229e5f1984600802612283565b1980831691505092915050565b5f6122b6838361228f565b9150826002028217905092915050565b6122cf826116eb565b67ffffffffffffffff8111156122e8576122e76117e3565b5b6122f28254611f05565b6122fd82828561223d565b5f60209050601f83116001811461232e575f841561231c578287015190505b61232685826122ab565b86555061238d565b601f19841661233c86611f3f565b5f5b828110156123635784890151825560018201915060208501945060208101905061233e565b86831015612380578489015161237c601f89168261228f565b8355505b6001600288020188555050505b505050505050565b5f6080820190506123a85f830187612024565b6123b560208301866115e5565b6123c260408301856115e5565b6123cf60608301846115e5565b95945050505050565b5f6123e282611574565b91506123ed83611574565b9250828201905080821115612405576124046120ae565b5b92915050565b5f6040820190508181035f8301526124238185611c2b565b905081810360208301526124378184611c2b565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61246482612440565b61246e818561244a565b935061247e818560208601611705565b61248781611713565b840191505092915050565b5f60a0820190506124a55f830188612024565b6124b26020830187612024565b6124bf60408301866115e5565b6124cc60608301856115e5565b81810360808301526124de818461245a565b90509695505050505050565b5f815190506124f881611638565b92915050565b5f6020828403121561251357612512611512565b5b5f612520848285016124ea565b91505092915050565b5f60a08201905061253c5f830188612024565b6125496020830187612024565b818103604083015261255b8186611c2b565b9050818103606083015261256f8185611c2b565b90508181036080830152612583818461245a565b9050969550505050505056fea26469706673582212201c9bc8ffc77b814d6da0adac9cabc17ac141f86175dde5a6265fd86ec23c04eb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH1 0x3 SWAP1 DUP2 PUSH2 0x21 SWAP2 SWAP1 PUSH2 0x29F JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x4C DUP2 PUSH2 0x52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x36E JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x29F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF3 JUMPI PUSH2 0xF2 PUSH2 0x9C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x155 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x11A JUMP JUMPDEST PUSH2 0x15F DUP7 DUP4 PUSH2 0x11A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3 PUSH2 0x19E PUSH2 0x199 DUP5 PUSH2 0x177 JUMP JUMPDEST PUSH2 0x180 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC DUP4 PUSH2 0x189 JUMP JUMPDEST PUSH2 0x1D0 PUSH2 0x1C8 DUP3 PUSH2 0x1AA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x126 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x1EF DUP2 DUP5 DUP5 PUSH2 0x1B3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x212 JUMPI PUSH2 0x207 PUSH0 DUP3 PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1F5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x257 JUMPI PUSH2 0x228 DUP2 PUSH2 0xF9 JUMP JUMPDEST PUSH2 0x231 DUP5 PUSH2 0x10B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x240 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x254 PUSH2 0x24C DUP6 PUSH2 0x10B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1F4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x277 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x25C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28F DUP4 DUP4 PUSH2 0x268 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A8 DUP3 PUSH2 0x65 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C1 JUMPI PUSH2 0x2C0 PUSH2 0x6F JUMP JUMPDEST JUMPDEST PUSH2 0x2CB DUP3 SLOAD PUSH2 0xC9 JUMP JUMPDEST PUSH2 0x2D6 DUP3 DUP3 DUP6 PUSH2 0x216 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x307 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2FF DUP6 DUP3 PUSH2 0x284 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x366 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x315 DUP7 PUSH2 0xF9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x33C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x317 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x359 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x355 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x268 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25C5 DUP1 PUSH2 0x37B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x77097FC8 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x228 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xFEBDD49 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x1C75CFB4 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15E PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1B5A JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x363 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x372 DUP3 PUSH2 0x7BC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x399 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C5 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x410 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x410 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x42D JUMPI PUSH2 0x428 DUP4 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x441 SWAP3 SWAP2 SWAP1 PUSH2 0x2001 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x474 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x715 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x489 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4CE JUMPI POP PUSH2 0x4CC DUP7 DUP3 PUSH2 0x687 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x512 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP3 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51F DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x8BE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x573 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56A SWAP3 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5BD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x623 JUMPI PUSH2 0x5F9 PUSH2 0x5E1 DUP3 DUP8 PUSH2 0x9B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5F4 DUP4 DUP8 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60C JUMPI PUSH2 0x60B PUSH2 0x2081 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x5C2 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x64A CALLER PUSH1 0x5 SLOAD DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x656 PUSH1 0x5 SLOAD DUP3 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x668 SWAP1 PUSH2 0x20DB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x683 PUSH2 0x67C PUSH2 0x8B7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAD0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x71E PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x763 JUMPI POP PUSH2 0x761 DUP7 DUP3 PUSH2 0x687 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7A7 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP3 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B4 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xC39 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x834 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x860 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x882 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD3F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA48 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xA54 DUP6 DUP6 PUSH2 0xDEB JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xA65 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xD3F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xA8B SWAP2 SWAP1 PUSH2 0x22C6 JUMP JUMPDEST POP DUP2 PUSH32 0x6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B PUSH2 0xAB7 DUP5 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB40 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC2C SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD19 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xD25 DUP6 DUP6 PUSH2 0xDEB JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xD36 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xD3F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD4B DUP6 DUP6 DUP6 DUP6 PUSH2 0xE1B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE4 JUMPI PUSH0 PUSH2 0xD87 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xDD3 JUMPI PUSH0 PUSH2 0xDA6 PUSH0 DUP7 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDBC PUSH0 DUP7 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xDCC DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11AB JUMP JUMPDEST POP POP PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xDE1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x135A JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xE65 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5C SWAP3 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE6E PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x106A JUMPI PUSH0 PUSH2 0xE8F DUP3 DUP7 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xEA5 DUP4 DUP7 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC8 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF74 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2395 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x105D JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1055 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xE72 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1125 JUMPI PUSH0 PUSH2 0x1088 PUSH0 DUP6 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x109E PUSH0 DUP6 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1116 SWAP3 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x11A4 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x119B SWAP3 SWAP2 SWAP1 PUSH2 0x240B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1352 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1246 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1243 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12C7 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12BF JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B6 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1350 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1501 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13F5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1476 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1423 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x146E JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1465 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x14FF JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F6 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1543 DUP3 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1553 DUP2 PUSH2 0x1539 JUMP JUMPDEST DUP2 EQ PUSH2 0x155D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156E DUP2 PUSH2 0x154A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1586 DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP2 EQ PUSH2 0x1590 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15A1 DUP2 PUSH2 0x157D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15BD JUMPI PUSH2 0x15BC PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15CA DUP6 DUP3 DUP7 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15DB DUP6 DUP3 DUP7 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EE DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1607 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1641 DUP2 PUSH2 0x160D JUMP JUMPDEST DUP2 EQ PUSH2 0x164B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x165C DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1677 JUMPI PUSH2 0x1676 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1684 DUP5 DUP3 DUP6 ADD PUSH2 0x164E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A1 DUP2 PUSH2 0x168D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1698 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E2 DUP5 DUP3 DUP6 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x172D DUP3 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x1737 DUP2 DUP6 PUSH2 0x16F5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1747 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x1750 DUP2 PUSH2 0x1713 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1773 DUP2 DUP5 PUSH2 0x1723 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1793 JUMPI PUSH2 0x1792 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A0 DUP8 DUP3 DUP9 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x17B1 DUP8 DUP3 DUP9 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x17C2 DUP8 DUP3 DUP9 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x17D3 DUP8 DUP3 DUP9 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1819 DUP3 PUSH2 0x1713 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1838 JUMPI PUSH2 0x1837 PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x184A PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP PUSH2 0x1856 DUP3 DUP3 PUSH2 0x1810 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1875 JUMPI PUSH2 0x1874 PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x189C PUSH2 0x1897 DUP5 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18BF JUMPI PUSH2 0x18BE PUSH2 0x1886 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18E8 JUMPI DUP1 PUSH2 0x18D4 DUP9 DUP3 PUSH2 0x1593 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18C1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1906 JUMPI PUSH2 0x1905 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1916 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x188A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x193D JUMPI PUSH2 0x193C PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH2 0x1946 DUP3 PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1973 PUSH2 0x196E DUP5 PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x198F JUMPI PUSH2 0x198E PUSH2 0x191F JUMP JUMPDEST JUMPDEST PUSH2 0x199A DUP5 DUP3 DUP6 PUSH2 0x1953 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19B6 JUMPI PUSH2 0x19B5 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19C6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1961 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19E8 JUMPI PUSH2 0x19E7 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19F5 DUP9 DUP3 DUP10 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1A06 DUP9 DUP3 DUP10 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A27 JUMPI PUSH2 0x1A26 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1A33 DUP9 DUP3 DUP10 ADD PUSH2 0x18F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A54 JUMPI PUSH2 0x1A53 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1A60 DUP9 DUP3 DUP10 ADD PUSH2 0x18F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A81 JUMPI PUSH2 0x1A80 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1A8D DUP9 DUP3 DUP10 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AB4 JUMPI PUSH2 0x1AB3 PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD7 PUSH2 0x1AD2 DUP5 PUSH2 0x1A9A JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1AFA JUMPI PUSH2 0x1AF9 PUSH2 0x1886 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B23 JUMPI DUP1 PUSH2 0x1B0F DUP9 DUP3 PUSH2 0x1560 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AFC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B51 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B70 JUMPI PUSH2 0x1B6F PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B8D JUMPI PUSH2 0x1B8C PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1B99 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1BC6 DUP6 DUP3 DUP7 ADD PUSH2 0x18F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C02 DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C13 DUP4 DUP4 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C35 DUP3 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0x1C3F DUP2 DUP6 PUSH2 0x1BDA JUMP JUMPDEST SWAP4 POP PUSH2 0x1C4A DUP4 PUSH2 0x1BEA JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C7A JUMPI DUP2 MLOAD PUSH2 0x1C61 DUP9 DUP3 PUSH2 0x1C08 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C6C DUP4 PUSH2 0x1C1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C4D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9F DUP2 DUP5 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC0 PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCA DUP3 PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE9 PUSH2 0x1CE4 DUP5 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D05 JUMPI PUSH2 0x1D04 PUSH2 0x191F JUMP JUMPDEST JUMPDEST PUSH2 0x1D10 DUP5 DUP3 DUP6 PUSH2 0x1953 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D2C JUMPI PUSH2 0x1D2B PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D3C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D5B JUMPI PUSH2 0x1D5A PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D68 DUP6 DUP3 DUP7 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1D95 DUP6 DUP3 DUP7 ADD PUSH2 0x1D18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA8 DUP2 PUSH2 0x168D JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DC3 DUP2 PUSH2 0x1D9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DEC DUP6 DUP3 DUP7 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DFD DUP6 DUP3 DUP7 ADD PUSH2 0x1DB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1D JUMPI PUSH2 0x1E1C PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E2A DUP6 DUP3 DUP7 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3B DUP6 DUP3 DUP7 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E5E JUMPI PUSH2 0x1E5D PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E6B DUP9 DUP3 DUP10 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1E7C DUP9 DUP3 DUP10 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E8D DUP9 DUP3 DUP10 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1E9E DUP9 DUP3 DUP10 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBF JUMPI PUSH2 0x1EBE PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1ECB DUP9 DUP3 DUP10 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F1C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F2F JUMPI PUSH2 0x1F2E PUSH2 0x1ED8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x1F5D DUP2 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x1F67 DUP2 DUP7 PUSH2 0x1F35 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x1F81 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1F96 JUMPI PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x1F9F DUP6 PUSH2 0x1F3F JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FC0 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FA1 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDB DUP3 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x1FE5 DUP2 DUP6 PUSH2 0x1F35 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FF5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x200C DUP3 DUP6 PUSH2 0x1F51 JUMP JUMPDEST SWAP2 POP PUSH2 0x2018 DUP3 DUP5 PUSH2 0x1FD1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x202D DUP2 PUSH2 0x1539 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2046 PUSH0 DUP4 ADD DUP6 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x2053 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2024 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x206D PUSH0 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x207A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20E5 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2117 JUMPI PUSH2 0x2116 PUSH2 0x20AE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2135 PUSH0 DUP4 ADD DUP5 PUSH2 0x2024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2185 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x218F DUP7 DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21CA PUSH2 0x21C5 PUSH2 0x21C0 DUP5 PUSH2 0x1574 JUMP JUMPDEST PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E3 DUP4 PUSH2 0x21B0 JUMP JUMPDEST PUSH2 0x21F7 PUSH2 0x21EF DUP3 PUSH2 0x21D1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2156 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x220B PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x2216 DUP2 DUP5 DUP5 PUSH2 0x21DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2239 JUMPI PUSH2 0x222E PUSH0 DUP3 PUSH2 0x2203 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x221C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x227E JUMPI PUSH2 0x224F DUP2 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x2258 DUP5 PUSH2 0x213B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2267 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x227B PUSH2 0x2273 DUP6 PUSH2 0x213B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x221B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x229E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2283 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22B6 DUP4 DUP4 PUSH2 0x228F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22CF DUP3 PUSH2 0x16EB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22E8 JUMPI PUSH2 0x22E7 PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH2 0x22F2 DUP3 SLOAD PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x22FD DUP3 DUP3 DUP6 PUSH2 0x223D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x232E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x231C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2326 DUP6 DUP3 PUSH2 0x22AB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x238D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x233C DUP7 PUSH2 0x1F3F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2363 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x233E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2380 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x237C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x228F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23A8 PUSH0 DUP4 ADD DUP8 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x23B5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x23C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x23CF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15E5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23E2 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x23ED DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2405 JUMPI PUSH2 0x2404 PUSH2 0x20AE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2423 DUP2 DUP6 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2437 DUP2 DUP5 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2464 DUP3 PUSH2 0x2440 JUMP JUMPDEST PUSH2 0x246E DUP2 DUP6 PUSH2 0x244A JUMP JUMPDEST SWAP4 POP PUSH2 0x247E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x2487 DUP2 PUSH2 0x1713 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24A5 PUSH0 DUP4 ADD DUP9 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x24B2 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x24BF PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x24CC PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24DE DUP2 DUP5 PUSH2 0x245A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24F8 DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2513 JUMPI PUSH2 0x2512 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2520 DUP5 DUP3 DUP6 ADD PUSH2 0x24EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x253C PUSH0 DUP4 ADD DUP9 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x2549 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2024 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x255B DUP2 DUP7 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x256F DUP2 DUP6 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2583 DUP2 DUP5 PUSH2 0x245A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP12 0xC8 SELFDESTRUCT 0xC7 PUSH28 0x814D6DA0ADAC9CABC17AC141F86175DDE5A6265FD86EC23C04EB6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "249:463:14:-:0;;;476:28:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;293:27:14;;;;;;;;;;1251:62:1;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;249:463:14;;10282:86:1;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;249:463:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1186": {
									"entryPoint": 3563,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_doSafeBatchTransferAcceptanceCheck_1170": {
									"entryPoint": 4954,
									"id": 1170,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1100": {
									"entryPoint": 4523,
									"id": 1100,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_862": {
									"entryPoint": 2520,
									"id": 862,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1651": {
									"entryPoint": 2231,
									"id": 1651,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_799": {
									"entryPoint": 2238,
									"id": 799,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_744": {
									"entryPoint": 3129,
									"id": 744,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1032": {
									"entryPoint": 2768,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_1428": {
									"entryPoint": 2669,
									"id": 1428,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_678": {
									"entryPoint": 3391,
									"id": 678,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_602": {
									"entryPoint": 3611,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_326": {
									"entryPoint": 1319,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_256": {
									"entryPoint": 580,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@currentID_3244": {
									"entryPoint": 1146,
									"id": 3244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_359": {
									"entryPoint": 1671,
									"id": 359,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_3268": {
									"entryPoint": 1582,
									"id": 3268,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_449": {
									"entryPoint": 1152,
									"id": 449,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_3290": {
									"entryPoint": 1113,
									"id": 3290,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_403": {
									"entryPoint": 1813,
									"id": 403,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_342": {
									"entryPoint": 1649,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2057": {
									"entryPoint": 1980,
									"id": 2057,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_228": {
									"entryPoint": 665,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1625": {
									"entryPoint": 2501,
									"id": 1625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1638": {
									"entryPoint": 2482,
									"id": 1638,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_1406": {
									"entryPoint": 890,
									"id": 1406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_239": {
									"entryPoint": 2085,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6282,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7383,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256": {
									"entryPoint": 6011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptr": {
									"entryPoint": 7493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 7176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8193,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8243,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9513,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9362,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9109,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9227,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8282,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8765,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6483,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8366,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7896,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6278,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8534,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8666,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8703,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:31922:15",
										"nodeType": "YulBlock",
										"src": "0:31922:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "748:87:15",
													"nodeType": "YulBlock",
													"src": "748:87:15",
													"statements": [
														{
															"nativeSrc": "758:29:15",
															"nodeType": "YulAssignment",
															"src": "758:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:15"
																},
																"nativeSrc": "767:20:15",
																"nodeType": "YulFunctionCall",
																"src": "767:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:15"
																},
																"nativeSrc": "796:33:15",
																"nodeType": "YulFunctionCall",
																"src": "796:33:15"
															},
															"nativeSrc": "796:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:15",
														"nodeType": "YulTypedName",
														"src": "726:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:15",
														"nodeType": "YulTypedName",
														"src": "734:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:15",
														"nodeType": "YulTypedName",
														"src": "742:5:15",
														"type": ""
													}
												],
												"src": "696:139:15"
											},
											{
												"body": {
													"nativeSrc": "886:32:15",
													"nodeType": "YulBlock",
													"src": "886:32:15",
													"statements": [
														{
															"nativeSrc": "896:16:15",
															"nodeType": "YulAssignment",
															"src": "896:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:15",
																"nodeType": "YulIdentifier",
																"src": "907:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:15",
														"nodeType": "YulTypedName",
														"src": "868:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:15",
														"nodeType": "YulTypedName",
														"src": "878:7:15",
														"type": ""
													}
												],
												"src": "841:77:15"
											},
											{
												"body": {
													"nativeSrc": "967:79:15",
													"nodeType": "YulBlock",
													"src": "967:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:15",
																"nodeType": "YulBlock",
																"src": "1024:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:15"
																			},
																			"nativeSrc": "1026:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:15"
																		},
																		"nativeSrc": "1026:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:15"
																				},
																				"nativeSrc": "997:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:15"
																		},
																		"nativeSrc": "987:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:15"
																},
																"nativeSrc": "980:43:15",
																"nodeType": "YulFunctionCall",
																"src": "980:43:15"
															},
															"nativeSrc": "977:63:15",
															"nodeType": "YulIf",
															"src": "977:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:15",
														"nodeType": "YulTypedName",
														"src": "960:5:15",
														"type": ""
													}
												],
												"src": "924:122:15"
											},
											{
												"body": {
													"nativeSrc": "1104:87:15",
													"nodeType": "YulBlock",
													"src": "1104:87:15",
													"statements": [
														{
															"nativeSrc": "1114:29:15",
															"nodeType": "YulAssignment",
															"src": "1114:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:15"
																},
																"nativeSrc": "1123:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:15"
																},
																"nativeSrc": "1152:33:15",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:15"
															},
															"nativeSrc": "1152:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:15",
														"nodeType": "YulTypedName",
														"src": "1082:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:15",
														"nodeType": "YulTypedName",
														"src": "1090:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:15",
														"nodeType": "YulTypedName",
														"src": "1098:5:15",
														"type": ""
													}
												],
												"src": "1052:139:15"
											},
											{
												"body": {
													"nativeSrc": "1280:391:15",
													"nodeType": "YulBlock",
													"src": "1280:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:15",
																"nodeType": "YulBlock",
																"src": "1326:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:15"
																			},
																			"nativeSrc": "1328:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:15"
																		},
																		"nativeSrc": "1328:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:15"
																		},
																		"nativeSrc": "1297:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:15"
																},
																"nativeSrc": "1293:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:15"
															},
															"nativeSrc": "1290:119:15",
															"nodeType": "YulIf",
															"src": "1290:119:15"
														},
														{
															"nativeSrc": "1419:117:15",
															"nodeType": "YulBlock",
															"src": "1419:117:15",
															"statements": [
																{
																	"nativeSrc": "1434:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:15",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:15"
																				},
																				"nativeSrc": "1494:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:15"
																		},
																		"nativeSrc": "1473:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:15",
															"nodeType": "YulBlock",
															"src": "1546:118:15",
															"statements": [
																{
																	"nativeSrc": "1561:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:15",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:15"
																				},
																				"nativeSrc": "1622:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:15"
																		},
																		"nativeSrc": "1601:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:15",
														"nodeType": "YulTypedName",
														"src": "1242:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:15",
														"nodeType": "YulTypedName",
														"src": "1253:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:15",
														"nodeType": "YulTypedName",
														"src": "1265:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:15",
														"nodeType": "YulTypedName",
														"src": "1273:6:15",
														"type": ""
													}
												],
												"src": "1197:474:15"
											},
											{
												"body": {
													"nativeSrc": "1742:53:15",
													"nodeType": "YulBlock",
													"src": "1742:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:15"
																		},
																		"nativeSrc": "1764:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:15"
																},
																"nativeSrc": "1752:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:15"
															},
															"nativeSrc": "1752:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:15",
														"nodeType": "YulTypedName",
														"src": "1730:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:15",
														"nodeType": "YulTypedName",
														"src": "1737:3:15",
														"type": ""
													}
												],
												"src": "1677:118:15"
											},
											{
												"body": {
													"nativeSrc": "1899:124:15",
													"nodeType": "YulBlock",
													"src": "1899:124:15",
													"statements": [
														{
															"nativeSrc": "1909:26:15",
															"nodeType": "YulAssignment",
															"src": "1909:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:15"
																},
																"nativeSrc": "1917:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:15"
																		},
																		"nativeSrc": "1998:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:15"
																},
																"nativeSrc": "1945:71:15",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:15"
															},
															"nativeSrc": "1945:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:15",
														"nodeType": "YulTypedName",
														"src": "1871:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:15",
														"nodeType": "YulTypedName",
														"src": "1883:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:15",
														"nodeType": "YulTypedName",
														"src": "1894:4:15",
														"type": ""
													}
												],
												"src": "1801:222:15"
											},
											{
												"body": {
													"nativeSrc": "2073:105:15",
													"nodeType": "YulBlock",
													"src": "2073:105:15",
													"statements": [
														{
															"nativeSrc": "2083:89:15",
															"nodeType": "YulAssignment",
															"src": "2083:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:15",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:15"
																},
																"nativeSrc": "2094:78:15",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:15",
														"nodeType": "YulTypedName",
														"src": "2055:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:15",
														"nodeType": "YulTypedName",
														"src": "2065:7:15",
														"type": ""
													}
												],
												"src": "2029:149:15"
											},
											{
												"body": {
													"nativeSrc": "2226:78:15",
													"nodeType": "YulBlock",
													"src": "2226:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:15",
																"nodeType": "YulBlock",
																"src": "2282:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:15"
																			},
																			"nativeSrc": "2284:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:15"
																		},
																		"nativeSrc": "2284:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:15"
																				},
																				"nativeSrc": "2256:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:15"
																		},
																		"nativeSrc": "2246:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:15"
																},
																"nativeSrc": "2239:42:15",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:15"
															},
															"nativeSrc": "2236:62:15",
															"nodeType": "YulIf",
															"src": "2236:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:15",
														"nodeType": "YulTypedName",
														"src": "2219:5:15",
														"type": ""
													}
												],
												"src": "2184:120:15"
											},
											{
												"body": {
													"nativeSrc": "2361:86:15",
													"nodeType": "YulBlock",
													"src": "2361:86:15",
													"statements": [
														{
															"nativeSrc": "2371:29:15",
															"nodeType": "YulAssignment",
															"src": "2371:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:15"
																},
																"nativeSrc": "2380:20:15",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:15"
																},
																"nativeSrc": "2409:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:15"
															},
															"nativeSrc": "2409:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:15",
														"nodeType": "YulTypedName",
														"src": "2339:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:15",
														"nodeType": "YulTypedName",
														"src": "2347:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:15",
														"nodeType": "YulTypedName",
														"src": "2355:5:15",
														"type": ""
													}
												],
												"src": "2310:137:15"
											},
											{
												"body": {
													"nativeSrc": "2518:262:15",
													"nodeType": "YulBlock",
													"src": "2518:262:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:15",
																"nodeType": "YulBlock",
																"src": "2564:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:15"
																			},
																			"nativeSrc": "2566:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:15"
																		},
																		"nativeSrc": "2566:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:15"
																		},
																		"nativeSrc": "2535:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:15"
																},
																"nativeSrc": "2531:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:15"
															},
															"nativeSrc": "2528:119:15",
															"nodeType": "YulIf",
															"src": "2528:119:15"
														},
														{
															"nativeSrc": "2657:116:15",
															"nodeType": "YulBlock",
															"src": "2657:116:15",
															"statements": [
																{
																	"nativeSrc": "2672:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:15",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:15"
																				},
																				"nativeSrc": "2731:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:15"
																		},
																		"nativeSrc": "2711:52:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:15",
														"nodeType": "YulTypedName",
														"src": "2488:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:15",
														"nodeType": "YulTypedName",
														"src": "2499:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:15",
														"nodeType": "YulTypedName",
														"src": "2511:6:15",
														"type": ""
													}
												],
												"src": "2453:327:15"
											},
											{
												"body": {
													"nativeSrc": "2828:48:15",
													"nodeType": "YulBlock",
													"src": "2828:48:15",
													"statements": [
														{
															"nativeSrc": "2838:32:15",
															"nodeType": "YulAssignment",
															"src": "2838:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:15"
																		},
																		"nativeSrc": "2856:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:15"
																},
																"nativeSrc": "2849:21:15",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:15",
														"nodeType": "YulTypedName",
														"src": "2810:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:15",
														"nodeType": "YulTypedName",
														"src": "2820:7:15",
														"type": ""
													}
												],
												"src": "2786:90:15"
											},
											{
												"body": {
													"nativeSrc": "2941:50:15",
													"nodeType": "YulBlock",
													"src": "2941:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:15"
																		},
																		"nativeSrc": "2963:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:15"
																},
																"nativeSrc": "2951:34:15",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:15"
															},
															"nativeSrc": "2951:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:15",
														"nodeType": "YulTypedName",
														"src": "2929:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:15",
														"nodeType": "YulTypedName",
														"src": "2936:3:15",
														"type": ""
													}
												],
												"src": "2882:109:15"
											},
											{
												"body": {
													"nativeSrc": "3089:118:15",
													"nodeType": "YulBlock",
													"src": "3089:118:15",
													"statements": [
														{
															"nativeSrc": "3099:26:15",
															"nodeType": "YulAssignment",
															"src": "3099:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:15"
																},
																"nativeSrc": "3107:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:15"
																		},
																		"nativeSrc": "3182:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:15"
																},
																"nativeSrc": "3135:65:15",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:15"
															},
															"nativeSrc": "3135:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:15",
														"nodeType": "YulTypedName",
														"src": "3061:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:15",
														"nodeType": "YulTypedName",
														"src": "3073:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:15",
														"nodeType": "YulTypedName",
														"src": "3084:4:15",
														"type": ""
													}
												],
												"src": "2997:210:15"
											},
											{
												"body": {
													"nativeSrc": "3279:263:15",
													"nodeType": "YulBlock",
													"src": "3279:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:83:15",
																"nodeType": "YulBlock",
																"src": "3325:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3327:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:15"
																			},
																			"nativeSrc": "3327:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:15"
																		},
																		"nativeSrc": "3327:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3296:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:15"
																		},
																		"nativeSrc": "3296:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3292:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:15"
																},
																"nativeSrc": "3292:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3292:32:15"
															},
															"nativeSrc": "3289:119:15",
															"nodeType": "YulIf",
															"src": "3289:119:15"
														},
														{
															"nativeSrc": "3418:117:15",
															"nodeType": "YulBlock",
															"src": "3418:117:15",
															"statements": [
																{
																	"nativeSrc": "3433:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3447:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3437:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:15",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:15"
																				},
																				"nativeSrc": "3493:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3472:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:15"
																		},
																		"nativeSrc": "3472:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3462:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3213:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3249:9:15",
														"nodeType": "YulTypedName",
														"src": "3249:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3260:7:15",
														"nodeType": "YulTypedName",
														"src": "3260:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3272:6:15",
														"nodeType": "YulTypedName",
														"src": "3272:6:15",
														"type": ""
													}
												],
												"src": "3213:329:15"
											},
											{
												"body": {
													"nativeSrc": "3607:40:15",
													"nodeType": "YulBlock",
													"src": "3607:40:15",
													"statements": [
														{
															"nativeSrc": "3618:22:15",
															"nodeType": "YulAssignment",
															"src": "3618:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3634:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3628:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:15"
																},
																"nativeSrc": "3628:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3628:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3618:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3548:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3590:5:15",
														"nodeType": "YulTypedName",
														"src": "3590:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3600:6:15",
														"nodeType": "YulTypedName",
														"src": "3600:6:15",
														"type": ""
													}
												],
												"src": "3548:99:15"
											},
											{
												"body": {
													"nativeSrc": "3749:73:15",
													"nodeType": "YulBlock",
													"src": "3749:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3766:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3771:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:15"
																},
																"nativeSrc": "3759:19:15",
																"nodeType": "YulFunctionCall",
																"src": "3759:19:15"
															},
															"nativeSrc": "3759:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:15"
														},
														{
															"nativeSrc": "3787:29:15",
															"nodeType": "YulAssignment",
															"src": "3787:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3806:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3811:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3802:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:15"
																},
																"nativeSrc": "3802:14:15",
																"nodeType": "YulFunctionCall",
																"src": "3802:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3787:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3653:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3721:3:15",
														"nodeType": "YulTypedName",
														"src": "3721:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3726:6:15",
														"nodeType": "YulTypedName",
														"src": "3726:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3737:11:15",
														"nodeType": "YulTypedName",
														"src": "3737:11:15",
														"type": ""
													}
												],
												"src": "3653:169:15"
											},
											{
												"body": {
													"nativeSrc": "3890:77:15",
													"nodeType": "YulBlock",
													"src": "3890:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3907:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3907:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3912:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3912:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3917:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3917:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3901:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3901:5:15"
																},
																"nativeSrc": "3901:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3901:23:15"
															},
															"nativeSrc": "3901:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "3901:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3944:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3944:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3949:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3949:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3940:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3940:3:15"
																		},
																		"nativeSrc": "3940:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3940:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3958:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3958:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3933:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3933:6:15"
																},
																"nativeSrc": "3933:27:15",
																"nodeType": "YulFunctionCall",
																"src": "3933:27:15"
															},
															"nativeSrc": "3933:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "3933:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3828:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3872:3:15",
														"nodeType": "YulTypedName",
														"src": "3872:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3877:3:15",
														"nodeType": "YulTypedName",
														"src": "3877:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3882:6:15",
														"nodeType": "YulTypedName",
														"src": "3882:6:15",
														"type": ""
													}
												],
												"src": "3828:139:15"
											},
											{
												"body": {
													"nativeSrc": "4021:54:15",
													"nodeType": "YulBlock",
													"src": "4021:54:15",
													"statements": [
														{
															"nativeSrc": "4031:38:15",
															"nodeType": "YulAssignment",
															"src": "4031:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4049:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4049:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4056:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4056:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4045:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4045:3:15"
																		},
																		"nativeSrc": "4045:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4045:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4065:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4065:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4061:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:15"
																		},
																		"nativeSrc": "4061:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4041:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4041:3:15"
																},
																"nativeSrc": "4041:28:15",
																"nodeType": "YulFunctionCall",
																"src": "4041:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4031:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3973:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4004:5:15",
														"nodeType": "YulTypedName",
														"src": "4004:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4014:6:15",
														"nodeType": "YulTypedName",
														"src": "4014:6:15",
														"type": ""
													}
												],
												"src": "3973:102:15"
											},
											{
												"body": {
													"nativeSrc": "4173:285:15",
													"nodeType": "YulBlock",
													"src": "4173:285:15",
													"statements": [
														{
															"nativeSrc": "4183:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4183:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4230:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4230:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4197:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "4197:32:15"
																},
																"nativeSrc": "4197:39:15",
																"nodeType": "YulFunctionCall",
																"src": "4197:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4187:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4187:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4245:78:15",
															"nodeType": "YulAssignment",
															"src": "4245:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4311:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4311:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4316:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4316:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4252:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "4252:58:15"
																},
																"nativeSrc": "4252:71:15",
																"nodeType": "YulFunctionCall",
																"src": "4252:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4245:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4371:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4371:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4378:4:15",
																				"nodeType": "YulLiteral",
																				"src": "4378:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4367:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4367:3:15"
																		},
																		"nativeSrc": "4367:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4367:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4385:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4385:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4390:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4390:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4332:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "4332:34:15"
																},
																"nativeSrc": "4332:65:15",
																"nodeType": "YulFunctionCall",
																"src": "4332:65:15"
															},
															"nativeSrc": "4332:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "4332:65:15"
														},
														{
															"nativeSrc": "4406:46:15",
															"nodeType": "YulAssignment",
															"src": "4406:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4417:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4417:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4444:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4444:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4422:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "4422:21:15"
																		},
																		"nativeSrc": "4422:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4422:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4413:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:15"
																},
																"nativeSrc": "4413:39:15",
																"nodeType": "YulFunctionCall",
																"src": "4413:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4406:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4406:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4081:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4154:5:15",
														"nodeType": "YulTypedName",
														"src": "4154:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4161:3:15",
														"nodeType": "YulTypedName",
														"src": "4161:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4169:3:15",
														"nodeType": "YulTypedName",
														"src": "4169:3:15",
														"type": ""
													}
												],
												"src": "4081:377:15"
											},
											{
												"body": {
													"nativeSrc": "4582:195:15",
													"nodeType": "YulBlock",
													"src": "4582:195:15",
													"statements": [
														{
															"nativeSrc": "4592:26:15",
															"nodeType": "YulAssignment",
															"src": "4592:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4604:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4604:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4615:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4615:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4600:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4600:3:15"
																},
																"nativeSrc": "4600:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4600:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4592:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4592:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4639:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4650:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4650:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4635:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:15"
																		},
																		"nativeSrc": "4635:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4658:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4658:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4664:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4654:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4654:3:15"
																		},
																		"nativeSrc": "4654:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4654:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4628:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:15"
																},
																"nativeSrc": "4628:47:15",
																"nodeType": "YulFunctionCall",
																"src": "4628:47:15"
															},
															"nativeSrc": "4628:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "4628:47:15"
														},
														{
															"nativeSrc": "4684:86:15",
															"nodeType": "YulAssignment",
															"src": "4684:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4756:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4756:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4765:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4692:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "4692:63:15"
																},
																"nativeSrc": "4692:78:15",
																"nodeType": "YulFunctionCall",
																"src": "4692:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4684:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4684:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4464:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4554:9:15",
														"nodeType": "YulTypedName",
														"src": "4554:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4566:6:15",
														"nodeType": "YulTypedName",
														"src": "4566:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4577:4:15",
														"nodeType": "YulTypedName",
														"src": "4577:4:15",
														"type": ""
													}
												],
												"src": "4464:313:15"
											},
											{
												"body": {
													"nativeSrc": "4900:648:15",
													"nodeType": "YulBlock",
													"src": "4900:648:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4947:83:15",
																"nodeType": "YulBlock",
																"src": "4947:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4949:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4949:77:15"
																			},
																			"nativeSrc": "4949:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4949:79:15"
																		},
																		"nativeSrc": "4949:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4949:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4921:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4921:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4930:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4930:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4917:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:15"
																		},
																		"nativeSrc": "4917:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4917:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4942:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4942:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4913:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4913:3:15"
																},
																"nativeSrc": "4913:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4913:33:15"
															},
															"nativeSrc": "4910:120:15",
															"nodeType": "YulIf",
															"src": "4910:120:15"
														},
														{
															"nativeSrc": "5040:117:15",
															"nodeType": "YulBlock",
															"src": "5040:117:15",
															"statements": [
																{
																	"nativeSrc": "5055:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5055:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5069:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5069:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5059:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5059:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5084:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5084:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5119:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5119:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5130:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5130:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5115:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5115:3:15"
																				},
																				"nativeSrc": "5115:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5115:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5139:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5139:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5094:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5094:20:15"
																		},
																		"nativeSrc": "5094:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5094:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5084:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5084:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5167:118:15",
															"nodeType": "YulBlock",
															"src": "5167:118:15",
															"statements": [
																{
																	"nativeSrc": "5182:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5182:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5196:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5196:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5186:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5186:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5212:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5212:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5247:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5247:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5258:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5258:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5243:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5243:3:15"
																				},
																				"nativeSrc": "5243:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5243:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5267:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5267:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5222:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5222:20:15"
																		},
																		"nativeSrc": "5222:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5212:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5212:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5295:118:15",
															"nodeType": "YulBlock",
															"src": "5295:118:15",
															"statements": [
																{
																	"nativeSrc": "5310:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5310:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5324:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5324:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5314:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5314:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5340:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5340:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5375:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5375:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5386:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5386:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5371:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5371:3:15"
																				},
																				"nativeSrc": "5371:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5371:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5395:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5395:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5350:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5350:20:15"
																		},
																		"nativeSrc": "5350:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5350:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5340:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5340:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5423:118:15",
															"nodeType": "YulBlock",
															"src": "5423:118:15",
															"statements": [
																{
																	"nativeSrc": "5438:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5438:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5452:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5452:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5442:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5442:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5468:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5468:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5503:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5503:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5514:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5514:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5499:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5499:3:15"
																				},
																				"nativeSrc": "5499:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5499:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5523:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5523:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5478:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5478:20:15"
																		},
																		"nativeSrc": "5478:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5478:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5468:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5468:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
												"nativeSrc": "4783:765:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4846:9:15",
														"nodeType": "YulTypedName",
														"src": "4846:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4857:7:15",
														"nodeType": "YulTypedName",
														"src": "4857:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4869:6:15",
														"nodeType": "YulTypedName",
														"src": "4869:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4877:6:15",
														"nodeType": "YulTypedName",
														"src": "4877:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4885:6:15",
														"nodeType": "YulTypedName",
														"src": "4885:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4893:6:15",
														"nodeType": "YulTypedName",
														"src": "4893:6:15",
														"type": ""
													}
												],
												"src": "4783:765:15"
											},
											{
												"body": {
													"nativeSrc": "5643:28:15",
													"nodeType": "YulBlock",
													"src": "5643:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5660:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5660:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5663:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5653:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5653:6:15"
																},
																"nativeSrc": "5653:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5653:12:15"
															},
															"nativeSrc": "5653:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "5653:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5554:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "5554:117:15"
											},
											{
												"body": {
													"nativeSrc": "5705:152:15",
													"nodeType": "YulBlock",
													"src": "5705:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5722:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5722:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5725:77:15",
																		"nodeType": "YulLiteral",
																		"src": "5725:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5715:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5715:6:15"
																},
																"nativeSrc": "5715:88:15",
																"nodeType": "YulFunctionCall",
																"src": "5715:88:15"
															},
															"nativeSrc": "5715:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "5715:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5819:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5819:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5822:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5822:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5812:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5812:6:15"
																},
																"nativeSrc": "5812:15:15",
																"nodeType": "YulFunctionCall",
																"src": "5812:15:15"
															},
															"nativeSrc": "5812:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "5812:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5843:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5843:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5846:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5846:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5836:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5836:6:15"
																},
																"nativeSrc": "5836:15:15",
																"nodeType": "YulFunctionCall",
																"src": "5836:15:15"
															},
															"nativeSrc": "5836:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "5836:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5677:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "5677:180:15"
											},
											{
												"body": {
													"nativeSrc": "5906:238:15",
													"nodeType": "YulBlock",
													"src": "5906:238:15",
													"statements": [
														{
															"nativeSrc": "5916:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5916:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5938:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5938:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5968:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5968:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5946:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "5946:21:15"
																		},
																		"nativeSrc": "5946:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5946:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5934:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:15"
																},
																"nativeSrc": "5934:40:15",
																"nodeType": "YulFunctionCall",
																"src": "5934:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5920:10:15",
																	"nodeType": "YulTypedName",
																	"src": "5920:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6085:22:15",
																"nodeType": "YulBlock",
																"src": "6085:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6087:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6087:16:15"
																			},
																			"nativeSrc": "6087:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6087:18:15"
																		},
																		"nativeSrc": "6087:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6087:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6028:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "6028:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6040:18:15",
																				"nodeType": "YulLiteral",
																				"src": "6040:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6025:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6025:2:15"
																		},
																		"nativeSrc": "6025:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6025:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6064:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "6064:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6076:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6076:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6061:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6061:2:15"
																		},
																		"nativeSrc": "6061:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6061:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6022:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6022:2:15"
																},
																"nativeSrc": "6022:62:15",
																"nodeType": "YulFunctionCall",
																"src": "6022:62:15"
															},
															"nativeSrc": "6019:88:15",
															"nodeType": "YulIf",
															"src": "6019:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6123:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6123:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6127:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "6127:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6116:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6116:6:15"
																},
																"nativeSrc": "6116:22:15",
																"nodeType": "YulFunctionCall",
																"src": "6116:22:15"
															},
															"nativeSrc": "6116:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "6116:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5863:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5892:6:15",
														"nodeType": "YulTypedName",
														"src": "5892:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5900:4:15",
														"nodeType": "YulTypedName",
														"src": "5900:4:15",
														"type": ""
													}
												],
												"src": "5863:281:15"
											},
											{
												"body": {
													"nativeSrc": "6191:88:15",
													"nodeType": "YulBlock",
													"src": "6191:88:15",
													"statements": [
														{
															"nativeSrc": "6201:30:15",
															"nodeType": "YulAssignment",
															"src": "6201:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6211:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "6211:18:15"
																},
																"nativeSrc": "6211:20:15",
																"nodeType": "YulFunctionCall",
																"src": "6211:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6201:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6201:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6260:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6260:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6268:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6268:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6240:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "6240:19:15"
																},
																"nativeSrc": "6240:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6240:33:15"
															},
															"nativeSrc": "6240:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "6240:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6150:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6175:4:15",
														"nodeType": "YulTypedName",
														"src": "6175:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6184:6:15",
														"nodeType": "YulTypedName",
														"src": "6184:6:15",
														"type": ""
													}
												],
												"src": "6150:129:15"
											},
											{
												"body": {
													"nativeSrc": "6367:229:15",
													"nodeType": "YulBlock",
													"src": "6367:229:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6472:22:15",
																"nodeType": "YulBlock",
																"src": "6472:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6474:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6474:16:15"
																			},
																			"nativeSrc": "6474:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6474:18:15"
																		},
																		"nativeSrc": "6474:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6474:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6444:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6444:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6452:18:15",
																		"nodeType": "YulLiteral",
																		"src": "6452:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6441:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6441:2:15"
																},
																"nativeSrc": "6441:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6441:30:15"
															},
															"nativeSrc": "6438:56:15",
															"nodeType": "YulIf",
															"src": "6438:56:15"
														},
														{
															"nativeSrc": "6504:25:15",
															"nodeType": "YulAssignment",
															"src": "6504:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6516:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6516:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6524:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6524:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6512:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6512:3:15"
																},
																"nativeSrc": "6512:17:15",
																"nodeType": "YulFunctionCall",
																"src": "6512:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6504:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6504:4:15"
																}
															]
														},
														{
															"nativeSrc": "6566:23:15",
															"nodeType": "YulAssignment",
															"src": "6566:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6578:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6578:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6584:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6584:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6574:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6574:3:15"
																},
																"nativeSrc": "6574:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6574:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6566:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6566:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6285:311:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6351:6:15",
														"nodeType": "YulTypedName",
														"src": "6351:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6362:4:15",
														"nodeType": "YulTypedName",
														"src": "6362:4:15",
														"type": ""
													}
												],
												"src": "6285:311:15"
											},
											{
												"body": {
													"nativeSrc": "6691:28:15",
													"nodeType": "YulBlock",
													"src": "6691:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6708:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6708:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6711:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6701:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6701:6:15"
																},
																"nativeSrc": "6701:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6701:12:15"
															},
															"nativeSrc": "6701:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "6701:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6602:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6602:117:15"
											},
											{
												"body": {
													"nativeSrc": "6844:608:15",
													"nodeType": "YulBlock",
													"src": "6844:608:15",
													"statements": [
														{
															"nativeSrc": "6854:90:15",
															"nodeType": "YulAssignment",
															"src": "6854:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6936:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6936:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "6879:56:15",
																			"nodeType": "YulIdentifier",
																			"src": "6879:56:15"
																		},
																		"nativeSrc": "6879:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6879:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6863:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "6863:15:15"
																},
																"nativeSrc": "6863:81:15",
																"nodeType": "YulFunctionCall",
																"src": "6863:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6854:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6854:5:15"
																}
															]
														},
														{
															"nativeSrc": "6953:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6953:16:15",
															"value": {
																"name": "array",
																"nativeSrc": "6964:5:15",
																"nodeType": "YulIdentifier",
																"src": "6964:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6957:3:15",
																	"nodeType": "YulTypedName",
																	"src": "6957:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6986:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6986:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6993:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6993:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6979:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6979:6:15"
																},
																"nativeSrc": "6979:21:15",
																"nodeType": "YulFunctionCall",
																"src": "6979:21:15"
															},
															"nativeSrc": "6979:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "6979:21:15"
														},
														{
															"nativeSrc": "7009:23:15",
															"nodeType": "YulAssignment",
															"src": "7009:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7020:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7020:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7027:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7027:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7016:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7016:3:15"
																},
																"nativeSrc": "7016:16:15",
																"nodeType": "YulFunctionCall",
																"src": "7016:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "7009:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7009:3:15"
																}
															]
														},
														{
															"nativeSrc": "7042:44:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7042:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7060:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7060:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7072:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7072:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7080:4:15",
																				"nodeType": "YulLiteral",
																				"src": "7080:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7068:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7068:3:15"
																		},
																		"nativeSrc": "7068:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7068:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7056:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7056:3:15"
																},
																"nativeSrc": "7056:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7056:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "7046:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7046:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7114:103:15",
																"nodeType": "YulBlock",
																"src": "7114:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7128:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "7128:77:15"
																			},
																			"nativeSrc": "7128:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7128:79:15"
																		},
																		"nativeSrc": "7128:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7128:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7101:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7101:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7109:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7109:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7098:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7098:2:15"
																},
																"nativeSrc": "7098:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7098:15:15"
															},
															"nativeSrc": "7095:122:15",
															"nodeType": "YulIf",
															"src": "7095:122:15"
														},
														{
															"body": {
																"nativeSrc": "7302:144:15",
																"nodeType": "YulBlock",
																"src": "7302:144:15",
																"statements": [
																	{
																		"nativeSrc": "7317:21:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7317:21:15",
																		"value": {
																			"name": "src",
																			"nativeSrc": "7335:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7335:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "7321:10:15",
																				"nodeType": "YulTypedName",
																				"src": "7321:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7359:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7359:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "7385:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "7385:10:15"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "7397:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "7397:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "7364:20:15",
																						"nodeType": "YulIdentifier",
																						"src": "7364:20:15"
																					},
																					"nativeSrc": "7364:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7364:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7352:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7352:6:15"
																			},
																			"nativeSrc": "7352:50:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7352:50:15"
																		},
																		"nativeSrc": "7352:50:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7352:50:15"
																	},
																	{
																		"nativeSrc": "7415:21:15",
																		"nodeType": "YulAssignment",
																		"src": "7415:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7426:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7426:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7431:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7431:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7422:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7422:3:15"
																			},
																			"nativeSrc": "7422:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7422:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7415:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7415:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7255:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7255:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7260:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7260:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7252:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7252:2:15"
																},
																"nativeSrc": "7252:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7252:15:15"
															},
															"nativeSrc": "7226:220:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7268:25:15",
																"nodeType": "YulBlock",
																"src": "7268:25:15",
																"statements": [
																	{
																		"nativeSrc": "7270:21:15",
																		"nodeType": "YulAssignment",
																		"src": "7270:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7281:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7281:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7286:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7286:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7277:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7277:3:15"
																			},
																			"nativeSrc": "7277:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7277:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7270:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7270:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7230:21:15",
																"nodeType": "YulBlock",
																"src": "7230:21:15",
																"statements": [
																	{
																		"nativeSrc": "7232:17:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7232:17:15",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "7243:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "7243:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "7236:3:15",
																				"nodeType": "YulTypedName",
																				"src": "7236:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7226:220:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6742:710:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6814:6:15",
														"nodeType": "YulTypedName",
														"src": "6814:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6822:6:15",
														"nodeType": "YulTypedName",
														"src": "6822:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6830:3:15",
														"nodeType": "YulTypedName",
														"src": "6830:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6838:5:15",
														"nodeType": "YulTypedName",
														"src": "6838:5:15",
														"type": ""
													}
												],
												"src": "6742:710:15"
											},
											{
												"body": {
													"nativeSrc": "7552:293:15",
													"nodeType": "YulBlock",
													"src": "7552:293:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7601:83:15",
																"nodeType": "YulBlock",
																"src": "7601:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7603:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "7603:77:15"
																			},
																			"nativeSrc": "7603:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7603:79:15"
																		},
																		"nativeSrc": "7603:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7603:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7580:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "7580:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7588:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7588:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7576:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7576:3:15"
																				},
																				"nativeSrc": "7576:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7576:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7595:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7595:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7572:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7572:3:15"
																		},
																		"nativeSrc": "7572:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7572:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7565:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7565:6:15"
																},
																"nativeSrc": "7565:35:15",
																"nodeType": "YulFunctionCall",
																"src": "7565:35:15"
															},
															"nativeSrc": "7562:122:15",
															"nodeType": "YulIf",
															"src": "7562:122:15"
														},
														{
															"nativeSrc": "7693:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7693:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7720:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7720:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7707:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7707:12:15"
																},
																"nativeSrc": "7707:20:15",
																"nodeType": "YulFunctionCall",
																"src": "7707:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7697:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7697:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7736:103:15",
															"nodeType": "YulAssignment",
															"src": "7736:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7812:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7812:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7820:4:15",
																				"nodeType": "YulLiteral",
																				"src": "7820:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7808:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7808:3:15"
																		},
																		"nativeSrc": "7808:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7808:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7835:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7835:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7745:62:15",
																	"nodeType": "YulIdentifier",
																	"src": "7745:62:15"
																},
																"nativeSrc": "7745:94:15",
																"nodeType": "YulFunctionCall",
																"src": "7745:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7736:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7736:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7475:370:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7530:6:15",
														"nodeType": "YulTypedName",
														"src": "7530:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7538:3:15",
														"nodeType": "YulTypedName",
														"src": "7538:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7546:5:15",
														"nodeType": "YulTypedName",
														"src": "7546:5:15",
														"type": ""
													}
												],
												"src": "7475:370:15"
											},
											{
												"body": {
													"nativeSrc": "7940:28:15",
													"nodeType": "YulBlock",
													"src": "7940:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7957:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7957:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7960:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7960:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7950:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7950:6:15"
																},
																"nativeSrc": "7950:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7950:12:15"
															},
															"nativeSrc": "7950:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "7950:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7851:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7851:117:15"
											},
											{
												"body": {
													"nativeSrc": "8040:241:15",
													"nodeType": "YulBlock",
													"src": "8040:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8145:22:15",
																"nodeType": "YulBlock",
																"src": "8145:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8147:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "8147:16:15"
																			},
																			"nativeSrc": "8147:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8147:18:15"
																		},
																		"nativeSrc": "8147:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8147:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8117:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8117:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8125:18:15",
																		"nodeType": "YulLiteral",
																		"src": "8125:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8114:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8114:2:15"
																},
																"nativeSrc": "8114:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8114:30:15"
															},
															"nativeSrc": "8111:56:15",
															"nodeType": "YulIf",
															"src": "8111:56:15"
														},
														{
															"nativeSrc": "8177:37:15",
															"nodeType": "YulAssignment",
															"src": "8177:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8207:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8207:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8185:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "8185:21:15"
																},
																"nativeSrc": "8185:29:15",
																"nodeType": "YulFunctionCall",
																"src": "8185:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8177:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8177:4:15"
																}
															]
														},
														{
															"nativeSrc": "8251:23:15",
															"nodeType": "YulAssignment",
															"src": "8251:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8263:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "8263:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8269:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8269:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8259:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8259:3:15"
																},
																"nativeSrc": "8259:15:15",
																"nodeType": "YulFunctionCall",
																"src": "8259:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8251:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8251:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7974:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8024:6:15",
														"nodeType": "YulTypedName",
														"src": "8024:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8035:4:15",
														"nodeType": "YulTypedName",
														"src": "8035:4:15",
														"type": ""
													}
												],
												"src": "7974:307:15"
											},
											{
												"body": {
													"nativeSrc": "8351:84:15",
													"nodeType": "YulBlock",
													"src": "8351:84:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8375:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8375:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8380:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8380:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8385:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8385:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8362:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8362:12:15"
																},
																"nativeSrc": "8362:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8362:30:15"
															},
															"nativeSrc": "8362:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8362:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8412:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8412:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8417:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8417:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8408:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:15"
																		},
																		"nativeSrc": "8408:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8426:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8426:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8401:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:15"
																},
																"nativeSrc": "8401:27:15",
																"nodeType": "YulFunctionCall",
																"src": "8401:27:15"
															},
															"nativeSrc": "8401:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "8401:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8287:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8333:3:15",
														"nodeType": "YulTypedName",
														"src": "8333:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8338:3:15",
														"nodeType": "YulTypedName",
														"src": "8338:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8343:6:15",
														"nodeType": "YulTypedName",
														"src": "8343:6:15",
														"type": ""
													}
												],
												"src": "8287:148:15"
											},
											{
												"body": {
													"nativeSrc": "8524:340:15",
													"nodeType": "YulBlock",
													"src": "8524:340:15",
													"statements": [
														{
															"nativeSrc": "8534:74:15",
															"nodeType": "YulAssignment",
															"src": "8534:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8600:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8600:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8559:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "8559:40:15"
																		},
																		"nativeSrc": "8559:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8559:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8543:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "8543:15:15"
																},
																"nativeSrc": "8543:65:15",
																"nodeType": "YulFunctionCall",
																"src": "8543:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8534:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8534:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8624:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8624:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8631:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8631:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8617:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8617:6:15"
																},
																"nativeSrc": "8617:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8617:21:15"
															},
															"nativeSrc": "8617:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8617:21:15"
														},
														{
															"nativeSrc": "8647:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8647:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8662:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8662:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8669:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8669:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8658:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8658:3:15"
																},
																"nativeSrc": "8658:16:15",
																"nodeType": "YulFunctionCall",
																"src": "8658:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8651:3:15",
																	"nodeType": "YulTypedName",
																	"src": "8651:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8712:83:15",
																"nodeType": "YulBlock",
																"src": "8712:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8714:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8714:77:15"
																			},
																			"nativeSrc": "8714:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8714:79:15"
																		},
																		"nativeSrc": "8714:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8714:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8693:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8693:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8698:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8698:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8689:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8689:3:15"
																		},
																		"nativeSrc": "8689:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8689:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8707:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8707:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8686:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8686:2:15"
																},
																"nativeSrc": "8686:25:15",
																"nodeType": "YulFunctionCall",
																"src": "8686:25:15"
															},
															"nativeSrc": "8683:112:15",
															"nodeType": "YulIf",
															"src": "8683:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8841:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8841:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8846:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8846:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8851:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8804:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "8804:36:15"
																},
																"nativeSrc": "8804:54:15",
																"nodeType": "YulFunctionCall",
																"src": "8804:54:15"
															},
															"nativeSrc": "8804:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "8804:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8441:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8497:3:15",
														"nodeType": "YulTypedName",
														"src": "8497:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8502:6:15",
														"nodeType": "YulTypedName",
														"src": "8502:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8510:3:15",
														"nodeType": "YulTypedName",
														"src": "8510:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8518:5:15",
														"nodeType": "YulTypedName",
														"src": "8518:5:15",
														"type": ""
													}
												],
												"src": "8441:423:15"
											},
											{
												"body": {
													"nativeSrc": "8944:277:15",
													"nodeType": "YulBlock",
													"src": "8944:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8993:83:15",
																"nodeType": "YulBlock",
																"src": "8993:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8995:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8995:77:15"
																			},
																			"nativeSrc": "8995:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8995:79:15"
																		},
																		"nativeSrc": "8995:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8995:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8972:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8972:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8980:4:15",
																						"nodeType": "YulLiteral",
																						"src": "8980:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8968:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8968:3:15"
																				},
																				"nativeSrc": "8968:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8968:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8987:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8987:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8964:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8964:3:15"
																		},
																		"nativeSrc": "8964:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8964:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8957:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8957:6:15"
																},
																"nativeSrc": "8957:35:15",
																"nodeType": "YulFunctionCall",
																"src": "8957:35:15"
															},
															"nativeSrc": "8954:122:15",
															"nodeType": "YulIf",
															"src": "8954:122:15"
														},
														{
															"nativeSrc": "9085:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9085:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9112:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9112:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9099:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9099:12:15"
																},
																"nativeSrc": "9099:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9099:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9089:6:15",
																	"nodeType": "YulTypedName",
																	"src": "9089:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9128:87:15",
															"nodeType": "YulAssignment",
															"src": "9128:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9188:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9188:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9196:4:15",
																				"nodeType": "YulLiteral",
																				"src": "9196:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9184:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9184:3:15"
																		},
																		"nativeSrc": "9184:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9184:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9203:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9203:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9211:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9211:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9137:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "9137:46:15"
																},
																"nativeSrc": "9137:78:15",
																"nodeType": "YulFunctionCall",
																"src": "9137:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9128:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9128:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8883:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8922:6:15",
														"nodeType": "YulTypedName",
														"src": "8922:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8930:3:15",
														"nodeType": "YulTypedName",
														"src": "8930:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8938:5:15",
														"nodeType": "YulTypedName",
														"src": "8938:5:15",
														"type": ""
													}
												],
												"src": "8883:338:15"
											},
											{
												"body": {
													"nativeSrc": "9420:1316:15",
													"nodeType": "YulBlock",
													"src": "9420:1316:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9467:83:15",
																"nodeType": "YulBlock",
																"src": "9467:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9469:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "9469:77:15"
																			},
																			"nativeSrc": "9469:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9469:79:15"
																		},
																		"nativeSrc": "9469:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9469:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9441:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9441:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9450:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9450:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9437:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9437:3:15"
																		},
																		"nativeSrc": "9437:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9437:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9462:3:15",
																		"nodeType": "YulLiteral",
																		"src": "9462:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9433:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9433:3:15"
																},
																"nativeSrc": "9433:33:15",
																"nodeType": "YulFunctionCall",
																"src": "9433:33:15"
															},
															"nativeSrc": "9430:120:15",
															"nodeType": "YulIf",
															"src": "9430:120:15"
														},
														{
															"nativeSrc": "9560:117:15",
															"nodeType": "YulBlock",
															"src": "9560:117:15",
															"statements": [
																{
																	"nativeSrc": "9575:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9575:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9589:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9589:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9579:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9579:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9604:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9604:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9639:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9639:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9650:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9650:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9635:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9635:3:15"
																				},
																				"nativeSrc": "9635:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9635:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9659:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9659:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9614:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9614:20:15"
																		},
																		"nativeSrc": "9614:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9614:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9604:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9604:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9687:118:15",
															"nodeType": "YulBlock",
															"src": "9687:118:15",
															"statements": [
																{
																	"nativeSrc": "9702:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9702:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9716:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9716:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9706:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9706:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9732:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9732:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9767:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9767:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9778:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9778:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9763:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9763:3:15"
																				},
																				"nativeSrc": "9763:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9763:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9787:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9787:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9742:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9742:20:15"
																		},
																		"nativeSrc": "9742:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9742:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9732:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9732:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9815:303:15",
															"nodeType": "YulBlock",
															"src": "9815:303:15",
															"statements": [
																{
																	"nativeSrc": "9830:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9830:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9861:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9861:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9872:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9872:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9857:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9857:3:15"
																				},
																				"nativeSrc": "9857:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9857:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9844:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "9844:12:15"
																		},
																		"nativeSrc": "9844:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9844:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9834:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9834:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9923:83:15",
																		"nodeType": "YulBlock",
																		"src": "9923:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9925:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "9925:77:15"
																					},
																					"nativeSrc": "9925:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9925:79:15"
																				},
																				"nativeSrc": "9925:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "9925:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9895:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9895:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9903:18:15",
																				"nodeType": "YulLiteral",
																				"src": "9903:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9892:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9892:2:15"
																		},
																		"nativeSrc": "9892:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9892:30:15"
																	},
																	"nativeSrc": "9889:117:15",
																	"nodeType": "YulIf",
																	"src": "9889:117:15"
																},
																{
																	"nativeSrc": "10020:88:15",
																	"nodeType": "YulAssignment",
																	"src": "10020:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10080:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10080:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10091:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10091:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10076:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10076:3:15"
																				},
																				"nativeSrc": "10076:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10076:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10100:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10100:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10030:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "10030:45:15"
																		},
																		"nativeSrc": "10030:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10030:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10020:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10020:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10128:303:15",
															"nodeType": "YulBlock",
															"src": "10128:303:15",
															"statements": [
																{
																	"nativeSrc": "10143:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10143:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10174:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10174:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10185:2:15",
																						"nodeType": "YulLiteral",
																						"src": "10185:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10170:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10170:3:15"
																				},
																				"nativeSrc": "10170:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10170:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10157:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "10157:12:15"
																		},
																		"nativeSrc": "10157:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10157:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10147:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10147:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10236:83:15",
																		"nodeType": "YulBlock",
																		"src": "10236:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10238:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "10238:77:15"
																					},
																					"nativeSrc": "10238:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10238:79:15"
																				},
																				"nativeSrc": "10238:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "10238:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10208:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10208:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10216:18:15",
																				"nodeType": "YulLiteral",
																				"src": "10216:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10205:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10205:2:15"
																		},
																		"nativeSrc": "10205:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10205:30:15"
																	},
																	"nativeSrc": "10202:117:15",
																	"nodeType": "YulIf",
																	"src": "10202:117:15"
																},
																{
																	"nativeSrc": "10333:88:15",
																	"nodeType": "YulAssignment",
																	"src": "10333:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10393:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10393:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10404:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10404:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10389:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10389:3:15"
																				},
																				"nativeSrc": "10389:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10389:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10413:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10413:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10343:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "10343:45:15"
																		},
																		"nativeSrc": "10343:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10343:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10333:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10333:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10441:288:15",
															"nodeType": "YulBlock",
															"src": "10441:288:15",
															"statements": [
																{
																	"nativeSrc": "10456:47:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10456:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10487:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10487:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10498:3:15",
																						"nodeType": "YulLiteral",
																						"src": "10498:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10483:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10483:3:15"
																				},
																				"nativeSrc": "10483:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10483:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10470:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "10470:12:15"
																		},
																		"nativeSrc": "10470:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10470:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10460:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10460:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10550:83:15",
																		"nodeType": "YulBlock",
																		"src": "10550:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10552:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "10552:77:15"
																					},
																					"nativeSrc": "10552:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10552:79:15"
																				},
																				"nativeSrc": "10552:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "10552:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10522:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10522:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10530:18:15",
																				"nodeType": "YulLiteral",
																				"src": "10530:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10519:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10519:2:15"
																		},
																		"nativeSrc": "10519:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10519:30:15"
																	},
																	"nativeSrc": "10516:117:15",
																	"nodeType": "YulIf",
																	"src": "10516:117:15"
																},
																{
																	"nativeSrc": "10647:72:15",
																	"nodeType": "YulAssignment",
																	"src": "10647:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10691:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10691:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10702:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10702:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10687:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10687:3:15"
																				},
																				"nativeSrc": "10687:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10687:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10711:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10711:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10657:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "10657:29:15"
																		},
																		"nativeSrc": "10657:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10657:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10647:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10647:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "9227:1509:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9358:9:15",
														"nodeType": "YulTypedName",
														"src": "9358:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9369:7:15",
														"nodeType": "YulTypedName",
														"src": "9369:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9381:6:15",
														"nodeType": "YulTypedName",
														"src": "9381:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9389:6:15",
														"nodeType": "YulTypedName",
														"src": "9389:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9397:6:15",
														"nodeType": "YulTypedName",
														"src": "9397:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9405:6:15",
														"nodeType": "YulTypedName",
														"src": "9405:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9413:6:15",
														"nodeType": "YulTypedName",
														"src": "9413:6:15",
														"type": ""
													}
												],
												"src": "9227:1509:15"
											},
											{
												"body": {
													"nativeSrc": "10824:229:15",
													"nodeType": "YulBlock",
													"src": "10824:229:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10929:22:15",
																"nodeType": "YulBlock",
																"src": "10929:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10931:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10931:16:15"
																			},
																			"nativeSrc": "10931:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10931:18:15"
																		},
																		"nativeSrc": "10931:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10931:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10901:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10901:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10909:18:15",
																		"nodeType": "YulLiteral",
																		"src": "10909:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10898:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10898:2:15"
																},
																"nativeSrc": "10898:30:15",
																"nodeType": "YulFunctionCall",
																"src": "10898:30:15"
															},
															"nativeSrc": "10895:56:15",
															"nodeType": "YulIf",
															"src": "10895:56:15"
														},
														{
															"nativeSrc": "10961:25:15",
															"nodeType": "YulAssignment",
															"src": "10961:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10973:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10973:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10981:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10981:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10969:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10969:3:15"
																},
																"nativeSrc": "10969:17:15",
																"nodeType": "YulFunctionCall",
																"src": "10969:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10961:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10961:4:15"
																}
															]
														},
														{
															"nativeSrc": "11023:23:15",
															"nodeType": "YulAssignment",
															"src": "11023:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11035:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "11035:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11041:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11041:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11031:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11031:3:15"
																},
																"nativeSrc": "11031:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11031:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11023:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11023:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "10742:311:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10808:6:15",
														"nodeType": "YulTypedName",
														"src": "10808:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10819:4:15",
														"nodeType": "YulTypedName",
														"src": "10819:4:15",
														"type": ""
													}
												],
												"src": "10742:311:15"
											},
											{
												"body": {
													"nativeSrc": "11178:608:15",
													"nodeType": "YulBlock",
													"src": "11178:608:15",
													"statements": [
														{
															"nativeSrc": "11188:90:15",
															"nodeType": "YulAssignment",
															"src": "11188:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11270:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11270:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "11213:56:15",
																			"nodeType": "YulIdentifier",
																			"src": "11213:56:15"
																		},
																		"nativeSrc": "11213:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11213:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11197:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "11197:15:15"
																},
																"nativeSrc": "11197:81:15",
																"nodeType": "YulFunctionCall",
																"src": "11197:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11188:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11188:5:15"
																}
															]
														},
														{
															"nativeSrc": "11287:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11287:16:15",
															"value": {
																"name": "array",
																"nativeSrc": "11298:5:15",
																"nodeType": "YulIdentifier",
																"src": "11298:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11291:3:15",
																	"nodeType": "YulTypedName",
																	"src": "11291:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11320:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11320:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11327:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11327:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11313:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11313:6:15"
																},
																"nativeSrc": "11313:21:15",
																"nodeType": "YulFunctionCall",
																"src": "11313:21:15"
															},
															"nativeSrc": "11313:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "11313:21:15"
														},
														{
															"nativeSrc": "11343:23:15",
															"nodeType": "YulAssignment",
															"src": "11343:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11354:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11354:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11361:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11361:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11350:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11350:3:15"
																},
																"nativeSrc": "11350:16:15",
																"nodeType": "YulFunctionCall",
																"src": "11350:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "11343:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11343:3:15"
																}
															]
														},
														{
															"nativeSrc": "11376:44:15",
															"nodeType": "YulVariableDeclaration",
															"src": "11376:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11394:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11394:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11406:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11406:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11414:4:15",
																				"nodeType": "YulLiteral",
																				"src": "11414:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "11402:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11402:3:15"
																		},
																		"nativeSrc": "11402:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11402:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11390:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11390:3:15"
																},
																"nativeSrc": "11390:30:15",
																"nodeType": "YulFunctionCall",
																"src": "11390:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "11380:6:15",
																	"nodeType": "YulTypedName",
																	"src": "11380:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11448:103:15",
																"nodeType": "YulBlock",
																"src": "11448:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11462:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "11462:77:15"
																			},
																			"nativeSrc": "11462:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11462:79:15"
																		},
																		"nativeSrc": "11462:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11462:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11435:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11435:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11443:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11443:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11432:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "11432:2:15"
																},
																"nativeSrc": "11432:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11432:15:15"
															},
															"nativeSrc": "11429:122:15",
															"nodeType": "YulIf",
															"src": "11429:122:15"
														},
														{
															"body": {
																"nativeSrc": "11636:144:15",
																"nodeType": "YulBlock",
																"src": "11636:144:15",
																"statements": [
																	{
																		"nativeSrc": "11651:21:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11651:21:15",
																		"value": {
																			"name": "src",
																			"nativeSrc": "11669:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11669:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "11655:10:15",
																				"nodeType": "YulTypedName",
																				"src": "11655:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11693:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11693:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "11719:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "11719:10:15"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "11731:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "11731:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "11698:20:15",
																						"nodeType": "YulIdentifier",
																						"src": "11698:20:15"
																					},
																					"nativeSrc": "11698:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "11698:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11686:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11686:6:15"
																			},
																			"nativeSrc": "11686:50:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11686:50:15"
																		},
																		"nativeSrc": "11686:50:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11686:50:15"
																	},
																	{
																		"nativeSrc": "11749:21:15",
																		"nodeType": "YulAssignment",
																		"src": "11749:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11760:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11760:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11765:4:15",
																					"nodeType": "YulLiteral",
																					"src": "11765:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11756:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11756:3:15"
																			},
																			"nativeSrc": "11756:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11756:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "11749:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11749:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11589:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11589:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11594:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11594:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11586:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "11586:2:15"
																},
																"nativeSrc": "11586:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11586:15:15"
															},
															"nativeSrc": "11560:220:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11602:25:15",
																"nodeType": "YulBlock",
																"src": "11602:25:15",
																"statements": [
																	{
																		"nativeSrc": "11604:21:15",
																		"nodeType": "YulAssignment",
																		"src": "11604:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "11615:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11615:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11620:4:15",
																					"nodeType": "YulLiteral",
																					"src": "11620:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11611:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11611:3:15"
																			},
																			"nativeSrc": "11611:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11611:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "11604:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11604:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11564:21:15",
																"nodeType": "YulBlock",
																"src": "11564:21:15",
																"statements": [
																	{
																		"nativeSrc": "11566:17:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11566:17:15",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "11577:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "11577:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "11570:3:15",
																				"nodeType": "YulTypedName",
																				"src": "11570:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11560:220:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11076:710:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11148:6:15",
														"nodeType": "YulTypedName",
														"src": "11148:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11156:6:15",
														"nodeType": "YulTypedName",
														"src": "11156:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11164:3:15",
														"nodeType": "YulTypedName",
														"src": "11164:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11172:5:15",
														"nodeType": "YulTypedName",
														"src": "11172:5:15",
														"type": ""
													}
												],
												"src": "11076:710:15"
											},
											{
												"body": {
													"nativeSrc": "11886:293:15",
													"nodeType": "YulBlock",
													"src": "11886:293:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11935:83:15",
																"nodeType": "YulBlock",
																"src": "11935:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11937:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "11937:77:15"
																			},
																			"nativeSrc": "11937:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11937:79:15"
																		},
																		"nativeSrc": "11937:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11937:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11914:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11914:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11922:4:15",
																						"nodeType": "YulLiteral",
																						"src": "11922:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11910:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11910:3:15"
																				},
																				"nativeSrc": "11910:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11910:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11929:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "11929:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11906:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11906:3:15"
																		},
																		"nativeSrc": "11906:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11906:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11899:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11899:6:15"
																},
																"nativeSrc": "11899:35:15",
																"nodeType": "YulFunctionCall",
																"src": "11899:35:15"
															},
															"nativeSrc": "11896:122:15",
															"nodeType": "YulIf",
															"src": "11896:122:15"
														},
														{
															"nativeSrc": "12027:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "12027:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12054:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12054:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12041:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "12041:12:15"
																},
																"nativeSrc": "12041:20:15",
																"nodeType": "YulFunctionCall",
																"src": "12041:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12031:6:15",
																	"nodeType": "YulTypedName",
																	"src": "12031:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12070:103:15",
															"nodeType": "YulAssignment",
															"src": "12070:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12146:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12146:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12154:4:15",
																				"nodeType": "YulLiteral",
																				"src": "12154:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12142:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12142:3:15"
																		},
																		"nativeSrc": "12142:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12142:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12161:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12161:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12169:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12169:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "12079:62:15",
																	"nodeType": "YulIdentifier",
																	"src": "12079:62:15"
																},
																"nativeSrc": "12079:94:15",
																"nodeType": "YulFunctionCall",
																"src": "12079:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12070:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12070:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11809:370:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11864:6:15",
														"nodeType": "YulTypedName",
														"src": "11864:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11872:3:15",
														"nodeType": "YulTypedName",
														"src": "11872:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11880:5:15",
														"nodeType": "YulTypedName",
														"src": "11880:5:15",
														"type": ""
													}
												],
												"src": "11809:370:15"
											},
											{
												"body": {
													"nativeSrc": "12318:761:15",
													"nodeType": "YulBlock",
													"src": "12318:761:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12364:83:15",
																"nodeType": "YulBlock",
																"src": "12364:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12366:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "12366:77:15"
																			},
																			"nativeSrc": "12366:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12366:79:15"
																		},
																		"nativeSrc": "12366:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12366:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12339:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12339:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12348:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12348:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12335:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12335:3:15"
																		},
																		"nativeSrc": "12335:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12335:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12360:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12360:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12331:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12331:3:15"
																},
																"nativeSrc": "12331:32:15",
																"nodeType": "YulFunctionCall",
																"src": "12331:32:15"
															},
															"nativeSrc": "12328:119:15",
															"nodeType": "YulIf",
															"src": "12328:119:15"
														},
														{
															"nativeSrc": "12457:302:15",
															"nodeType": "YulBlock",
															"src": "12457:302:15",
															"statements": [
																{
																	"nativeSrc": "12472:45:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12472:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12503:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12503:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12514:1:15",
																						"nodeType": "YulLiteral",
																						"src": "12514:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12499:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12499:3:15"
																				},
																				"nativeSrc": "12499:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12499:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12486:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "12486:12:15"
																		},
																		"nativeSrc": "12486:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12486:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12476:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12476:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12564:83:15",
																		"nodeType": "YulBlock",
																		"src": "12564:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12566:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "12566:77:15"
																					},
																					"nativeSrc": "12566:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "12566:79:15"
																				},
																				"nativeSrc": "12566:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "12566:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12536:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12536:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12544:18:15",
																				"nodeType": "YulLiteral",
																				"src": "12544:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12533:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12533:2:15"
																		},
																		"nativeSrc": "12533:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12533:30:15"
																	},
																	"nativeSrc": "12530:117:15",
																	"nodeType": "YulIf",
																	"src": "12530:117:15"
																},
																{
																	"nativeSrc": "12661:88:15",
																	"nodeType": "YulAssignment",
																	"src": "12661:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12721:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12721:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12732:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12732:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12717:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12717:3:15"
																				},
																				"nativeSrc": "12717:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12717:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12741:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12741:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "12671:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "12671:45:15"
																		},
																		"nativeSrc": "12671:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12671:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12661:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12661:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12769:303:15",
															"nodeType": "YulBlock",
															"src": "12769:303:15",
															"statements": [
																{
																	"nativeSrc": "12784:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12784:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12815:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12815:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12826:2:15",
																						"nodeType": "YulLiteral",
																						"src": "12826:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12811:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12811:3:15"
																				},
																				"nativeSrc": "12811:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12811:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12798:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "12798:12:15"
																		},
																		"nativeSrc": "12798:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12798:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12788:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12788:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12877:83:15",
																		"nodeType": "YulBlock",
																		"src": "12877:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12879:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "12879:77:15"
																					},
																					"nativeSrc": "12879:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "12879:79:15"
																				},
																				"nativeSrc": "12879:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "12879:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12849:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12849:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12857:18:15",
																				"nodeType": "YulLiteral",
																				"src": "12857:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12846:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12846:2:15"
																		},
																		"nativeSrc": "12846:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12846:30:15"
																	},
																	"nativeSrc": "12843:117:15",
																	"nodeType": "YulIf",
																	"src": "12843:117:15"
																},
																{
																	"nativeSrc": "12974:88:15",
																	"nodeType": "YulAssignment",
																	"src": "12974:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13034:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "13034:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13045:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13045:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13030:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13030:3:15"
																				},
																				"nativeSrc": "13030:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13030:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13054:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13054:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12984:45:15",
																			"nodeType": "YulIdentifier",
																			"src": "12984:45:15"
																		},
																		"nativeSrc": "12984:78:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12984:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12974:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12974:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "12185:894:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12280:9:15",
														"nodeType": "YulTypedName",
														"src": "12280:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12291:7:15",
														"nodeType": "YulTypedName",
														"src": "12291:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12303:6:15",
														"nodeType": "YulTypedName",
														"src": "12303:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12311:6:15",
														"nodeType": "YulTypedName",
														"src": "12311:6:15",
														"type": ""
													}
												],
												"src": "12185:894:15"
											},
											{
												"body": {
													"nativeSrc": "13159:40:15",
													"nodeType": "YulBlock",
													"src": "13159:40:15",
													"statements": [
														{
															"nativeSrc": "13170:22:15",
															"nodeType": "YulAssignment",
															"src": "13170:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13186:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13186:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13180:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "13180:5:15"
																},
																"nativeSrc": "13180:12:15",
																"nodeType": "YulFunctionCall",
																"src": "13180:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13170:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13170:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13085:114:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13142:5:15",
														"nodeType": "YulTypedName",
														"src": "13142:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13152:6:15",
														"nodeType": "YulTypedName",
														"src": "13152:6:15",
														"type": ""
													}
												],
												"src": "13085:114:15"
											},
											{
												"body": {
													"nativeSrc": "13316:73:15",
													"nodeType": "YulBlock",
													"src": "13316:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13333:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13333:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13338:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13338:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13326:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13326:6:15"
																},
																"nativeSrc": "13326:19:15",
																"nodeType": "YulFunctionCall",
																"src": "13326:19:15"
															},
															"nativeSrc": "13326:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "13326:19:15"
														},
														{
															"nativeSrc": "13354:29:15",
															"nodeType": "YulAssignment",
															"src": "13354:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13373:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13373:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13378:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13378:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13369:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13369:3:15"
																},
																"nativeSrc": "13369:14:15",
																"nodeType": "YulFunctionCall",
																"src": "13369:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13354:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "13354:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13205:184:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13288:3:15",
														"nodeType": "YulTypedName",
														"src": "13288:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13293:6:15",
														"nodeType": "YulTypedName",
														"src": "13293:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13304:11:15",
														"nodeType": "YulTypedName",
														"src": "13304:11:15",
														"type": ""
													}
												],
												"src": "13205:184:15"
											},
											{
												"body": {
													"nativeSrc": "13467:60:15",
													"nodeType": "YulBlock",
													"src": "13467:60:15",
													"statements": [
														{
															"nativeSrc": "13477:11:15",
															"nodeType": "YulAssignment",
															"src": "13477:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "13485:3:15",
																"nodeType": "YulIdentifier",
																"src": "13485:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13477:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13477:4:15"
																}
															]
														},
														{
															"nativeSrc": "13498:22:15",
															"nodeType": "YulAssignment",
															"src": "13498:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13510:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13510:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13515:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13515:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13506:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13506:3:15"
																},
																"nativeSrc": "13506:14:15",
																"nodeType": "YulFunctionCall",
																"src": "13506:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13498:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13498:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13395:132:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13454:3:15",
														"nodeType": "YulTypedName",
														"src": "13454:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13462:4:15",
														"nodeType": "YulTypedName",
														"src": "13462:4:15",
														"type": ""
													}
												],
												"src": "13395:132:15"
											},
											{
												"body": {
													"nativeSrc": "13588:53:15",
													"nodeType": "YulBlock",
													"src": "13588:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13605:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13605:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13628:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "13628:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13610:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "13610:17:15"
																		},
																		"nativeSrc": "13610:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13610:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13598:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13598:6:15"
																},
																"nativeSrc": "13598:37:15",
																"nodeType": "YulFunctionCall",
																"src": "13598:37:15"
															},
															"nativeSrc": "13598:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "13598:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "13533:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13576:5:15",
														"nodeType": "YulTypedName",
														"src": "13576:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13583:3:15",
														"nodeType": "YulTypedName",
														"src": "13583:3:15",
														"type": ""
													}
												],
												"src": "13533:108:15"
											},
											{
												"body": {
													"nativeSrc": "13727:99:15",
													"nodeType": "YulBlock",
													"src": "13727:99:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13771:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13771:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13779:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13779:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "13737:33:15",
																	"nodeType": "YulIdentifier",
																	"src": "13737:33:15"
																},
																"nativeSrc": "13737:46:15",
																"nodeType": "YulFunctionCall",
																"src": "13737:46:15"
															},
															"nativeSrc": "13737:46:15",
															"nodeType": "YulExpressionStatement",
															"src": "13737:46:15"
														},
														{
															"nativeSrc": "13792:28:15",
															"nodeType": "YulAssignment",
															"src": "13792:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13810:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13810:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13815:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13815:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13806:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13806:3:15"
																},
																"nativeSrc": "13806:14:15",
																"nodeType": "YulFunctionCall",
																"src": "13806:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "13792:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "13792:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "13647:179:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "13700:6:15",
														"nodeType": "YulTypedName",
														"src": "13700:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13708:3:15",
														"nodeType": "YulTypedName",
														"src": "13708:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "13716:10:15",
														"nodeType": "YulTypedName",
														"src": "13716:10:15",
														"type": ""
													}
												],
												"src": "13647:179:15"
											},
											{
												"body": {
													"nativeSrc": "13907:38:15",
													"nodeType": "YulBlock",
													"src": "13907:38:15",
													"statements": [
														{
															"nativeSrc": "13917:22:15",
															"nodeType": "YulAssignment",
															"src": "13917:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13929:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13929:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13934:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13934:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13925:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13925:3:15"
																},
																"nativeSrc": "13925:14:15",
																"nodeType": "YulFunctionCall",
																"src": "13925:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "13917:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13917:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13832:113:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13894:3:15",
														"nodeType": "YulTypedName",
														"src": "13894:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "13902:4:15",
														"nodeType": "YulTypedName",
														"src": "13902:4:15",
														"type": ""
													}
												],
												"src": "13832:113:15"
											},
											{
												"body": {
													"nativeSrc": "14105:608:15",
													"nodeType": "YulBlock",
													"src": "14105:608:15",
													"statements": [
														{
															"nativeSrc": "14115:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14115:68:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14177:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14177:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "14129:47:15",
																	"nodeType": "YulIdentifier",
																	"src": "14129:47:15"
																},
																"nativeSrc": "14129:54:15",
																"nodeType": "YulFunctionCall",
																"src": "14129:54:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14119:6:15",
																	"nodeType": "YulTypedName",
																	"src": "14119:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14192:93:15",
															"nodeType": "YulAssignment",
															"src": "14192:93:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14273:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14273:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14278:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14278:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14199:73:15",
																	"nodeType": "YulIdentifier",
																	"src": "14199:73:15"
																},
																"nativeSrc": "14199:86:15",
																"nodeType": "YulFunctionCall",
																"src": "14199:86:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14192:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14192:3:15"
																}
															]
														},
														{
															"nativeSrc": "14294:71:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14294:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14359:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14359:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "14309:49:15",
																	"nodeType": "YulIdentifier",
																	"src": "14309:49:15"
																},
																"nativeSrc": "14309:56:15",
																"nodeType": "YulFunctionCall",
																"src": "14309:56:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "14298:7:15",
																	"nodeType": "YulTypedName",
																	"src": "14298:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14374:21:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14374:21:15",
															"value": {
																"name": "baseRef",
																"nativeSrc": "14388:7:15",
																"nodeType": "YulIdentifier",
																"src": "14388:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "14378:6:15",
																	"nodeType": "YulTypedName",
																	"src": "14378:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14464:224:15",
																"nodeType": "YulBlock",
																"src": "14464:224:15",
																"statements": [
																	{
																		"nativeSrc": "14478:34:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14478:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14505:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "14505:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "14499:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "14499:5:15"
																			},
																			"nativeSrc": "14499:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14499:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "14482:13:15",
																				"nodeType": "YulTypedName",
																				"src": "14482:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14525:70:15",
																		"nodeType": "YulAssignment",
																		"src": "14525:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "14576:13:15",
																					"nodeType": "YulIdentifier",
																					"src": "14576:13:15"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "14591:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "14591:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "14532:43:15",
																				"nodeType": "YulIdentifier",
																				"src": "14532:43:15"
																			},
																			"nativeSrc": "14532:63:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14532:63:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "14525:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "14525:3:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14608:70:15",
																		"nodeType": "YulAssignment",
																		"src": "14608:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14671:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "14671:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "14618:52:15",
																				"nodeType": "YulIdentifier",
																				"src": "14618:52:15"
																			},
																			"nativeSrc": "14618:60:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14618:60:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "14608:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14608:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "14426:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14426:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14429:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14429:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14423:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "14423:2:15"
																},
																"nativeSrc": "14423:13:15",
																"nodeType": "YulFunctionCall",
																"src": "14423:13:15"
															},
															"nativeSrc": "14404:284:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14437:18:15",
																"nodeType": "YulBlock",
																"src": "14437:18:15",
																"statements": [
																	{
																		"nativeSrc": "14439:14:15",
																		"nodeType": "YulAssignment",
																		"src": "14439:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "14448:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "14448:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14451:1:15",
																					"nodeType": "YulLiteral",
																					"src": "14451:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14444:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "14444:3:15"
																			},
																			"nativeSrc": "14444:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14444:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "14439:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "14439:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14408:14:15",
																"nodeType": "YulBlock",
																"src": "14408:14:15",
																"statements": [
																	{
																		"nativeSrc": "14410:10:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14410:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14419:1:15",
																			"nodeType": "YulLiteral",
																			"src": "14419:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "14414:1:15",
																				"nodeType": "YulTypedName",
																				"src": "14414:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14404:284:15"
														},
														{
															"nativeSrc": "14697:10:15",
															"nodeType": "YulAssignment",
															"src": "14697:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "14704:3:15",
																"nodeType": "YulIdentifier",
																"src": "14704:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14697:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14697:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13981:732:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14084:5:15",
														"nodeType": "YulTypedName",
														"src": "14084:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14091:3:15",
														"nodeType": "YulTypedName",
														"src": "14091:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14100:3:15",
														"nodeType": "YulTypedName",
														"src": "14100:3:15",
														"type": ""
													}
												],
												"src": "13981:732:15"
											},
											{
												"body": {
													"nativeSrc": "14867:225:15",
													"nodeType": "YulBlock",
													"src": "14867:225:15",
													"statements": [
														{
															"nativeSrc": "14877:26:15",
															"nodeType": "YulAssignment",
															"src": "14877:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14889:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14889:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14900:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14900:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14885:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14885:3:15"
																},
																"nativeSrc": "14885:18:15",
																"nodeType": "YulFunctionCall",
																"src": "14885:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14877:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14877:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14924:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14924:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14935:1:15",
																				"nodeType": "YulLiteral",
																				"src": "14935:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14920:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14920:3:15"
																		},
																		"nativeSrc": "14920:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14920:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14943:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "14943:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14949:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14949:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14939:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14939:3:15"
																		},
																		"nativeSrc": "14939:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14939:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14913:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14913:6:15"
																},
																"nativeSrc": "14913:47:15",
																"nodeType": "YulFunctionCall",
																"src": "14913:47:15"
															},
															"nativeSrc": "14913:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "14913:47:15"
														},
														{
															"nativeSrc": "14969:116:15",
															"nodeType": "YulAssignment",
															"src": "14969:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15071:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15071:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15080:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "15080:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14977:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "14977:93:15"
																},
																"nativeSrc": "14977:108:15",
																"nodeType": "YulFunctionCall",
																"src": "14977:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14969:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14969:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "14719:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14839:9:15",
														"nodeType": "YulTypedName",
														"src": "14839:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14851:6:15",
														"nodeType": "YulTypedName",
														"src": "14851:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14862:4:15",
														"nodeType": "YulTypedName",
														"src": "14862:4:15",
														"type": ""
													}
												],
												"src": "14719:373:15"
											},
											{
												"body": {
													"nativeSrc": "15165:241:15",
													"nodeType": "YulBlock",
													"src": "15165:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "15270:22:15",
																"nodeType": "YulBlock",
																"src": "15270:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "15272:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "15272:16:15"
																			},
																			"nativeSrc": "15272:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15272:18:15"
																		},
																		"nativeSrc": "15272:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15272:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "15242:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15242:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15250:18:15",
																		"nodeType": "YulLiteral",
																		"src": "15250:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15239:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "15239:2:15"
																},
																"nativeSrc": "15239:30:15",
																"nodeType": "YulFunctionCall",
																"src": "15239:30:15"
															},
															"nativeSrc": "15236:56:15",
															"nodeType": "YulIf",
															"src": "15236:56:15"
														},
														{
															"nativeSrc": "15302:37:15",
															"nodeType": "YulAssignment",
															"src": "15302:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "15332:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15332:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "15310:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "15310:21:15"
																},
																"nativeSrc": "15310:29:15",
																"nodeType": "YulFunctionCall",
																"src": "15310:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "15302:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15302:4:15"
																}
															]
														},
														{
															"nativeSrc": "15376:23:15",
															"nodeType": "YulAssignment",
															"src": "15376:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "15388:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "15388:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15394:4:15",
																		"nodeType": "YulLiteral",
																		"src": "15394:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15384:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15384:3:15"
																},
																"nativeSrc": "15384:15:15",
																"nodeType": "YulFunctionCall",
																"src": "15384:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "15376:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15376:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "15098:308:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "15149:6:15",
														"nodeType": "YulTypedName",
														"src": "15149:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "15160:4:15",
														"nodeType": "YulTypedName",
														"src": "15160:4:15",
														"type": ""
													}
												],
												"src": "15098:308:15"
											},
											{
												"body": {
													"nativeSrc": "15496:341:15",
													"nodeType": "YulBlock",
													"src": "15496:341:15",
													"statements": [
														{
															"nativeSrc": "15506:75:15",
															"nodeType": "YulAssignment",
															"src": "15506:75:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15573:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15573:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "15531:41:15",
																			"nodeType": "YulIdentifier",
																			"src": "15531:41:15"
																		},
																		"nativeSrc": "15531:49:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15531:49:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "15515:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "15515:15:15"
																},
																"nativeSrc": "15515:66:15",
																"nodeType": "YulFunctionCall",
																"src": "15515:66:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "15506:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15506:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "15597:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15597:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15604:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15604:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15590:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15590:6:15"
																},
																"nativeSrc": "15590:21:15",
																"nodeType": "YulFunctionCall",
																"src": "15590:21:15"
															},
															"nativeSrc": "15590:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "15590:21:15"
														},
														{
															"nativeSrc": "15620:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "15620:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "15635:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15635:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15642:4:15",
																		"nodeType": "YulLiteral",
																		"src": "15642:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15631:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15631:3:15"
																},
																"nativeSrc": "15631:16:15",
																"nodeType": "YulFunctionCall",
																"src": "15631:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "15624:3:15",
																	"nodeType": "YulTypedName",
																	"src": "15624:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15685:83:15",
																"nodeType": "YulBlock",
																"src": "15685:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "15687:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "15687:77:15"
																			},
																			"nativeSrc": "15687:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15687:79:15"
																		},
																		"nativeSrc": "15687:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15687:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "15666:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "15666:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "15671:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15671:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15662:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15662:3:15"
																		},
																		"nativeSrc": "15662:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15662:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15680:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15680:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15659:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "15659:2:15"
																},
																"nativeSrc": "15659:25:15",
																"nodeType": "YulFunctionCall",
																"src": "15659:25:15"
															},
															"nativeSrc": "15656:112:15",
															"nodeType": "YulIf",
															"src": "15656:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "15814:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15814:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "15819:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15819:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15824:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15824:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "15777:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "15777:36:15"
																},
																"nativeSrc": "15777:54:15",
																"nodeType": "YulFunctionCall",
																"src": "15777:54:15"
															},
															"nativeSrc": "15777:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "15777:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "15412:425:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "15469:3:15",
														"nodeType": "YulTypedName",
														"src": "15469:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15474:6:15",
														"nodeType": "YulTypedName",
														"src": "15474:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15482:3:15",
														"nodeType": "YulTypedName",
														"src": "15482:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "15490:5:15",
														"nodeType": "YulTypedName",
														"src": "15490:5:15",
														"type": ""
													}
												],
												"src": "15412:425:15"
											},
											{
												"body": {
													"nativeSrc": "15919:278:15",
													"nodeType": "YulBlock",
													"src": "15919:278:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "15968:83:15",
																"nodeType": "YulBlock",
																"src": "15968:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "15970:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "15970:77:15"
																			},
																			"nativeSrc": "15970:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15970:79:15"
																		},
																		"nativeSrc": "15970:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15970:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "15947:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "15947:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15955:4:15",
																						"nodeType": "YulLiteral",
																						"src": "15955:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15943:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15943:3:15"
																				},
																				"nativeSrc": "15943:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15943:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "15962:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "15962:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "15939:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15939:3:15"
																		},
																		"nativeSrc": "15939:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15939:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15932:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15932:6:15"
																},
																"nativeSrc": "15932:35:15",
																"nodeType": "YulFunctionCall",
																"src": "15932:35:15"
															},
															"nativeSrc": "15929:122:15",
															"nodeType": "YulIf",
															"src": "15929:122:15"
														},
														{
															"nativeSrc": "16060:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "16060:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16087:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16087:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "16074:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "16074:12:15"
																},
																"nativeSrc": "16074:20:15",
																"nodeType": "YulFunctionCall",
																"src": "16074:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16064:6:15",
																	"nodeType": "YulTypedName",
																	"src": "16064:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16103:88:15",
															"nodeType": "YulAssignment",
															"src": "16103:88:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16164:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16164:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16172:4:15",
																				"nodeType": "YulLiteral",
																				"src": "16172:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16160:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16160:3:15"
																		},
																		"nativeSrc": "16160:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16160:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16179:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16179:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "16187:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16187:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "16112:47:15",
																	"nodeType": "YulIdentifier",
																	"src": "16112:47:15"
																},
																"nativeSrc": "16112:79:15",
																"nodeType": "YulFunctionCall",
																"src": "16112:79:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "16103:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "16103:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "15857:340:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15897:6:15",
														"nodeType": "YulTypedName",
														"src": "15897:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15905:3:15",
														"nodeType": "YulTypedName",
														"src": "15905:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "15913:5:15",
														"nodeType": "YulTypedName",
														"src": "15913:5:15",
														"type": ""
													}
												],
												"src": "15857:340:15"
											},
											{
												"body": {
													"nativeSrc": "16296:561:15",
													"nodeType": "YulBlock",
													"src": "16296:561:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "16342:83:15",
																"nodeType": "YulBlock",
																"src": "16342:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16344:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "16344:77:15"
																			},
																			"nativeSrc": "16344:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16344:79:15"
																		},
																		"nativeSrc": "16344:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16344:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16317:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16317:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16326:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16326:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16313:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16313:3:15"
																		},
																		"nativeSrc": "16313:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16313:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16338:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16338:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16309:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16309:3:15"
																},
																"nativeSrc": "16309:32:15",
																"nodeType": "YulFunctionCall",
																"src": "16309:32:15"
															},
															"nativeSrc": "16306:119:15",
															"nodeType": "YulIf",
															"src": "16306:119:15"
														},
														{
															"nativeSrc": "16435:117:15",
															"nodeType": "YulBlock",
															"src": "16435:117:15",
															"statements": [
																{
																	"nativeSrc": "16450:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16450:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16464:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16464:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16454:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16454:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16479:63:15",
																	"nodeType": "YulAssignment",
																	"src": "16479:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16514:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16514:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16525:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16525:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16510:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16510:3:15"
																				},
																				"nativeSrc": "16510:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16510:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16534:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16534:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16489:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "16489:20:15"
																		},
																		"nativeSrc": "16489:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16489:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16479:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16479:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16562:288:15",
															"nodeType": "YulBlock",
															"src": "16562:288:15",
															"statements": [
																{
																	"nativeSrc": "16577:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16577:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16608:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16608:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16619:2:15",
																						"nodeType": "YulLiteral",
																						"src": "16619:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16604:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16604:3:15"
																				},
																				"nativeSrc": "16604:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16604:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "16591:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "16591:12:15"
																		},
																		"nativeSrc": "16591:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16591:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16581:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16581:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16670:83:15",
																		"nodeType": "YulBlock",
																		"src": "16670:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16672:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "16672:77:15"
																					},
																					"nativeSrc": "16672:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "16672:79:15"
																				},
																				"nativeSrc": "16672:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "16672:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16642:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16642:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16650:18:15",
																				"nodeType": "YulLiteral",
																				"src": "16650:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16639:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "16639:2:15"
																		},
																		"nativeSrc": "16639:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16639:30:15"
																	},
																	"nativeSrc": "16636:117:15",
																	"nodeType": "YulIf",
																	"src": "16636:117:15"
																},
																{
																	"nativeSrc": "16767:73:15",
																	"nodeType": "YulAssignment",
																	"src": "16767:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16812:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16812:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16823:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16823:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16808:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16808:3:15"
																				},
																				"nativeSrc": "16808:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16808:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16832:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16832:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "16777:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "16777:30:15"
																		},
																		"nativeSrc": "16777:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16777:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16767:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16767:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptr",
												"nativeSrc": "16203:654:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16258:9:15",
														"nodeType": "YulTypedName",
														"src": "16258:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16269:7:15",
														"nodeType": "YulTypedName",
														"src": "16269:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16281:6:15",
														"nodeType": "YulTypedName",
														"src": "16281:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16289:6:15",
														"nodeType": "YulTypedName",
														"src": "16289:6:15",
														"type": ""
													}
												],
												"src": "16203:654:15"
											},
											{
												"body": {
													"nativeSrc": "16903:76:15",
													"nodeType": "YulBlock",
													"src": "16903:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "16957:16:15",
																"nodeType": "YulBlock",
																"src": "16957:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16966:1:15",
																					"nodeType": "YulLiteral",
																					"src": "16966:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16969:1:15",
																					"nodeType": "YulLiteral",
																					"src": "16969:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16959:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16959:6:15"
																			},
																			"nativeSrc": "16959:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16959:12:15"
																		},
																		"nativeSrc": "16959:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16959:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16926:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "16926:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16948:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "16948:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "16933:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "16933:14:15"
																				},
																				"nativeSrc": "16933:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16933:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16923:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "16923:2:15"
																		},
																		"nativeSrc": "16923:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16923:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16916:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16916:6:15"
																},
																"nativeSrc": "16916:40:15",
																"nodeType": "YulFunctionCall",
																"src": "16916:40:15"
															},
															"nativeSrc": "16913:60:15",
															"nodeType": "YulIf",
															"src": "16913:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "16863:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16896:5:15",
														"nodeType": "YulTypedName",
														"src": "16896:5:15",
														"type": ""
													}
												],
												"src": "16863:116:15"
											},
											{
												"body": {
													"nativeSrc": "17034:84:15",
													"nodeType": "YulBlock",
													"src": "17034:84:15",
													"statements": [
														{
															"nativeSrc": "17044:29:15",
															"nodeType": "YulAssignment",
															"src": "17044:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17066:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17066:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "17053:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "17053:12:15"
																},
																"nativeSrc": "17053:20:15",
																"nodeType": "YulFunctionCall",
																"src": "17053:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17044:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "17044:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17106:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "17106:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "17082:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "17082:23:15"
																},
																"nativeSrc": "17082:30:15",
																"nodeType": "YulFunctionCall",
																"src": "17082:30:15"
															},
															"nativeSrc": "17082:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "17082:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "16985:133:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17012:6:15",
														"nodeType": "YulTypedName",
														"src": "17012:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17020:3:15",
														"nodeType": "YulTypedName",
														"src": "17020:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17028:5:15",
														"nodeType": "YulTypedName",
														"src": "17028:5:15",
														"type": ""
													}
												],
												"src": "16985:133:15"
											},
											{
												"body": {
													"nativeSrc": "17204:388:15",
													"nodeType": "YulBlock",
													"src": "17204:388:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "17250:83:15",
																"nodeType": "YulBlock",
																"src": "17250:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17252:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "17252:77:15"
																			},
																			"nativeSrc": "17252:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17252:79:15"
																		},
																		"nativeSrc": "17252:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "17252:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17225:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17225:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17234:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17234:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17221:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17221:3:15"
																		},
																		"nativeSrc": "17221:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17221:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17246:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17246:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17217:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17217:3:15"
																},
																"nativeSrc": "17217:32:15",
																"nodeType": "YulFunctionCall",
																"src": "17217:32:15"
															},
															"nativeSrc": "17214:119:15",
															"nodeType": "YulIf",
															"src": "17214:119:15"
														},
														{
															"nativeSrc": "17343:117:15",
															"nodeType": "YulBlock",
															"src": "17343:117:15",
															"statements": [
																{
																	"nativeSrc": "17358:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17358:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17372:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17372:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17362:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17362:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17387:63:15",
																	"nodeType": "YulAssignment",
																	"src": "17387:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17422:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "17422:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17433:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "17433:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17418:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "17418:3:15"
																				},
																				"nativeSrc": "17418:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17418:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17442:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17442:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17397:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "17397:20:15"
																		},
																		"nativeSrc": "17397:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17397:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17387:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17387:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17470:115:15",
															"nodeType": "YulBlock",
															"src": "17470:115:15",
															"statements": [
																{
																	"nativeSrc": "17485:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17485:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17499:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17499:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17489:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17489:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17515:60:15",
																	"nodeType": "YulAssignment",
																	"src": "17515:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17547:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "17547:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17558:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "17558:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17543:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "17543:3:15"
																				},
																				"nativeSrc": "17543:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17543:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17567:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17567:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "17525:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "17525:17:15"
																		},
																		"nativeSrc": "17525:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17525:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17515:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17515:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "17124:468:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17166:9:15",
														"nodeType": "YulTypedName",
														"src": "17166:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17177:7:15",
														"nodeType": "YulTypedName",
														"src": "17177:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17189:6:15",
														"nodeType": "YulTypedName",
														"src": "17189:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17197:6:15",
														"nodeType": "YulTypedName",
														"src": "17197:6:15",
														"type": ""
													}
												],
												"src": "17124:468:15"
											},
											{
												"body": {
													"nativeSrc": "17681:391:15",
													"nodeType": "YulBlock",
													"src": "17681:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "17727:83:15",
																"nodeType": "YulBlock",
																"src": "17727:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17729:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "17729:77:15"
																			},
																			"nativeSrc": "17729:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17729:79:15"
																		},
																		"nativeSrc": "17729:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "17729:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17702:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17702:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17711:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17711:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17698:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17698:3:15"
																		},
																		"nativeSrc": "17698:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17698:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17723:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17723:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17694:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17694:3:15"
																},
																"nativeSrc": "17694:32:15",
																"nodeType": "YulFunctionCall",
																"src": "17694:32:15"
															},
															"nativeSrc": "17691:119:15",
															"nodeType": "YulIf",
															"src": "17691:119:15"
														},
														{
															"nativeSrc": "17820:117:15",
															"nodeType": "YulBlock",
															"src": "17820:117:15",
															"statements": [
																{
																	"nativeSrc": "17835:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17835:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17849:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17849:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17839:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17839:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17864:63:15",
																	"nodeType": "YulAssignment",
																	"src": "17864:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17899:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "17899:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17910:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "17910:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17895:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "17895:3:15"
																				},
																				"nativeSrc": "17895:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17895:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17919:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17919:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17874:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "17874:20:15"
																		},
																		"nativeSrc": "17874:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17874:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17864:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17864:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17947:118:15",
															"nodeType": "YulBlock",
															"src": "17947:118:15",
															"statements": [
																{
																	"nativeSrc": "17962:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17962:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17976:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17976:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17966:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17966:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17992:63:15",
																	"nodeType": "YulAssignment",
																	"src": "17992:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18027:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "18027:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18038:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "18038:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18023:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18023:3:15"
																				},
																				"nativeSrc": "18023:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18023:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18047:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18047:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18002:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "18002:20:15"
																		},
																		"nativeSrc": "18002:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18002:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17992:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17992:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "17598:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17643:9:15",
														"nodeType": "YulTypedName",
														"src": "17643:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17654:7:15",
														"nodeType": "YulTypedName",
														"src": "17654:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17666:6:15",
														"nodeType": "YulTypedName",
														"src": "17666:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17674:6:15",
														"nodeType": "YulTypedName",
														"src": "17674:6:15",
														"type": ""
													}
												],
												"src": "17598:474:15"
											},
											{
												"body": {
													"nativeSrc": "18221:946:15",
													"nodeType": "YulBlock",
													"src": "18221:946:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "18268:83:15",
																"nodeType": "YulBlock",
																"src": "18268:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18270:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "18270:77:15"
																			},
																			"nativeSrc": "18270:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18270:79:15"
																		},
																		"nativeSrc": "18270:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "18270:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18242:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18242:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18251:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18251:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18238:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18238:3:15"
																		},
																		"nativeSrc": "18238:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18238:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18263:3:15",
																		"nodeType": "YulLiteral",
																		"src": "18263:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18234:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18234:3:15"
																},
																"nativeSrc": "18234:33:15",
																"nodeType": "YulFunctionCall",
																"src": "18234:33:15"
															},
															"nativeSrc": "18231:120:15",
															"nodeType": "YulIf",
															"src": "18231:120:15"
														},
														{
															"nativeSrc": "18361:117:15",
															"nodeType": "YulBlock",
															"src": "18361:117:15",
															"statements": [
																{
																	"nativeSrc": "18376:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18376:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18390:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18390:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18380:6:15",
																			"nodeType": "YulTypedName",
																			"src": "18380:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18405:63:15",
																	"nodeType": "YulAssignment",
																	"src": "18405:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18440:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "18440:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18451:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "18451:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18436:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18436:3:15"
																				},
																				"nativeSrc": "18436:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18436:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18460:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18460:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18415:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "18415:20:15"
																		},
																		"nativeSrc": "18415:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18415:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18405:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "18405:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18488:118:15",
															"nodeType": "YulBlock",
															"src": "18488:118:15",
															"statements": [
																{
																	"nativeSrc": "18503:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18503:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18517:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18517:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18507:6:15",
																			"nodeType": "YulTypedName",
																			"src": "18507:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18533:63:15",
																	"nodeType": "YulAssignment",
																	"src": "18533:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18568:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "18568:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18579:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "18579:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18564:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18564:3:15"
																				},
																				"nativeSrc": "18564:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18564:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18588:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18588:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18543:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "18543:20:15"
																		},
																		"nativeSrc": "18543:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18543:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "18533:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "18533:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18616:118:15",
															"nodeType": "YulBlock",
															"src": "18616:118:15",
															"statements": [
																{
																	"nativeSrc": "18631:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18631:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18645:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18645:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18635:6:15",
																			"nodeType": "YulTypedName",
																			"src": "18635:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18661:63:15",
																	"nodeType": "YulAssignment",
																	"src": "18661:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18696:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "18696:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18707:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "18707:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18692:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18692:3:15"
																				},
																				"nativeSrc": "18692:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18692:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18716:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18716:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "18671:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "18671:20:15"
																		},
																		"nativeSrc": "18671:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18671:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "18661:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "18661:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18744:118:15",
															"nodeType": "YulBlock",
															"src": "18744:118:15",
															"statements": [
																{
																	"nativeSrc": "18759:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18759:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18773:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18773:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18763:6:15",
																			"nodeType": "YulTypedName",
																			"src": "18763:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18789:63:15",
																	"nodeType": "YulAssignment",
																	"src": "18789:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18824:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "18824:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18835:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "18835:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18820:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18820:3:15"
																				},
																				"nativeSrc": "18820:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18820:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18844:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18844:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "18799:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "18799:20:15"
																		},
																		"nativeSrc": "18799:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18799:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "18789:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "18789:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18872:288:15",
															"nodeType": "YulBlock",
															"src": "18872:288:15",
															"statements": [
																{
																	"nativeSrc": "18887:47:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18887:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18918:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "18918:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18929:3:15",
																						"nodeType": "YulLiteral",
																						"src": "18929:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18914:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18914:3:15"
																				},
																				"nativeSrc": "18914:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18914:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "18901:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "18901:12:15"
																		},
																		"nativeSrc": "18901:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18901:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18891:6:15",
																			"nodeType": "YulTypedName",
																			"src": "18891:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "18981:83:15",
																		"nodeType": "YulBlock",
																		"src": "18981:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "18983:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "18983:77:15"
																					},
																					"nativeSrc": "18983:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "18983:79:15"
																				},
																				"nativeSrc": "18983:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "18983:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "18953:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "18953:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18961:18:15",
																				"nodeType": "YulLiteral",
																				"src": "18961:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "18950:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "18950:2:15"
																		},
																		"nativeSrc": "18950:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18950:30:15"
																	},
																	"nativeSrc": "18947:117:15",
																	"nodeType": "YulIf",
																	"src": "18947:117:15"
																},
																{
																	"nativeSrc": "19078:72:15",
																	"nodeType": "YulAssignment",
																	"src": "19078:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19122:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "19122:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19133:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "19133:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19118:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "19118:3:15"
																				},
																				"nativeSrc": "19118:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "19118:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19142:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "19142:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "19088:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "19088:29:15"
																		},
																		"nativeSrc": "19088:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19088:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "19078:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "19078:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "18078:1089:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18159:9:15",
														"nodeType": "YulTypedName",
														"src": "18159:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18170:7:15",
														"nodeType": "YulTypedName",
														"src": "18170:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18182:6:15",
														"nodeType": "YulTypedName",
														"src": "18182:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18190:6:15",
														"nodeType": "YulTypedName",
														"src": "18190:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18198:6:15",
														"nodeType": "YulTypedName",
														"src": "18198:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18206:6:15",
														"nodeType": "YulTypedName",
														"src": "18206:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "18214:6:15",
														"nodeType": "YulTypedName",
														"src": "18214:6:15",
														"type": ""
													}
												],
												"src": "18078:1089:15"
											},
											{
												"body": {
													"nativeSrc": "19201:152:15",
													"nodeType": "YulBlock",
													"src": "19201:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19218:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19218:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19221:77:15",
																		"nodeType": "YulLiteral",
																		"src": "19221:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19211:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19211:6:15"
																},
																"nativeSrc": "19211:88:15",
																"nodeType": "YulFunctionCall",
																"src": "19211:88:15"
															},
															"nativeSrc": "19211:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "19211:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19315:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19315:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19318:4:15",
																		"nodeType": "YulLiteral",
																		"src": "19318:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19308:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19308:6:15"
																},
																"nativeSrc": "19308:15:15",
																"nodeType": "YulFunctionCall",
																"src": "19308:15:15"
															},
															"nativeSrc": "19308:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "19308:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19339:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19339:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19342:4:15",
																		"nodeType": "YulLiteral",
																		"src": "19342:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19332:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19332:6:15"
																},
																"nativeSrc": "19332:15:15",
																"nodeType": "YulFunctionCall",
																"src": "19332:15:15"
															},
															"nativeSrc": "19332:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "19332:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "19173:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "19173:180:15"
											},
											{
												"body": {
													"nativeSrc": "19410:269:15",
													"nodeType": "YulBlock",
													"src": "19410:269:15",
													"statements": [
														{
															"nativeSrc": "19420:22:15",
															"nodeType": "YulAssignment",
															"src": "19420:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19434:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19434:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19440:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19440:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19430:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19430:3:15"
																},
																"nativeSrc": "19430:12:15",
																"nodeType": "YulFunctionCall",
																"src": "19430:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19420:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19420:6:15"
																}
															]
														},
														{
															"nativeSrc": "19451:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "19451:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19481:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19481:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19487:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19487:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19477:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19477:3:15"
																},
																"nativeSrc": "19477:12:15",
																"nodeType": "YulFunctionCall",
																"src": "19477:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "19455:18:15",
																	"nodeType": "YulTypedName",
																	"src": "19455:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19528:51:15",
																"nodeType": "YulBlock",
																"src": "19528:51:15",
																"statements": [
																	{
																		"nativeSrc": "19542:27:15",
																		"nodeType": "YulAssignment",
																		"src": "19542:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "19556:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "19556:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19564:4:15",
																					"nodeType": "YulLiteral",
																					"src": "19564:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "19552:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "19552:3:15"
																			},
																			"nativeSrc": "19552:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19552:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "19542:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "19542:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "19508:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "19508:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19501:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19501:6:15"
																},
																"nativeSrc": "19501:26:15",
																"nodeType": "YulFunctionCall",
																"src": "19501:26:15"
															},
															"nativeSrc": "19498:81:15",
															"nodeType": "YulIf",
															"src": "19498:81:15"
														},
														{
															"body": {
																"nativeSrc": "19631:42:15",
																"nodeType": "YulBlock",
																"src": "19631:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "19645:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "19645:16:15"
																			},
																			"nativeSrc": "19645:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19645:18:15"
																		},
																		"nativeSrc": "19645:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "19645:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "19595:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "19595:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19618:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "19618:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19626:2:15",
																				"nodeType": "YulLiteral",
																				"src": "19626:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "19615:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "19615:2:15"
																		},
																		"nativeSrc": "19615:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19615:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "19592:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "19592:2:15"
																},
																"nativeSrc": "19592:38:15",
																"nodeType": "YulFunctionCall",
																"src": "19592:38:15"
															},
															"nativeSrc": "19589:84:15",
															"nodeType": "YulIf",
															"src": "19589:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "19359:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19394:4:15",
														"nodeType": "YulTypedName",
														"src": "19394:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19403:6:15",
														"nodeType": "YulTypedName",
														"src": "19403:6:15",
														"type": ""
													}
												],
												"src": "19359:320:15"
											},
											{
												"body": {
													"nativeSrc": "19799:34:15",
													"nodeType": "YulBlock",
													"src": "19799:34:15",
													"statements": [
														{
															"nativeSrc": "19809:18:15",
															"nodeType": "YulAssignment",
															"src": "19809:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "19824:3:15",
																"nodeType": "YulIdentifier",
																"src": "19824:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19809:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "19809:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19685:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19771:3:15",
														"nodeType": "YulTypedName",
														"src": "19771:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19776:6:15",
														"nodeType": "YulTypedName",
														"src": "19776:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19787:11:15",
														"nodeType": "YulTypedName",
														"src": "19787:11:15",
														"type": ""
													}
												],
												"src": "19685:148:15"
											},
											{
												"body": {
													"nativeSrc": "19893:87:15",
													"nodeType": "YulBlock",
													"src": "19893:87:15",
													"statements": [
														{
															"nativeSrc": "19903:11:15",
															"nodeType": "YulAssignment",
															"src": "19903:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "19911:3:15",
																"nodeType": "YulIdentifier",
																"src": "19911:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19903:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19903:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19931:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19931:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "19934:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19934:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19924:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19924:6:15"
																},
																"nativeSrc": "19924:14:15",
																"nodeType": "YulFunctionCall",
																"src": "19924:14:15"
															},
															"nativeSrc": "19924:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "19924:14:15"
														},
														{
															"nativeSrc": "19947:26:15",
															"nodeType": "YulAssignment",
															"src": "19947:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19965:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19965:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19968:4:15",
																		"nodeType": "YulLiteral",
																		"src": "19968:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "19955:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "19955:9:15"
																},
																"nativeSrc": "19955:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19955:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19947:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19947:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "19839:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "19880:3:15",
														"nodeType": "YulTypedName",
														"src": "19880:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "19888:4:15",
														"nodeType": "YulTypedName",
														"src": "19888:4:15",
														"type": ""
													}
												],
												"src": "19839:141:15"
											},
											{
												"body": {
													"nativeSrc": "20117:767:15",
													"nodeType": "YulBlock",
													"src": "20117:767:15",
													"statements": [
														{
															"nativeSrc": "20127:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "20127:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20150:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "20150:5:15"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "20144:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "20144:5:15"
																},
																"nativeSrc": "20144:12:15",
																"nodeType": "YulFunctionCall",
																"src": "20144:12:15"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "20131:9:15",
																	"nodeType": "YulTypedName",
																	"src": "20131:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20165:50:15",
															"nodeType": "YulVariableDeclaration",
															"src": "20165:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "20205:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20205:9:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "20179:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "20179:25:15"
																},
																"nativeSrc": "20179:36:15",
																"nodeType": "YulFunctionCall",
																"src": "20179:36:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20169:6:15",
																	"nodeType": "YulTypedName",
																	"src": "20169:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20224:96:15",
															"nodeType": "YulAssignment",
															"src": "20224:96:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20308:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20308:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20313:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20313:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20231:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "20231:76:15"
																},
																"nativeSrc": "20231:89:15",
																"nodeType": "YulFunctionCall",
																"src": "20231:89:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20224:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20224:3:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "20369:159:15",
																		"nodeType": "YulBlock",
																		"src": "20369:159:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "20422:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "20422:3:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "20431:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "20431:9:15"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "20446:4:15",
																											"nodeType": "YulLiteral",
																											"src": "20446:4:15",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "20442:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "20442:3:15"
																									},
																									"nativeSrc": "20442:9:15",
																									"nodeType": "YulFunctionCall",
																									"src": "20442:9:15"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "20427:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "20427:3:15"
																							},
																							"nativeSrc": "20427:25:15",
																							"nodeType": "YulFunctionCall",
																							"src": "20427:25:15"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "20415:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "20415:6:15"
																					},
																					"nativeSrc": "20415:38:15",
																					"nodeType": "YulFunctionCall",
																					"src": "20415:38:15"
																				},
																				"nativeSrc": "20415:38:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "20415:38:15"
																			},
																			{
																				"nativeSrc": "20466:52:15",
																				"nodeType": "YulAssignment",
																				"src": "20466:52:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "20477:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "20477:3:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "20486:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "20486:6:15"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "20508:6:15",
																													"nodeType": "YulIdentifier",
																													"src": "20508:6:15"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "20501:6:15",
																												"nodeType": "YulIdentifier",
																												"src": "20501:6:15"
																											},
																											"nativeSrc": "20501:14:15",
																											"nodeType": "YulFunctionCall",
																											"src": "20501:14:15"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "20494:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "20494:6:15"
																									},
																									"nativeSrc": "20494:22:15",
																									"nodeType": "YulFunctionCall",
																									"src": "20494:22:15"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "20482:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "20482:3:15"
																							},
																							"nativeSrc": "20482:35:15",
																							"nodeType": "YulFunctionCall",
																							"src": "20482:35:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20473:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "20473:3:15"
																					},
																					"nativeSrc": "20473:45:15",
																					"nodeType": "YulFunctionCall",
																					"src": "20473:45:15"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "20466:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "20466:3:15"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "20362:166:15",
																	"nodeType": "YulCase",
																	"src": "20362:166:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20367:1:15",
																		"nodeType": "YulLiteral",
																		"src": "20367:1:15",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20544:334:15",
																		"nodeType": "YulBlock",
																		"src": "20544:334:15",
																		"statements": [
																			{
																				"nativeSrc": "20589:53:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20589:53:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "20636:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "20636:5:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "20604:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "20604:31:15"
																					},
																					"nativeSrc": "20604:38:15",
																					"nodeType": "YulFunctionCall",
																					"src": "20604:38:15"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "20593:7:15",
																						"nodeType": "YulTypedName",
																						"src": "20593:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20655:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20655:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20664:1:15",
																					"nodeType": "YulLiteral",
																					"src": "20664:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "20659:1:15",
																						"nodeType": "YulTypedName",
																						"src": "20659:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20722:110:15",
																					"nodeType": "YulBlock",
																					"src": "20722:110:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "20751:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "20751:3:15"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "20756:1:15",
																												"nodeType": "YulIdentifier",
																												"src": "20756:1:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20747:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "20747:3:15"
																										},
																										"nativeSrc": "20747:11:15",
																										"nodeType": "YulFunctionCall",
																										"src": "20747:11:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "20766:7:15",
																												"nodeType": "YulIdentifier",
																												"src": "20766:7:15"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "20760:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "20760:5:15"
																										},
																										"nativeSrc": "20760:14:15",
																										"nodeType": "YulFunctionCall",
																										"src": "20760:14:15"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "20740:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "20740:6:15"
																								},
																								"nativeSrc": "20740:35:15",
																								"nodeType": "YulFunctionCall",
																								"src": "20740:35:15"
																							},
																							"nativeSrc": "20740:35:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "20740:35:15"
																						},
																						{
																							"nativeSrc": "20792:26:15",
																							"nodeType": "YulAssignment",
																							"src": "20792:26:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "20807:7:15",
																										"nodeType": "YulIdentifier",
																										"src": "20807:7:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20816:1:15",
																										"nodeType": "YulLiteral",
																										"src": "20816:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20803:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "20803:3:15"
																								},
																								"nativeSrc": "20803:15:15",
																								"nodeType": "YulFunctionCall",
																								"src": "20803:15:15"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "20792:7:15",
																									"nodeType": "YulIdentifier",
																									"src": "20792:7:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "20689:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "20689:1:15"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "20692:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "20692:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20686:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "20686:2:15"
																					},
																					"nativeSrc": "20686:13:15",
																					"nodeType": "YulFunctionCall",
																					"src": "20686:13:15"
																				},
																				"nativeSrc": "20678:154:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "20700:21:15",
																					"nodeType": "YulBlock",
																					"src": "20700:21:15",
																					"statements": [
																						{
																							"nativeSrc": "20702:17:15",
																							"nodeType": "YulAssignment",
																							"src": "20702:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "20711:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "20711:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20714:4:15",
																										"nodeType": "YulLiteral",
																										"src": "20714:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20707:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "20707:3:15"
																								},
																								"nativeSrc": "20707:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "20707:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "20702:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "20702:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "20682:3:15",
																					"nodeType": "YulBlock",
																					"src": "20682:3:15",
																					"statements": []
																				},
																				"src": "20678:154:15"
																			},
																			{
																				"nativeSrc": "20845:23:15",
																				"nodeType": "YulAssignment",
																				"src": "20845:23:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "20856:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "20856:3:15"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "20861:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "20861:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20852:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "20852:3:15"
																					},
																					"nativeSrc": "20852:16:15",
																					"nodeType": "YulFunctionCall",
																					"src": "20852:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "20845:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "20845:3:15"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "20537:341:15",
																	"nodeType": "YulCase",
																	"src": "20537:341:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20542:1:15",
																		"nodeType": "YulLiteral",
																		"src": "20542:1:15",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "20340:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "20340:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20351:1:15",
																		"nodeType": "YulLiteral",
																		"src": "20351:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20336:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20336:3:15"
																},
																"nativeSrc": "20336:17:15",
																"nodeType": "YulFunctionCall",
																"src": "20336:17:15"
															},
															"nativeSrc": "20329:549:15",
															"nodeType": "YulSwitch",
															"src": "20329:549:15"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20010:874:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20098:5:15",
														"nodeType": "YulTypedName",
														"src": "20098:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20105:3:15",
														"nodeType": "YulTypedName",
														"src": "20105:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20113:3:15",
														"nodeType": "YulTypedName",
														"src": "20113:3:15",
														"type": ""
													}
												],
												"src": "20010:874:15"
											},
											{
												"body": {
													"nativeSrc": "21000:280:15",
													"nodeType": "YulBlock",
													"src": "21000:280:15",
													"statements": [
														{
															"nativeSrc": "21010:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "21010:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21057:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "21057:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "21024:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "21024:32:15"
																},
																"nativeSrc": "21024:39:15",
																"nodeType": "YulFunctionCall",
																"src": "21024:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21014:6:15",
																	"nodeType": "YulTypedName",
																	"src": "21014:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21072:96:15",
															"nodeType": "YulAssignment",
															"src": "21072:96:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21156:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21156:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21161:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21161:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21079:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "21079:76:15"
																},
																"nativeSrc": "21079:89:15",
																"nodeType": "YulFunctionCall",
																"src": "21079:89:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21072:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21072:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21216:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "21216:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21223:4:15",
																				"nodeType": "YulLiteral",
																				"src": "21223:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21212:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "21212:3:15"
																		},
																		"nativeSrc": "21212:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21212:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21230:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21230:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21235:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21235:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21177:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "21177:34:15"
																},
																"nativeSrc": "21177:65:15",
																"nodeType": "YulFunctionCall",
																"src": "21177:65:15"
															},
															"nativeSrc": "21177:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "21177:65:15"
														},
														{
															"nativeSrc": "21251:23:15",
															"nodeType": "YulAssignment",
															"src": "21251:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21262:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21262:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21267:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21267:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21258:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21258:3:15"
																},
																"nativeSrc": "21258:16:15",
																"nodeType": "YulFunctionCall",
																"src": "21258:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21251:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21251:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20890:390:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20981:5:15",
														"nodeType": "YulTypedName",
														"src": "20981:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20988:3:15",
														"nodeType": "YulTypedName",
														"src": "20988:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20996:3:15",
														"nodeType": "YulTypedName",
														"src": "20996:3:15",
														"type": ""
													}
												],
												"src": "20890:390:15"
											},
											{
												"body": {
													"nativeSrc": "21467:248:15",
													"nodeType": "YulBlock",
													"src": "21467:248:15",
													"statements": [
														{
															"nativeSrc": "21478:99:15",
															"nodeType": "YulAssignment",
															"src": "21478:99:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21564:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21564:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21573:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21573:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21485:78:15",
																	"nodeType": "YulIdentifier",
																	"src": "21485:78:15"
																},
																"nativeSrc": "21485:92:15",
																"nodeType": "YulFunctionCall",
																"src": "21485:92:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21478:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21478:3:15"
																}
															]
														},
														{
															"nativeSrc": "21587:102:15",
															"nodeType": "YulAssignment",
															"src": "21587:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21676:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "21676:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21685:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21685:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21594:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "21594:81:15"
																},
																"nativeSrc": "21594:95:15",
																"nodeType": "YulFunctionCall",
																"src": "21594:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21587:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21587:3:15"
																}
															]
														},
														{
															"nativeSrc": "21699:10:15",
															"nodeType": "YulAssignment",
															"src": "21699:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "21706:3:15",
																"nodeType": "YulIdentifier",
																"src": "21706:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21699:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21699:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21286:429:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21438:3:15",
														"nodeType": "YulTypedName",
														"src": "21438:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21444:6:15",
														"nodeType": "YulTypedName",
														"src": "21444:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21452:6:15",
														"nodeType": "YulTypedName",
														"src": "21452:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21463:3:15",
														"nodeType": "YulTypedName",
														"src": "21463:3:15",
														"type": ""
													}
												],
												"src": "21286:429:15"
											},
											{
												"body": {
													"nativeSrc": "21786:53:15",
													"nodeType": "YulBlock",
													"src": "21786:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21803:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "21803:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21826:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "21826:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "21808:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "21808:17:15"
																		},
																		"nativeSrc": "21808:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21808:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21796:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "21796:6:15"
																},
																"nativeSrc": "21796:37:15",
																"nodeType": "YulFunctionCall",
																"src": "21796:37:15"
															},
															"nativeSrc": "21796:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "21796:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "21721:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21774:5:15",
														"nodeType": "YulTypedName",
														"src": "21774:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21781:3:15",
														"nodeType": "YulTypedName",
														"src": "21781:3:15",
														"type": ""
													}
												],
												"src": "21721:118:15"
											},
											{
												"body": {
													"nativeSrc": "21971:206:15",
													"nodeType": "YulBlock",
													"src": "21971:206:15",
													"statements": [
														{
															"nativeSrc": "21981:26:15",
															"nodeType": "YulAssignment",
															"src": "21981:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21993:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "21993:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22004:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22004:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21989:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "21989:3:15"
																},
																"nativeSrc": "21989:18:15",
																"nodeType": "YulFunctionCall",
																"src": "21989:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21981:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "21981:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22061:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22061:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22074:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22074:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22085:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22085:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22070:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22070:3:15"
																		},
																		"nativeSrc": "22070:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22070:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22017:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22017:43:15"
																},
																"nativeSrc": "22017:71:15",
																"nodeType": "YulFunctionCall",
																"src": "22017:71:15"
															},
															"nativeSrc": "22017:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "22017:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22142:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22142:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22155:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22155:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22166:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22166:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22151:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22151:3:15"
																		},
																		"nativeSrc": "22151:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22151:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22098:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22098:43:15"
																},
																"nativeSrc": "22098:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22098:72:15"
															},
															"nativeSrc": "22098:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22098:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "21845:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21935:9:15",
														"nodeType": "YulTypedName",
														"src": "21935:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21947:6:15",
														"nodeType": "YulTypedName",
														"src": "21947:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21955:6:15",
														"nodeType": "YulTypedName",
														"src": "21955:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21966:4:15",
														"nodeType": "YulTypedName",
														"src": "21966:4:15",
														"type": ""
													}
												],
												"src": "21845:332:15"
											},
											{
												"body": {
													"nativeSrc": "22309:206:15",
													"nodeType": "YulBlock",
													"src": "22309:206:15",
													"statements": [
														{
															"nativeSrc": "22319:26:15",
															"nodeType": "YulAssignment",
															"src": "22319:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22331:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22331:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22342:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22342:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22327:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22327:3:15"
																},
																"nativeSrc": "22327:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22327:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22319:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22319:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22399:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22399:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22412:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22412:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22423:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22423:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22408:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22408:3:15"
																		},
																		"nativeSrc": "22408:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22408:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22355:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22355:43:15"
																},
																"nativeSrc": "22355:71:15",
																"nodeType": "YulFunctionCall",
																"src": "22355:71:15"
															},
															"nativeSrc": "22355:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "22355:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22480:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22480:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22493:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22493:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22504:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22504:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22489:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22489:3:15"
																		},
																		"nativeSrc": "22489:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22489:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22436:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22436:43:15"
																},
																"nativeSrc": "22436:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22436:72:15"
															},
															"nativeSrc": "22436:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22436:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22183:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22273:9:15",
														"nodeType": "YulTypedName",
														"src": "22273:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22285:6:15",
														"nodeType": "YulTypedName",
														"src": "22285:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22293:6:15",
														"nodeType": "YulTypedName",
														"src": "22293:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22304:4:15",
														"nodeType": "YulTypedName",
														"src": "22304:4:15",
														"type": ""
													}
												],
												"src": "22183:332:15"
											},
											{
												"body": {
													"nativeSrc": "22549:152:15",
													"nodeType": "YulBlock",
													"src": "22549:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22566:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22566:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22569:77:15",
																		"nodeType": "YulLiteral",
																		"src": "22569:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22559:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22559:6:15"
																},
																"nativeSrc": "22559:88:15",
																"nodeType": "YulFunctionCall",
																"src": "22559:88:15"
															},
															"nativeSrc": "22559:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "22559:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22663:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22663:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22666:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22666:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22656:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22656:6:15"
																},
																"nativeSrc": "22656:15:15",
																"nodeType": "YulFunctionCall",
																"src": "22656:15:15"
															},
															"nativeSrc": "22656:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "22656:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22687:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22687:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22690:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22690:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22680:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22680:6:15"
																},
																"nativeSrc": "22680:15:15",
																"nodeType": "YulFunctionCall",
																"src": "22680:15:15"
															},
															"nativeSrc": "22680:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "22680:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "22521:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "22521:180:15"
											},
											{
												"body": {
													"nativeSrc": "22735:152:15",
													"nodeType": "YulBlock",
													"src": "22735:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22752:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22752:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22755:77:15",
																		"nodeType": "YulLiteral",
																		"src": "22755:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22745:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22745:6:15"
																},
																"nativeSrc": "22745:88:15",
																"nodeType": "YulFunctionCall",
																"src": "22745:88:15"
															},
															"nativeSrc": "22745:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "22745:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22849:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22849:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22852:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22852:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22842:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22842:6:15"
																},
																"nativeSrc": "22842:15:15",
																"nodeType": "YulFunctionCall",
																"src": "22842:15:15"
															},
															"nativeSrc": "22842:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "22842:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22873:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22873:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22876:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22876:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22866:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22866:6:15"
																},
																"nativeSrc": "22866:15:15",
																"nodeType": "YulFunctionCall",
																"src": "22866:15:15"
															},
															"nativeSrc": "22866:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "22866:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "22707:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "22707:180:15"
											},
											{
												"body": {
													"nativeSrc": "22936:190:15",
													"nodeType": "YulBlock",
													"src": "22936:190:15",
													"statements": [
														{
															"nativeSrc": "22946:33:15",
															"nodeType": "YulAssignment",
															"src": "22946:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22973:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "22973:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22955:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "22955:17:15"
																},
																"nativeSrc": "22955:24:15",
																"nodeType": "YulFunctionCall",
																"src": "22955:24:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22946:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "22946:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23069:22:15",
																"nodeType": "YulBlock",
																"src": "23069:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23071:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "23071:16:15"
																			},
																			"nativeSrc": "23071:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "23071:18:15"
																		},
																		"nativeSrc": "23071:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "23071:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22994:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "22994:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23001:66:15",
																		"nodeType": "YulLiteral",
																		"src": "23001:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "22991:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "22991:2:15"
																},
																"nativeSrc": "22991:77:15",
																"nodeType": "YulFunctionCall",
																"src": "22991:77:15"
															},
															"nativeSrc": "22988:103:15",
															"nodeType": "YulIf",
															"src": "22988:103:15"
														},
														{
															"nativeSrc": "23100:20:15",
															"nodeType": "YulAssignment",
															"src": "23100:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23111:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23111:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23118:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23118:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23107:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23107:3:15"
																},
																"nativeSrc": "23107:13:15",
																"nodeType": "YulFunctionCall",
																"src": "23107:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23100:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23100:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "22893:233:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22922:5:15",
														"nodeType": "YulTypedName",
														"src": "22922:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22932:3:15",
														"nodeType": "YulTypedName",
														"src": "22932:3:15",
														"type": ""
													}
												],
												"src": "22893:233:15"
											},
											{
												"body": {
													"nativeSrc": "23230:124:15",
													"nodeType": "YulBlock",
													"src": "23230:124:15",
													"statements": [
														{
															"nativeSrc": "23240:26:15",
															"nodeType": "YulAssignment",
															"src": "23240:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23252:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23252:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23263:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23263:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23248:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23248:3:15"
																},
																"nativeSrc": "23248:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23248:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23240:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "23240:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23320:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "23320:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23333:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "23333:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23344:1:15",
																				"nodeType": "YulLiteral",
																				"src": "23344:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23329:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23329:3:15"
																		},
																		"nativeSrc": "23329:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23329:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23276:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "23276:43:15"
																},
																"nativeSrc": "23276:71:15",
																"nodeType": "YulFunctionCall",
																"src": "23276:71:15"
															},
															"nativeSrc": "23276:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "23276:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "23132:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23202:9:15",
														"nodeType": "YulTypedName",
														"src": "23202:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23214:6:15",
														"nodeType": "YulTypedName",
														"src": "23214:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23225:4:15",
														"nodeType": "YulTypedName",
														"src": "23225:4:15",
														"type": ""
													}
												],
												"src": "23132:222:15"
											},
											{
												"body": {
													"nativeSrc": "23404:49:15",
													"nodeType": "YulBlock",
													"src": "23404:49:15",
													"statements": [
														{
															"nativeSrc": "23414:33:15",
															"nodeType": "YulAssignment",
															"src": "23414:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23432:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "23432:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23439:2:15",
																				"nodeType": "YulLiteral",
																				"src": "23439:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23428:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23428:3:15"
																		},
																		"nativeSrc": "23428:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23428:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23444:2:15",
																		"nodeType": "YulLiteral",
																		"src": "23444:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "23424:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23424:3:15"
																},
																"nativeSrc": "23424:23:15",
																"nodeType": "YulFunctionCall",
																"src": "23424:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23414:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23414:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "23360:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23387:5:15",
														"nodeType": "YulTypedName",
														"src": "23387:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23397:6:15",
														"nodeType": "YulTypedName",
														"src": "23397:6:15",
														"type": ""
													}
												],
												"src": "23360:93:15"
											},
											{
												"body": {
													"nativeSrc": "23512:54:15",
													"nodeType": "YulBlock",
													"src": "23512:54:15",
													"statements": [
														{
															"nativeSrc": "23522:37:15",
															"nodeType": "YulAssignment",
															"src": "23522:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "23547:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "23547:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23553:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23553:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "23543:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23543:3:15"
																},
																"nativeSrc": "23543:16:15",
																"nodeType": "YulFunctionCall",
																"src": "23543:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23522:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "23522:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "23459:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "23487:4:15",
														"nodeType": "YulTypedName",
														"src": "23487:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "23493:5:15",
														"nodeType": "YulTypedName",
														"src": "23493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23503:8:15",
														"nodeType": "YulTypedName",
														"src": "23503:8:15",
														"type": ""
													}
												],
												"src": "23459:107:15"
											},
											{
												"body": {
													"nativeSrc": "23648:317:15",
													"nodeType": "YulBlock",
													"src": "23648:317:15",
													"statements": [
														{
															"nativeSrc": "23658:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "23658:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "23679:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "23679:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23691:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23691:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "23675:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23675:3:15"
																},
																"nativeSrc": "23675:18:15",
																"nodeType": "YulFunctionCall",
																"src": "23675:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "23662:9:15",
																	"nodeType": "YulTypedName",
																	"src": "23662:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23702:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "23702:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23733:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23733:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23744:66:15",
																		"nodeType": "YulLiteral",
																		"src": "23744:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23714:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "23714:18:15"
																},
																"nativeSrc": "23714:97:15",
																"nodeType": "YulFunctionCall",
																"src": "23714:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "23706:4:15",
																	"nodeType": "YulTypedName",
																	"src": "23706:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23820:51:15",
															"nodeType": "YulAssignment",
															"src": "23820:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "23851:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "23851:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "23862:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "23862:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "23832:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "23832:18:15"
																},
																"nativeSrc": "23832:39:15",
																"nodeType": "YulFunctionCall",
																"src": "23832:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "23820:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "23820:8:15"
																}
															]
														},
														{
															"nativeSrc": "23880:30:15",
															"nodeType": "YulAssignment",
															"src": "23880:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23893:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23893:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "23904:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "23904:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "23900:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23900:3:15"
																		},
																		"nativeSrc": "23900:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23900:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23889:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23889:3:15"
																},
																"nativeSrc": "23889:21:15",
																"nodeType": "YulFunctionCall",
																"src": "23889:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23880:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "23880:5:15"
																}
															]
														},
														{
															"nativeSrc": "23919:40:15",
															"nodeType": "YulAssignment",
															"src": "23919:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23932:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "23932:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "23943:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "23943:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "23953:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "23953:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "23939:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "23939:3:15"
																		},
																		"nativeSrc": "23939:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "23939:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23929:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "23929:2:15"
																},
																"nativeSrc": "23929:30:15",
																"nodeType": "YulFunctionCall",
																"src": "23929:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23919:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23919:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "23572:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23609:5:15",
														"nodeType": "YulTypedName",
														"src": "23609:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "23616:10:15",
														"nodeType": "YulTypedName",
														"src": "23616:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "23628:8:15",
														"nodeType": "YulTypedName",
														"src": "23628:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23641:6:15",
														"nodeType": "YulTypedName",
														"src": "23641:6:15",
														"type": ""
													}
												],
												"src": "23572:393:15"
											},
											{
												"body": {
													"nativeSrc": "24003:28:15",
													"nodeType": "YulBlock",
													"src": "24003:28:15",
													"statements": [
														{
															"nativeSrc": "24013:12:15",
															"nodeType": "YulAssignment",
															"src": "24013:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "24020:5:15",
																"nodeType": "YulIdentifier",
																"src": "24020:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24013:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24013:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "23971:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23989:5:15",
														"nodeType": "YulTypedName",
														"src": "23989:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23999:3:15",
														"nodeType": "YulTypedName",
														"src": "23999:3:15",
														"type": ""
													}
												],
												"src": "23971:60:15"
											},
											{
												"body": {
													"nativeSrc": "24097:82:15",
													"nodeType": "YulBlock",
													"src": "24097:82:15",
													"statements": [
														{
															"nativeSrc": "24107:66:15",
															"nodeType": "YulAssignment",
															"src": "24107:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24165:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "24165:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "24147:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "24147:17:15"
																				},
																				"nativeSrc": "24147:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "24147:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "24138:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "24138:8:15"
																		},
																		"nativeSrc": "24138:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24138:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24120:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "24120:17:15"
																},
																"nativeSrc": "24120:53:15",
																"nodeType": "YulFunctionCall",
																"src": "24120:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "24107:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "24107:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "24037:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24077:5:15",
														"nodeType": "YulTypedName",
														"src": "24077:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "24087:9:15",
														"nodeType": "YulTypedName",
														"src": "24087:9:15",
														"type": ""
													}
												],
												"src": "24037:142:15"
											},
											{
												"body": {
													"nativeSrc": "24232:28:15",
													"nodeType": "YulBlock",
													"src": "24232:28:15",
													"statements": [
														{
															"nativeSrc": "24242:12:15",
															"nodeType": "YulAssignment",
															"src": "24242:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "24249:5:15",
																"nodeType": "YulIdentifier",
																"src": "24249:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24242:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24242:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "24185:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24218:5:15",
														"nodeType": "YulTypedName",
														"src": "24218:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24228:3:15",
														"nodeType": "YulTypedName",
														"src": "24228:3:15",
														"type": ""
													}
												],
												"src": "24185:75:15"
											},
											{
												"body": {
													"nativeSrc": "24342:193:15",
													"nodeType": "YulBlock",
													"src": "24342:193:15",
													"statements": [
														{
															"nativeSrc": "24352:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "24352:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "24407:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "24407:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "24376:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "24376:30:15"
																},
																"nativeSrc": "24376:39:15",
																"nodeType": "YulFunctionCall",
																"src": "24376:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "24356:16:15",
																	"nodeType": "YulTypedName",
																	"src": "24356:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24431:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "24431:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "24471:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "24471:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "24465:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "24465:5:15"
																				},
																				"nativeSrc": "24465:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "24465:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "24478:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "24478:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "24510:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "24510:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "24486:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "24486:23:15"
																				},
																				"nativeSrc": "24486:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "24486:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "24437:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "24437:27:15"
																		},
																		"nativeSrc": "24437:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24437:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "24424:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24424:6:15"
																},
																"nativeSrc": "24424:105:15",
																"nodeType": "YulFunctionCall",
																"src": "24424:105:15"
															},
															"nativeSrc": "24424:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "24424:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "24266:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24319:4:15",
														"nodeType": "YulTypedName",
														"src": "24319:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "24325:6:15",
														"nodeType": "YulTypedName",
														"src": "24325:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "24333:7:15",
														"nodeType": "YulTypedName",
														"src": "24333:7:15",
														"type": ""
													}
												],
												"src": "24266:269:15"
											},
											{
												"body": {
													"nativeSrc": "24590:24:15",
													"nodeType": "YulBlock",
													"src": "24590:24:15",
													"statements": [
														{
															"nativeSrc": "24600:8:15",
															"nodeType": "YulAssignment",
															"src": "24600:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "24607:1:15",
																"nodeType": "YulLiteral",
																"src": "24607:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24600:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24600:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "24541:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24586:3:15",
														"nodeType": "YulTypedName",
														"src": "24586:3:15",
														"type": ""
													}
												],
												"src": "24541:73:15"
											},
											{
												"body": {
													"nativeSrc": "24673:136:15",
													"nodeType": "YulBlock",
													"src": "24673:136:15",
													"statements": [
														{
															"nativeSrc": "24683:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "24683:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "24697:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "24697:30:15"
																},
																"nativeSrc": "24697:32:15",
																"nodeType": "YulFunctionCall",
																"src": "24697:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "24687:6:15",
																	"nodeType": "YulTypedName",
																	"src": "24687:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24782:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "24782:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "24788:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24788:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "24796:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24796:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "24738:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "24738:43:15"
																},
																"nativeSrc": "24738:65:15",
																"nodeType": "YulFunctionCall",
																"src": "24738:65:15"
															},
															"nativeSrc": "24738:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "24738:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "24620:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24659:4:15",
														"nodeType": "YulTypedName",
														"src": "24659:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "24665:6:15",
														"nodeType": "YulTypedName",
														"src": "24665:6:15",
														"type": ""
													}
												],
												"src": "24620:189:15"
											},
											{
												"body": {
													"nativeSrc": "24865:136:15",
													"nodeType": "YulBlock",
													"src": "24865:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "24932:63:15",
																"nodeType": "YulBlock",
																"src": "24932:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24976:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "24976:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24983:1:15",
																					"nodeType": "YulLiteral",
																					"src": "24983:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "24946:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "24946:29:15"
																			},
																			"nativeSrc": "24946:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24946:39:15"
																		},
																		"nativeSrc": "24946:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "24946:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "24885:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "24885:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "24892:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24892:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "24882:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "24882:2:15"
																},
																"nativeSrc": "24882:14:15",
																"nodeType": "YulFunctionCall",
																"src": "24882:14:15"
															},
															"nativeSrc": "24875:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "24897:26:15",
																"nodeType": "YulBlock",
																"src": "24897:26:15",
																"statements": [
																	{
																		"nativeSrc": "24899:22:15",
																		"nodeType": "YulAssignment",
																		"src": "24899:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24912:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "24912:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24919:1:15",
																					"nodeType": "YulLiteral",
																					"src": "24919:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24908:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "24908:3:15"
																			},
																			"nativeSrc": "24908:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "24908:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "24899:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "24899:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "24879:2:15",
																"nodeType": "YulBlock",
																"src": "24879:2:15",
																"statements": []
															},
															"src": "24875:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "24815:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "24853:5:15",
														"nodeType": "YulTypedName",
														"src": "24853:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24860:3:15",
														"nodeType": "YulTypedName",
														"src": "24860:3:15",
														"type": ""
													}
												],
												"src": "24815:186:15"
											},
											{
												"body": {
													"nativeSrc": "25086:464:15",
													"nodeType": "YulBlock",
													"src": "25086:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "25112:431:15",
																"nodeType": "YulBlock",
																"src": "25112:431:15",
																"statements": [
																	{
																		"nativeSrc": "25126:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "25126:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "25174:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "25174:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "25142:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "25142:31:15"
																			},
																			"nativeSrc": "25142:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "25142:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "25130:8:15",
																				"nodeType": "YulTypedName",
																				"src": "25130:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "25193:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "25193:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "25216:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "25216:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "25244:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "25244:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "25226:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "25226:17:15"
																					},
																					"nativeSrc": "25226:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "25226:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "25212:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "25212:3:15"
																			},
																			"nativeSrc": "25212:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "25212:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "25197:11:15",
																				"nodeType": "YulTypedName",
																				"src": "25197:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "25413:27:15",
																			"nodeType": "YulBlock",
																			"src": "25413:27:15",
																			"statements": [
																				{
																					"nativeSrc": "25415:23:15",
																					"nodeType": "YulAssignment",
																					"src": "25415:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "25430:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "25430:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "25415:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "25415:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "25397:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "25397:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "25409:2:15",
																					"nodeType": "YulLiteral",
																					"src": "25409:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "25394:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "25394:2:15"
																			},
																			"nativeSrc": "25394:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "25394:18:15"
																		},
																		"nativeSrc": "25391:49:15",
																		"nodeType": "YulIf",
																		"src": "25391:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "25482:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "25482:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "25499:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "25499:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "25527:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "25527:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "25509:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "25509:17:15"
																							},
																							"nativeSrc": "25509:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "25509:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "25495:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "25495:3:15"
																					},
																					"nativeSrc": "25495:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "25495:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "25453:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "25453:28:15"
																			},
																			"nativeSrc": "25453:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "25453:80:15"
																		},
																		"nativeSrc": "25453:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "25453:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "25103:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "25103:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25108:2:15",
																		"nodeType": "YulLiteral",
																		"src": "25108:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25100:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "25100:2:15"
																},
																"nativeSrc": "25100:11:15",
																"nodeType": "YulFunctionCall",
																"src": "25100:11:15"
															},
															"nativeSrc": "25097:446:15",
															"nodeType": "YulIf",
															"src": "25097:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "25007:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "25062:5:15",
														"nodeType": "YulTypedName",
														"src": "25062:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "25069:3:15",
														"nodeType": "YulTypedName",
														"src": "25069:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "25074:10:15",
														"nodeType": "YulTypedName",
														"src": "25074:10:15",
														"type": ""
													}
												],
												"src": "25007:543:15"
											},
											{
												"body": {
													"nativeSrc": "25619:54:15",
													"nodeType": "YulBlock",
													"src": "25619:54:15",
													"statements": [
														{
															"nativeSrc": "25629:37:15",
															"nodeType": "YulAssignment",
															"src": "25629:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "25654:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25654:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "25660:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "25660:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "25650:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25650:3:15"
																},
																"nativeSrc": "25650:16:15",
																"nodeType": "YulFunctionCall",
																"src": "25650:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "25629:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "25629:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "25556:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "25594:4:15",
														"nodeType": "YulTypedName",
														"src": "25594:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "25600:5:15",
														"nodeType": "YulTypedName",
														"src": "25600:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "25610:8:15",
														"nodeType": "YulTypedName",
														"src": "25610:8:15",
														"type": ""
													}
												],
												"src": "25556:117:15"
											},
											{
												"body": {
													"nativeSrc": "25730:118:15",
													"nodeType": "YulBlock",
													"src": "25730:118:15",
													"statements": [
														{
															"nativeSrc": "25740:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "25740:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25789:1:15",
																						"nodeType": "YulLiteral",
																						"src": "25789:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "25792:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "25792:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "25785:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "25785:3:15"
																				},
																				"nativeSrc": "25785:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "25785:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25804:1:15",
																						"nodeType": "YulLiteral",
																						"src": "25804:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "25800:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "25800:3:15"
																				},
																				"nativeSrc": "25800:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "25800:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "25756:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "25756:28:15"
																		},
																		"nativeSrc": "25756:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25756:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "25752:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25752:3:15"
																},
																"nativeSrc": "25752:56:15",
																"nodeType": "YulFunctionCall",
																"src": "25752:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "25744:4:15",
																	"nodeType": "YulTypedName",
																	"src": "25744:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25817:25:15",
															"nodeType": "YulAssignment",
															"src": "25817:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25831:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25831:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "25837:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25837:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "25827:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25827:3:15"
																},
																"nativeSrc": "25827:15:15",
																"nodeType": "YulFunctionCall",
																"src": "25827:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25817:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25817:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "25679:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25707:4:15",
														"nodeType": "YulTypedName",
														"src": "25707:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "25713:5:15",
														"nodeType": "YulTypedName",
														"src": "25713:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "25723:6:15",
														"nodeType": "YulTypedName",
														"src": "25723:6:15",
														"type": ""
													}
												],
												"src": "25679:169:15"
											},
											{
												"body": {
													"nativeSrc": "25934:214:15",
													"nodeType": "YulBlock",
													"src": "25934:214:15",
													"statements": [
														{
															"nativeSrc": "26067:37:15",
															"nodeType": "YulAssignment",
															"src": "26067:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "26094:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "26094:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "26100:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "26100:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "26075:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "26075:18:15"
																},
																"nativeSrc": "26075:29:15",
																"nodeType": "YulFunctionCall",
																"src": "26075:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "26067:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "26067:4:15"
																}
															]
														},
														{
															"nativeSrc": "26113:29:15",
															"nodeType": "YulAssignment",
															"src": "26113:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "26124:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "26124:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "26134:1:15",
																				"nodeType": "YulLiteral",
																				"src": "26134:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "26137:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "26137:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "26130:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26130:3:15"
																		},
																		"nativeSrc": "26130:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26130:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "26121:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "26121:2:15"
																},
																"nativeSrc": "26121:21:15",
																"nodeType": "YulFunctionCall",
																"src": "26121:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "26113:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "26113:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "25853:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "25915:4:15",
														"nodeType": "YulTypedName",
														"src": "25915:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "25921:3:15",
														"nodeType": "YulTypedName",
														"src": "25921:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "25929:4:15",
														"nodeType": "YulTypedName",
														"src": "25929:4:15",
														"type": ""
													}
												],
												"src": "25853:295:15"
											},
											{
												"body": {
													"nativeSrc": "26245:1303:15",
													"nodeType": "YulBlock",
													"src": "26245:1303:15",
													"statements": [
														{
															"nativeSrc": "26256:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "26256:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "26303:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "26303:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "26270:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "26270:32:15"
																},
																"nativeSrc": "26270:37:15",
																"nodeType": "YulFunctionCall",
																"src": "26270:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "26260:6:15",
																	"nodeType": "YulTypedName",
																	"src": "26260:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "26392:22:15",
																"nodeType": "YulBlock",
																"src": "26392:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "26394:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "26394:16:15"
																			},
																			"nativeSrc": "26394:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "26394:18:15"
																		},
																		"nativeSrc": "26394:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "26394:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "26364:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26364:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26372:18:15",
																		"nodeType": "YulLiteral",
																		"src": "26372:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26361:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "26361:2:15"
																},
																"nativeSrc": "26361:30:15",
																"nodeType": "YulFunctionCall",
																"src": "26361:30:15"
															},
															"nativeSrc": "26358:56:15",
															"nodeType": "YulIf",
															"src": "26358:56:15"
														},
														{
															"nativeSrc": "26424:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "26424:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "26470:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "26470:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "26464:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "26464:5:15"
																		},
																		"nativeSrc": "26464:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26464:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "26438:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "26438:25:15"
																},
																"nativeSrc": "26438:38:15",
																"nodeType": "YulFunctionCall",
																"src": "26438:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "26428:6:15",
																	"nodeType": "YulTypedName",
																	"src": "26428:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "26569:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "26569:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "26575:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26575:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "26583:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26583:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "26523:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "26523:45:15"
																},
																"nativeSrc": "26523:67:15",
																"nodeType": "YulFunctionCall",
																"src": "26523:67:15"
															},
															"nativeSrc": "26523:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "26523:67:15"
														},
														{
															"nativeSrc": "26600:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "26600:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "26617:1:15",
																"nodeType": "YulLiteral",
																"src": "26617:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "26604:9:15",
																	"nodeType": "YulTypedName",
																	"src": "26604:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26628:17:15",
															"nodeType": "YulAssignment",
															"src": "26628:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "26641:4:15",
																"nodeType": "YulLiteral",
																"src": "26641:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "26628:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "26628:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "26692:611:15",
																		"nodeType": "YulBlock",
																		"src": "26692:611:15",
																		"statements": [
																			{
																				"nativeSrc": "26706:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26706:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "26725:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "26725:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "26737:4:15",
																									"nodeType": "YulLiteral",
																									"src": "26737:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "26733:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "26733:3:15"
																							},
																							"nativeSrc": "26733:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "26733:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "26721:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "26721:3:15"
																					},
																					"nativeSrc": "26721:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26721:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "26710:7:15",
																						"nodeType": "YulTypedName",
																						"src": "26710:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "26757:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26757:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26803:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "26803:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "26771:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "26771:31:15"
																					},
																					"nativeSrc": "26771:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26771:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "26761:6:15",
																						"nodeType": "YulTypedName",
																						"src": "26761:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "26821:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26821:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26830:1:15",
																					"nodeType": "YulLiteral",
																					"src": "26830:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "26825:1:15",
																						"nodeType": "YulTypedName",
																						"src": "26825:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26889:163:15",
																					"nodeType": "YulBlock",
																					"src": "26889:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26914:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "26914:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "26932:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "26932:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "26937:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "26937:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "26928:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "26928:3:15"
																												},
																												"nativeSrc": "26928:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "26928:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "26922:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "26922:5:15"
																										},
																										"nativeSrc": "26922:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "26922:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26907:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "26907:6:15"
																								},
																								"nativeSrc": "26907:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26907:42:15"
																							},
																							"nativeSrc": "26907:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "26907:42:15"
																						},
																						{
																							"nativeSrc": "26966:24:15",
																							"nodeType": "YulAssignment",
																							"src": "26966:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26980:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "26980:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26988:1:15",
																										"nodeType": "YulLiteral",
																										"src": "26988:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26976:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "26976:3:15"
																								},
																								"nativeSrc": "26976:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26976:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "26966:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "26966:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "27007:31:15",
																							"nodeType": "YulAssignment",
																							"src": "27007:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "27024:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "27024:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "27035:2:15",
																										"nodeType": "YulLiteral",
																										"src": "27035:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27020:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "27020:3:15"
																								},
																								"nativeSrc": "27020:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "27020:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "27007:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "27007:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "26855:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "26855:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26858:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "26858:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26852:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "26852:2:15"
																					},
																					"nativeSrc": "26852:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "26852:14:15"
																				},
																				"nativeSrc": "26844:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "26867:21:15",
																					"nodeType": "YulBlock",
																					"src": "26867:21:15",
																					"statements": [
																						{
																							"nativeSrc": "26869:17:15",
																							"nodeType": "YulAssignment",
																							"src": "26869:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "26878:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "26878:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26881:4:15",
																										"nodeType": "YulLiteral",
																										"src": "26881:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26874:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "26874:3:15"
																								},
																								"nativeSrc": "26874:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "26874:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "26869:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "26869:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "26848:3:15",
																					"nodeType": "YulBlock",
																					"src": "26848:3:15",
																					"statements": []
																				},
																				"src": "26844:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "27088:156:15",
																					"nodeType": "YulBlock",
																					"src": "27088:156:15",
																					"statements": [
																						{
																							"nativeSrc": "27106:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "27106:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "27133:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "27133:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "27138:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "27138:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "27129:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "27129:3:15"
																										},
																										"nativeSrc": "27129:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "27129:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "27123:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "27123:5:15"
																								},
																								"nativeSrc": "27123:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "27123:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "27110:9:15",
																									"nodeType": "YulTypedName",
																									"src": "27110:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27173:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "27173:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "27200:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "27200:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "27215:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "27215:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "27223:4:15",
																														"nodeType": "YulLiteral",
																														"src": "27223:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "27211:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "27211:3:15"
																												},
																												"nativeSrc": "27211:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "27211:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "27181:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "27181:18:15"
																										},
																										"nativeSrc": "27181:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "27181:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "27166:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "27166:6:15"
																								},
																								"nativeSrc": "27166:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "27166:64:15"
																							},
																							"nativeSrc": "27166:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "27166:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "27071:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "27071:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "27080:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "27080:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "27068:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "27068:2:15"
																					},
																					"nativeSrc": "27068:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "27068:19:15"
																				},
																				"nativeSrc": "27065:179:15",
																				"nodeType": "YulIf",
																				"src": "27065:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27264:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "27264:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "27278:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "27278:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "27286:1:15",
																											"nodeType": "YulLiteral",
																											"src": "27286:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "27274:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "27274:3:15"
																									},
																									"nativeSrc": "27274:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "27274:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "27290:1:15",
																									"nodeType": "YulLiteral",
																									"src": "27290:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "27270:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "27270:3:15"
																							},
																							"nativeSrc": "27270:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "27270:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "27257:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "27257:6:15"
																					},
																					"nativeSrc": "27257:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "27257:36:15"
																				},
																				"nativeSrc": "27257:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "27257:36:15"
																			}
																		]
																	},
																	"nativeSrc": "26685:618:15",
																	"nodeType": "YulCase",
																	"src": "26685:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26690:1:15",
																		"nodeType": "YulLiteral",
																		"src": "26690:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "27320:222:15",
																		"nodeType": "YulBlock",
																		"src": "27320:222:15",
																		"statements": [
																			{
																				"nativeSrc": "27334:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27334:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "27347:1:15",
																					"nodeType": "YulLiteral",
																					"src": "27347:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "27338:5:15",
																						"nodeType": "YulTypedName",
																						"src": "27338:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "27371:67:15",
																					"nodeType": "YulBlock",
																					"src": "27371:67:15",
																					"statements": [
																						{
																							"nativeSrc": "27389:35:15",
																							"nodeType": "YulAssignment",
																							"src": "27389:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "27408:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "27408:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "27413:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "27413:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "27404:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "27404:3:15"
																										},
																										"nativeSrc": "27404:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "27404:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "27398:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "27398:5:15"
																								},
																								"nativeSrc": "27398:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "27398:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "27389:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "27389:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "27364:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "27364:6:15"
																				},
																				"nativeSrc": "27361:77:15",
																				"nodeType": "YulIf",
																				"src": "27361:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27458:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "27458:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "27517:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "27517:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "27524:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "27524:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "27464:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "27464:52:15"
																							},
																							"nativeSrc": "27464:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "27464:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "27451:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "27451:6:15"
																					},
																					"nativeSrc": "27451:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "27451:81:15"
																				},
																				"nativeSrc": "27451:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "27451:81:15"
																			}
																		]
																	},
																	"nativeSrc": "27312:230:15",
																	"nodeType": "YulCase",
																	"src": "27312:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "26665:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26665:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26673:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26673:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26662:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "26662:2:15"
																},
																"nativeSrc": "26662:14:15",
																"nodeType": "YulFunctionCall",
																"src": "26662:14:15"
															},
															"nativeSrc": "26655:887:15",
															"nodeType": "YulSwitch",
															"src": "26655:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "26153:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "26234:4:15",
														"nodeType": "YulTypedName",
														"src": "26234:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "26240:3:15",
														"nodeType": "YulTypedName",
														"src": "26240:3:15",
														"type": ""
													}
												],
												"src": "26153:1395:15"
											},
											{
												"body": {
													"nativeSrc": "27736:371:15",
													"nodeType": "YulBlock",
													"src": "27736:371:15",
													"statements": [
														{
															"nativeSrc": "27746:27:15",
															"nodeType": "YulAssignment",
															"src": "27746:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27758:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "27758:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27769:3:15",
																		"nodeType": "YulLiteral",
																		"src": "27769:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27754:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27754:3:15"
																},
																"nativeSrc": "27754:19:15",
																"nodeType": "YulFunctionCall",
																"src": "27754:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27746:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "27746:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27827:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27827:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27840:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "27840:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27851:1:15",
																				"nodeType": "YulLiteral",
																				"src": "27851:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27836:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27836:3:15"
																		},
																		"nativeSrc": "27836:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27836:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27783:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "27783:43:15"
																},
																"nativeSrc": "27783:71:15",
																"nodeType": "YulFunctionCall",
																"src": "27783:71:15"
															},
															"nativeSrc": "27783:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "27783:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27908:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27908:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27921:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "27921:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27932:2:15",
																				"nodeType": "YulLiteral",
																				"src": "27932:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27917:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27917:3:15"
																		},
																		"nativeSrc": "27917:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27917:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27864:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "27864:43:15"
																},
																"nativeSrc": "27864:72:15",
																"nodeType": "YulFunctionCall",
																"src": "27864:72:15"
															},
															"nativeSrc": "27864:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "27864:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "27990:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "27990:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28003:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28003:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28014:2:15",
																				"nodeType": "YulLiteral",
																				"src": "28014:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27999:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27999:3:15"
																		},
																		"nativeSrc": "27999:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27999:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27946:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "27946:43:15"
																},
																"nativeSrc": "27946:72:15",
																"nodeType": "YulFunctionCall",
																"src": "27946:72:15"
															},
															"nativeSrc": "27946:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "27946:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "28072:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28072:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28085:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28085:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28096:2:15",
																				"nodeType": "YulLiteral",
																				"src": "28096:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28081:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28081:3:15"
																		},
																		"nativeSrc": "28081:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28081:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28028:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "28028:43:15"
																},
																"nativeSrc": "28028:72:15",
																"nodeType": "YulFunctionCall",
																"src": "28028:72:15"
															},
															"nativeSrc": "28028:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "28028:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "27554:553:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27684:9:15",
														"nodeType": "YulTypedName",
														"src": "27684:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "27696:6:15",
														"nodeType": "YulTypedName",
														"src": "27696:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27704:6:15",
														"nodeType": "YulTypedName",
														"src": "27704:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27712:6:15",
														"nodeType": "YulTypedName",
														"src": "27712:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27720:6:15",
														"nodeType": "YulTypedName",
														"src": "27720:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27731:4:15",
														"nodeType": "YulTypedName",
														"src": "27731:4:15",
														"type": ""
													}
												],
												"src": "27554:553:15"
											},
											{
												"body": {
													"nativeSrc": "28157:147:15",
													"nodeType": "YulBlock",
													"src": "28157:147:15",
													"statements": [
														{
															"nativeSrc": "28167:25:15",
															"nodeType": "YulAssignment",
															"src": "28167:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28190:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "28190:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28172:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "28172:17:15"
																},
																"nativeSrc": "28172:20:15",
																"nodeType": "YulFunctionCall",
																"src": "28172:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "28167:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "28167:1:15"
																}
															]
														},
														{
															"nativeSrc": "28201:25:15",
															"nodeType": "YulAssignment",
															"src": "28201:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "28224:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "28224:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28206:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "28206:17:15"
																},
																"nativeSrc": "28206:20:15",
																"nodeType": "YulFunctionCall",
																"src": "28206:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "28201:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "28201:1:15"
																}
															]
														},
														{
															"nativeSrc": "28235:16:15",
															"nodeType": "YulAssignment",
															"src": "28235:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28246:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "28246:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "28249:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "28249:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28242:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28242:3:15"
																},
																"nativeSrc": "28242:9:15",
																"nodeType": "YulFunctionCall",
																"src": "28242:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "28235:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28235:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "28275:22:15",
																"nodeType": "YulBlock",
																"src": "28275:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "28277:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "28277:16:15"
																			},
																			"nativeSrc": "28277:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "28277:18:15"
																		},
																		"nativeSrc": "28277:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "28277:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28267:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "28267:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "28270:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "28270:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "28264:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "28264:2:15"
																},
																"nativeSrc": "28264:10:15",
																"nodeType": "YulFunctionCall",
																"src": "28264:10:15"
															},
															"nativeSrc": "28261:36:15",
															"nodeType": "YulIf",
															"src": "28261:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "28113:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "28144:1:15",
														"nodeType": "YulTypedName",
														"src": "28144:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "28147:1:15",
														"nodeType": "YulTypedName",
														"src": "28147:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "28153:3:15",
														"nodeType": "YulTypedName",
														"src": "28153:3:15",
														"type": ""
													}
												],
												"src": "28113:191:15"
											},
											{
												"body": {
													"nativeSrc": "28536:408:15",
													"nodeType": "YulBlock",
													"src": "28536:408:15",
													"statements": [
														{
															"nativeSrc": "28546:26:15",
															"nodeType": "YulAssignment",
															"src": "28546:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28558:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "28558:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28569:2:15",
																		"nodeType": "YulLiteral",
																		"src": "28569:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28554:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28554:3:15"
																},
																"nativeSrc": "28554:18:15",
																"nodeType": "YulFunctionCall",
																"src": "28554:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28546:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "28546:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28593:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28593:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28604:1:15",
																				"nodeType": "YulLiteral",
																				"src": "28604:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28589:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28589:3:15"
																		},
																		"nativeSrc": "28589:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28589:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28612:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "28612:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28618:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28618:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28608:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28608:3:15"
																		},
																		"nativeSrc": "28608:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28608:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28582:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "28582:6:15"
																},
																"nativeSrc": "28582:47:15",
																"nodeType": "YulFunctionCall",
																"src": "28582:47:15"
															},
															"nativeSrc": "28582:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "28582:47:15"
														},
														{
															"nativeSrc": "28638:116:15",
															"nodeType": "YulAssignment",
															"src": "28638:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28740:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28740:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "28749:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "28749:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "28646:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "28646:93:15"
																},
																"nativeSrc": "28646:108:15",
																"nodeType": "YulFunctionCall",
																"src": "28646:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28638:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "28638:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28775:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28775:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28786:2:15",
																				"nodeType": "YulLiteral",
																				"src": "28786:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28771:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28771:3:15"
																		},
																		"nativeSrc": "28771:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28771:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28795:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "28795:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28801:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28801:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28791:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28791:3:15"
																		},
																		"nativeSrc": "28791:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28791:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28764:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "28764:6:15"
																},
																"nativeSrc": "28764:48:15",
																"nodeType": "YulFunctionCall",
																"src": "28764:48:15"
															},
															"nativeSrc": "28764:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "28764:48:15"
														},
														{
															"nativeSrc": "28821:116:15",
															"nodeType": "YulAssignment",
															"src": "28821:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28923:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28923:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "28932:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "28932:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "28829:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "28829:93:15"
																},
																"nativeSrc": "28829:108:15",
																"nodeType": "YulFunctionCall",
																"src": "28829:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28821:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "28821:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "28310:634:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28500:9:15",
														"nodeType": "YulTypedName",
														"src": "28500:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28512:6:15",
														"nodeType": "YulTypedName",
														"src": "28512:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28520:6:15",
														"nodeType": "YulTypedName",
														"src": "28520:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28531:4:15",
														"nodeType": "YulTypedName",
														"src": "28531:4:15",
														"type": ""
													}
												],
												"src": "28310:634:15"
											},
											{
												"body": {
													"nativeSrc": "29008:40:15",
													"nodeType": "YulBlock",
													"src": "29008:40:15",
													"statements": [
														{
															"nativeSrc": "29019:22:15",
															"nodeType": "YulAssignment",
															"src": "29019:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29035:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "29035:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "29029:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "29029:5:15"
																},
																"nativeSrc": "29029:12:15",
																"nodeType": "YulFunctionCall",
																"src": "29029:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "29019:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29019:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "28950:98:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28991:5:15",
														"nodeType": "YulTypedName",
														"src": "28991:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "29001:6:15",
														"nodeType": "YulTypedName",
														"src": "29001:6:15",
														"type": ""
													}
												],
												"src": "28950:98:15"
											},
											{
												"body": {
													"nativeSrc": "29149:73:15",
													"nodeType": "YulBlock",
													"src": "29149:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29166:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29166:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29171:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29171:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29159:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29159:6:15"
																},
																"nativeSrc": "29159:19:15",
																"nodeType": "YulFunctionCall",
																"src": "29159:19:15"
															},
															"nativeSrc": "29159:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "29159:19:15"
														},
														{
															"nativeSrc": "29187:29:15",
															"nodeType": "YulAssignment",
															"src": "29187:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29206:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29206:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29211:4:15",
																		"nodeType": "YulLiteral",
																		"src": "29211:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29202:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29202:3:15"
																},
																"nativeSrc": "29202:14:15",
																"nodeType": "YulFunctionCall",
																"src": "29202:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "29187:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "29187:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "29054:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29121:3:15",
														"nodeType": "YulTypedName",
														"src": "29121:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "29126:6:15",
														"nodeType": "YulTypedName",
														"src": "29126:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "29137:11:15",
														"nodeType": "YulTypedName",
														"src": "29137:11:15",
														"type": ""
													}
												],
												"src": "29054:168:15"
											},
											{
												"body": {
													"nativeSrc": "29318:283:15",
													"nodeType": "YulBlock",
													"src": "29318:283:15",
													"statements": [
														{
															"nativeSrc": "29328:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "29328:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29374:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "29374:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "29342:31:15",
																	"nodeType": "YulIdentifier",
																	"src": "29342:31:15"
																},
																"nativeSrc": "29342:38:15",
																"nodeType": "YulFunctionCall",
																"src": "29342:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "29332:6:15",
																	"nodeType": "YulTypedName",
																	"src": "29332:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "29389:77:15",
															"nodeType": "YulAssignment",
															"src": "29389:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29454:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29454:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29459:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29459:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "29396:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "29396:57:15"
																},
																"nativeSrc": "29396:70:15",
																"nodeType": "YulFunctionCall",
																"src": "29396:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29389:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29389:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "29514:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "29514:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29521:4:15",
																				"nodeType": "YulLiteral",
																				"src": "29521:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29510:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29510:3:15"
																		},
																		"nativeSrc": "29510:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29510:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "29528:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29528:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29533:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29533:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "29475:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "29475:34:15"
																},
																"nativeSrc": "29475:65:15",
																"nodeType": "YulFunctionCall",
																"src": "29475:65:15"
															},
															"nativeSrc": "29475:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "29475:65:15"
														},
														{
															"nativeSrc": "29549:46:15",
															"nodeType": "YulAssignment",
															"src": "29549:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29560:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29560:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "29587:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "29587:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "29565:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "29565:21:15"
																		},
																		"nativeSrc": "29565:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29565:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29556:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29556:3:15"
																},
																"nativeSrc": "29556:39:15",
																"nodeType": "YulFunctionCall",
																"src": "29556:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29549:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29549:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "29228:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29299:5:15",
														"nodeType": "YulTypedName",
														"src": "29299:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "29306:3:15",
														"nodeType": "YulTypedName",
														"src": "29306:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29314:3:15",
														"nodeType": "YulTypedName",
														"src": "29314:3:15",
														"type": ""
													}
												],
												"src": "29228:373:15"
											},
											{
												"body": {
													"nativeSrc": "29835:523:15",
													"nodeType": "YulBlock",
													"src": "29835:523:15",
													"statements": [
														{
															"nativeSrc": "29845:27:15",
															"nodeType": "YulAssignment",
															"src": "29845:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29857:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "29857:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29868:3:15",
																		"nodeType": "YulLiteral",
																		"src": "29868:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29853:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29853:3:15"
																},
																"nativeSrc": "29853:19:15",
																"nodeType": "YulFunctionCall",
																"src": "29853:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29845:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "29845:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "29926:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29926:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29939:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29939:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29950:1:15",
																				"nodeType": "YulLiteral",
																				"src": "29950:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29935:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29935:3:15"
																		},
																		"nativeSrc": "29935:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29935:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "29882:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "29882:43:15"
																},
																"nativeSrc": "29882:71:15",
																"nodeType": "YulFunctionCall",
																"src": "29882:71:15"
															},
															"nativeSrc": "29882:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "29882:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30007:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30007:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30020:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30020:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30031:2:15",
																				"nodeType": "YulLiteral",
																				"src": "30031:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30016:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30016:3:15"
																		},
																		"nativeSrc": "30016:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30016:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "29963:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "29963:43:15"
																},
																"nativeSrc": "29963:72:15",
																"nodeType": "YulFunctionCall",
																"src": "29963:72:15"
															},
															"nativeSrc": "29963:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "29963:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "30089:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30089:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30102:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30102:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30113:2:15",
																				"nodeType": "YulLiteral",
																				"src": "30113:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30098:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30098:3:15"
																		},
																		"nativeSrc": "30098:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30098:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30045:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "30045:43:15"
																},
																"nativeSrc": "30045:72:15",
																"nodeType": "YulFunctionCall",
																"src": "30045:72:15"
															},
															"nativeSrc": "30045:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "30045:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "30171:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30171:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30184:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30184:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30195:2:15",
																				"nodeType": "YulLiteral",
																				"src": "30195:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30180:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30180:3:15"
																		},
																		"nativeSrc": "30180:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30180:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30127:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "30127:43:15"
																},
																"nativeSrc": "30127:72:15",
																"nodeType": "YulFunctionCall",
																"src": "30127:72:15"
															},
															"nativeSrc": "30127:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "30127:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30220:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30220:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30231:3:15",
																				"nodeType": "YulLiteral",
																				"src": "30231:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30216:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30216:3:15"
																		},
																		"nativeSrc": "30216:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30216:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30241:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "30241:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30247:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30247:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30237:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30237:3:15"
																		},
																		"nativeSrc": "30237:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30237:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30209:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "30209:6:15"
																},
																"nativeSrc": "30209:49:15",
																"nodeType": "YulFunctionCall",
																"src": "30209:49:15"
															},
															"nativeSrc": "30209:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "30209:49:15"
														},
														{
															"nativeSrc": "30267:84:15",
															"nodeType": "YulAssignment",
															"src": "30267:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "30337:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30337:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "30346:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "30346:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "30275:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "30275:61:15"
																},
																"nativeSrc": "30275:76:15",
																"nodeType": "YulFunctionCall",
																"src": "30275:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30267:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "30267:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "29607:751:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29775:9:15",
														"nodeType": "YulTypedName",
														"src": "29775:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "29787:6:15",
														"nodeType": "YulTypedName",
														"src": "29787:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "29795:6:15",
														"nodeType": "YulTypedName",
														"src": "29795:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "29803:6:15",
														"nodeType": "YulTypedName",
														"src": "29803:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "29811:6:15",
														"nodeType": "YulTypedName",
														"src": "29811:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "29819:6:15",
														"nodeType": "YulTypedName",
														"src": "29819:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29830:4:15",
														"nodeType": "YulTypedName",
														"src": "29830:4:15",
														"type": ""
													}
												],
												"src": "29607:751:15"
											},
											{
												"body": {
													"nativeSrc": "30426:79:15",
													"nodeType": "YulBlock",
													"src": "30426:79:15",
													"statements": [
														{
															"nativeSrc": "30436:22:15",
															"nodeType": "YulAssignment",
															"src": "30436:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "30451:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30451:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "30445:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "30445:5:15"
																},
																"nativeSrc": "30445:13:15",
																"nodeType": "YulFunctionCall",
																"src": "30445:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "30436:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "30436:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30493:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "30493:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "30467:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "30467:25:15"
																},
																"nativeSrc": "30467:32:15",
																"nodeType": "YulFunctionCall",
																"src": "30467:32:15"
															},
															"nativeSrc": "30467:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "30467:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "30364:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "30404:6:15",
														"nodeType": "YulTypedName",
														"src": "30404:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "30412:3:15",
														"nodeType": "YulTypedName",
														"src": "30412:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "30420:5:15",
														"nodeType": "YulTypedName",
														"src": "30420:5:15",
														"type": ""
													}
												],
												"src": "30364:141:15"
											},
											{
												"body": {
													"nativeSrc": "30587:273:15",
													"nodeType": "YulBlock",
													"src": "30587:273:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "30633:83:15",
																"nodeType": "YulBlock",
																"src": "30633:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "30635:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "30635:77:15"
																			},
																			"nativeSrc": "30635:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "30635:79:15"
																		},
																		"nativeSrc": "30635:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "30635:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "30608:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "30608:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30617:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30617:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30604:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30604:3:15"
																		},
																		"nativeSrc": "30604:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30604:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30629:2:15",
																		"nodeType": "YulLiteral",
																		"src": "30629:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "30600:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30600:3:15"
																},
																"nativeSrc": "30600:32:15",
																"nodeType": "YulFunctionCall",
																"src": "30600:32:15"
															},
															"nativeSrc": "30597:119:15",
															"nodeType": "YulIf",
															"src": "30597:119:15"
														},
														{
															"nativeSrc": "30726:127:15",
															"nodeType": "YulBlock",
															"src": "30726:127:15",
															"statements": [
																{
																	"nativeSrc": "30741:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "30741:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "30755:1:15",
																		"nodeType": "YulLiteral",
																		"src": "30755:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "30745:6:15",
																			"nodeType": "YulTypedName",
																			"src": "30745:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "30770:73:15",
																	"nodeType": "YulAssignment",
																	"src": "30770:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "30815:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "30815:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "30826:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "30826:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "30811:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "30811:3:15"
																				},
																				"nativeSrc": "30811:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "30811:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "30835:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "30835:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "30780:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "30780:30:15"
																		},
																		"nativeSrc": "30780:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30780:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "30770:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "30770:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "30511:349:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30557:9:15",
														"nodeType": "YulTypedName",
														"src": "30557:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "30568:7:15",
														"nodeType": "YulTypedName",
														"src": "30568:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "30580:6:15",
														"nodeType": "YulTypedName",
														"src": "30580:6:15",
														"type": ""
													}
												],
												"src": "30511:349:15"
											},
											{
												"body": {
													"nativeSrc": "31194:725:15",
													"nodeType": "YulBlock",
													"src": "31194:725:15",
													"statements": [
														{
															"nativeSrc": "31204:27:15",
															"nodeType": "YulAssignment",
															"src": "31204:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31216:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "31216:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31227:3:15",
																		"nodeType": "YulLiteral",
																		"src": "31227:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31212:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31212:3:15"
																},
																"nativeSrc": "31212:19:15",
																"nodeType": "YulFunctionCall",
																"src": "31212:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31204:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31204:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31285:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31285:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31298:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31298:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31309:1:15",
																				"nodeType": "YulLiteral",
																				"src": "31309:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31294:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31294:3:15"
																		},
																		"nativeSrc": "31294:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31294:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31241:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31241:43:15"
																},
																"nativeSrc": "31241:71:15",
																"nodeType": "YulFunctionCall",
																"src": "31241:71:15"
															},
															"nativeSrc": "31241:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "31241:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31366:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31366:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31379:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31379:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31390:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31390:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31375:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31375:3:15"
																		},
																		"nativeSrc": "31375:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31375:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31322:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31322:43:15"
																},
																"nativeSrc": "31322:72:15",
																"nodeType": "YulFunctionCall",
																"src": "31322:72:15"
															},
															"nativeSrc": "31322:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "31322:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31415:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31415:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31426:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31426:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31411:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31411:3:15"
																		},
																		"nativeSrc": "31411:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31411:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31435:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "31435:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31441:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31441:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31431:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31431:3:15"
																		},
																		"nativeSrc": "31431:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31431:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31404:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "31404:6:15"
																},
																"nativeSrc": "31404:48:15",
																"nodeType": "YulFunctionCall",
																"src": "31404:48:15"
															},
															"nativeSrc": "31404:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "31404:48:15"
														},
														{
															"nativeSrc": "31461:116:15",
															"nodeType": "YulAssignment",
															"src": "31461:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31563:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31563:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "31572:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "31572:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "31469:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "31469:93:15"
																},
																"nativeSrc": "31469:108:15",
																"nodeType": "YulFunctionCall",
																"src": "31469:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31461:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31461:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31598:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31598:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31609:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31609:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31594:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31594:3:15"
																		},
																		"nativeSrc": "31594:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31594:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31618:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "31618:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31624:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31624:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31614:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31614:3:15"
																		},
																		"nativeSrc": "31614:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31614:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31587:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "31587:6:15"
																},
																"nativeSrc": "31587:48:15",
																"nodeType": "YulFunctionCall",
																"src": "31587:48:15"
															},
															"nativeSrc": "31587:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "31587:48:15"
														},
														{
															"nativeSrc": "31644:116:15",
															"nodeType": "YulAssignment",
															"src": "31644:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "31746:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31746:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "31755:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "31755:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "31652:93:15",
																	"nodeType": "YulIdentifier",
																	"src": "31652:93:15"
																},
																"nativeSrc": "31652:108:15",
																"nodeType": "YulFunctionCall",
																"src": "31652:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31644:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31644:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31781:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31781:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31792:3:15",
																				"nodeType": "YulLiteral",
																				"src": "31792:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31777:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31777:3:15"
																		},
																		"nativeSrc": "31777:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31777:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31802:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "31802:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31808:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31808:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31798:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31798:3:15"
																		},
																		"nativeSrc": "31798:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31798:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31770:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "31770:6:15"
																},
																"nativeSrc": "31770:49:15",
																"nodeType": "YulFunctionCall",
																"src": "31770:49:15"
															},
															"nativeSrc": "31770:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "31770:49:15"
														},
														{
															"nativeSrc": "31828:84:15",
															"nodeType": "YulAssignment",
															"src": "31828:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "31898:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31898:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "31907:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "31907:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "31836:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "31836:61:15"
																},
																"nativeSrc": "31836:76:15",
																"nodeType": "YulFunctionCall",
																"src": "31836:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31828:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31828:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "30866:1053:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31134:9:15",
														"nodeType": "YulTypedName",
														"src": "31134:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "31146:6:15",
														"nodeType": "YulTypedName",
														"src": "31146:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "31154:6:15",
														"nodeType": "YulTypedName",
														"src": "31154:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "31162:6:15",
														"nodeType": "YulTypedName",
														"src": "31162:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "31170:6:15",
														"nodeType": "YulTypedName",
														"src": "31170:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31178:6:15",
														"nodeType": "YulTypedName",
														"src": "31178:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31189:4:15",
														"nodeType": "YulTypedName",
														"src": "31189:4:15",
														"type": ""
													}
												],
												"src": "30866:1053:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c80632eb2c2d61161006f5780632eb2c2d6146101745780634e1273f41461019057806377097fc8146101c0578063a22cb465146101dc578063e985e9c5146101f8578063f242432a14610228576100a6565b8062fdd58e146100aa57806301ffc9a7146100da5780630e89341c1461010a5780630febdd491461013a5780631c75cfb414610156575b5f80fd5b6100c460048036038101906100bf91906115a7565b610244565b6040516100d191906115f4565b60405180910390f35b6100f460048036038101906100ef9190611662565b610299565b60405161010191906116a7565b60405180910390f35b610124600480360381019061011f91906116c0565b61037a565b604051610131919061175b565b60405180910390f35b610154600480360381019061014f919061177b565b610459565b005b61015e61047a565b60405161016b91906115f4565b60405180910390f35b61018e600480360381019061018991906119cf565b610480565b005b6101aa60048036038101906101a59190611b5a565b610527565b6040516101b79190611c87565b60405180910390f35b6101da60048036038101906101d59190611d45565b61062e565b005b6101f660048036038101906101f19190611dc9565b610671565b005b610212600480360381019061020d9190611e07565b610687565b60405161021f91906116a7565b60405180910390f35b610242600480360381019061023d9190611e45565b610715565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036357507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103735750610372826107bc565b5b9050919050565b60605f60045f8481526020019081526020015f20805461039990611f05565b80601f01602080910402602001604051908101604052809291908181526020018280546103c590611f05565b80156104105780601f106103e757610100808354040283529160200191610410565b820191905f5260205f20905b8154815290600101906020018083116103f357829003601f168201915b505050505090505f81511161042d5761042883610825565b610451565b600381604051602001610441929190612001565b6040516020818303038152906040525b915050919050565b6104748484848460405180602001604052805f815250610715565b50505050565b60055481565b5f6104896108b7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104ce57506104cc8682610687565b155b156105125780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610509929190612033565b60405180910390fd5b61051f86868686866108be565b505050505050565b6060815183511461057357815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161056a92919061205a565b60405180910390fd5b5f835167ffffffffffffffff81111561058f5761058e6117e3565b5b6040519080825280602002602001820160405280156105bd5781602001602082028036833780820191505090505b5090505f5b8451811015610623576105f96105e182876109b290919063ffffffff16565b6105f483876109c590919063ffffffff16565b610244565b82828151811061060c5761060b612081565b5b6020026020010181815250508060010190506105c2565b508091505092915050565b61064a336005548460405180602001604052805f8152506109d8565b61065660055482610a6d565b60055f815480929190610668906120db565b91905055505050565b61068361067c6108b7565b8383610ad0565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f61071e6108b7565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561076357506107618682610687565b155b156107a75780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161079e929190612033565b60405180910390fd5b6107b48686868686610c39565b505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606002805461083490611f05565b80601f016020809104026020016040519081016040528092919081815260200182805461086090611f05565b80156108ab5780601f10610882576101008083540402835291602001916108ab565b820191905f5260205f20905b81548152906001019060200180831161088e57829003601f168201915b50505050509050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361092e575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109259190612122565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361099e575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016109959190612122565b60405180910390fd5b6109ab8585858585610d3f565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a48575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610a3f9190612122565b60405180910390fd5b5f80610a548585610deb565b91509150610a655f87848487610d3f565b505050505050565b8060045f8481526020019081526020015f209081610a8b91906122c6565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b610ab78461037a565b604051610ac4919061175b565b60405180910390a25050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b40575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610b379190612122565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c2c91906116a7565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ca9575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610ca09190612122565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610d19575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610d109190612122565b60405180910390fd5b5f80610d258585610deb565b91509150610d368787848487610d3f565b50505050505050565b610d4b85858585610e1b565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610de4575f610d876108b7565b90506001845103610dd3575f610da65f866109c590919063ffffffff16565b90505f610dbc5f866109c590919063ffffffff16565b9050610dcc8389898585896111ab565b5050610de2565b610de181878787878761135a565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610e6557815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610e5c92919061205a565b60405180910390fd5b5f610e6e6108b7565b90505f5b835181101561106a575f610e8f82866109c590919063ffffffff16565b90505f610ea583866109c590919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610fc8575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f7457888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610f6b9493929190612395565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461105d57805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461105591906123d8565b925050819055505b5050806001019050610e72565b506001835103611125575f6110885f856109c590919063ffffffff16565b90505f61109e5f856109c590919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161111692919061205a565b60405180910390a450506111a4565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161119b92919061240b565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611352578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161120b959493929190612492565b6020604051808303815f875af192505050801561124657506040513d601f19601f8201168201806040525081019061124391906124fe565b60015b6112c7573d805f8114611274576040519150601f19603f3d011682016040523d82523d5f602084013e611279565b606091505b505f8151036112bf57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112b69190612122565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461135057846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113479190612122565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611501578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016113ba959493929190612529565b6020604051808303815f875af19250505080156113f557506040513d601f19601f820116820180604052508101906113f291906124fe565b60015b611476573d805f8114611423576040519150601f19603f3d011682016040523d82523d5f602084013e611428565b606091505b505f81510361146e57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114659190612122565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146114ff57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114f69190612122565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115438261151a565b9050919050565b61155381611539565b811461155d575f80fd5b50565b5f8135905061156e8161154a565b92915050565b5f819050919050565b61158681611574565b8114611590575f80fd5b50565b5f813590506115a18161157d565b92915050565b5f80604083850312156115bd576115bc611512565b5b5f6115ca85828601611560565b92505060206115db85828601611593565b9150509250929050565b6115ee81611574565b82525050565b5f6020820190506116075f8301846115e5565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116418161160d565b811461164b575f80fd5b50565b5f8135905061165c81611638565b92915050565b5f6020828403121561167757611676611512565b5b5f6116848482850161164e565b91505092915050565b5f8115159050919050565b6116a18161168d565b82525050565b5f6020820190506116ba5f830184611698565b92915050565b5f602082840312156116d5576116d4611512565b5b5f6116e284828501611593565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61172d826116eb565b61173781856116f5565b9350611747818560208601611705565b61175081611713565b840191505092915050565b5f6020820190508181035f8301526117738184611723565b905092915050565b5f805f806080858703121561179357611792611512565b5b5f6117a087828801611560565b94505060206117b187828801611560565b93505060406117c287828801611593565b92505060606117d387828801611593565b91505092959194509250565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61181982611713565b810181811067ffffffffffffffff82111715611838576118376117e3565b5b80604052505050565b5f61184a611509565b90506118568282611810565b919050565b5f67ffffffffffffffff821115611875576118746117e3565b5b602082029050602081019050919050565b5f80fd5b5f61189c6118978461185b565b611841565b905080838252602082019050602084028301858111156118bf576118be611886565b5b835b818110156118e857806118d48882611593565b8452602084019350506020810190506118c1565b5050509392505050565b5f82601f830112611906576119056117df565b5b813561191684826020860161188a565b91505092915050565b5f80fd5b5f67ffffffffffffffff82111561193d5761193c6117e3565b5b61194682611713565b9050602081019050919050565b828183375f83830152505050565b5f61197361196e84611923565b611841565b90508281526020810184848401111561198f5761198e61191f565b5b61199a848285611953565b509392505050565b5f82601f8301126119b6576119b56117df565b5b81356119c6848260208601611961565b91505092915050565b5f805f805f60a086880312156119e8576119e7611512565b5b5f6119f588828901611560565b9550506020611a0688828901611560565b945050604086013567ffffffffffffffff811115611a2757611a26611516565b5b611a33888289016118f2565b935050606086013567ffffffffffffffff811115611a5457611a53611516565b5b611a60888289016118f2565b925050608086013567ffffffffffffffff811115611a8157611a80611516565b5b611a8d888289016119a2565b9150509295509295909350565b5f67ffffffffffffffff821115611ab457611ab36117e3565b5b602082029050602081019050919050565b5f611ad7611ad284611a9a565b611841565b90508083825260208201905060208402830185811115611afa57611af9611886565b5b835b81811015611b235780611b0f8882611560565b845260208401935050602081019050611afc565b5050509392505050565b5f82601f830112611b4157611b406117df565b5b8135611b51848260208601611ac5565b91505092915050565b5f8060408385031215611b7057611b6f611512565b5b5f83013567ffffffffffffffff811115611b8d57611b8c611516565b5b611b9985828601611b2d565b925050602083013567ffffffffffffffff811115611bba57611bb9611516565b5b611bc6858286016118f2565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611c0281611574565b82525050565b5f611c138383611bf9565b60208301905092915050565b5f602082019050919050565b5f611c3582611bd0565b611c3f8185611bda565b9350611c4a83611bea565b805f5b83811015611c7a578151611c618882611c08565b9750611c6c83611c1f565b925050600181019050611c4d565b5085935050505092915050565b5f6020820190508181035f830152611c9f8184611c2b565b905092915050565b5f67ffffffffffffffff821115611cc157611cc06117e3565b5b611cca82611713565b9050602081019050919050565b5f611ce9611ce484611ca7565b611841565b905082815260208101848484011115611d0557611d0461191f565b5b611d10848285611953565b509392505050565b5f82601f830112611d2c57611d2b6117df565b5b8135611d3c848260208601611cd7565b91505092915050565b5f8060408385031215611d5b57611d5a611512565b5b5f611d6885828601611593565b925050602083013567ffffffffffffffff811115611d8957611d88611516565b5b611d9585828601611d18565b9150509250929050565b611da88161168d565b8114611db2575f80fd5b50565b5f81359050611dc381611d9f565b92915050565b5f8060408385031215611ddf57611dde611512565b5b5f611dec85828601611560565b9250506020611dfd85828601611db5565b9150509250929050565b5f8060408385031215611e1d57611e1c611512565b5b5f611e2a85828601611560565b9250506020611e3b85828601611560565b9150509250929050565b5f805f805f60a08688031215611e5e57611e5d611512565b5b5f611e6b88828901611560565b9550506020611e7c88828901611560565b9450506040611e8d88828901611593565b9350506060611e9e88828901611593565b925050608086013567ffffffffffffffff811115611ebf57611ebe611516565b5b611ecb888289016119a2565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f1c57607f821691505b602082108103611f2f57611f2e611ed8565b5b50919050565b5f81905092915050565b5f819050815f5260205f209050919050565b5f8154611f5d81611f05565b611f678186611f35565b9450600182165f8114611f815760018114611f9657611fc8565b60ff1983168652811515820286019350611fc8565b611f9f85611f3f565b5f5b83811015611fc057815481890152600182019150602081019050611fa1565b838801955050505b50505092915050565b5f611fdb826116eb565b611fe58185611f35565b9350611ff5818560208601611705565b80840191505092915050565b5f61200c8285611f51565b91506120188284611fd1565b91508190509392505050565b61202d81611539565b82525050565b5f6040820190506120465f830185612024565b6120536020830184612024565b9392505050565b5f60408201905061206d5f8301856115e5565b61207a60208301846115e5565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6120e582611574565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612117576121166120ae565b5b600182019050919050565b5f6020820190506121355f830184612024565b92915050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026121857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261214a565b61218f868361214a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6121ca6121c56121c084611574565b6121a7565b611574565b9050919050565b5f819050919050565b6121e3836121b0565b6121f76121ef826121d1565b848454612156565b825550505050565b5f90565b61220b6121ff565b6122168184846121da565b505050565b5b818110156122395761222e5f82612203565b60018101905061221c565b5050565b601f82111561227e5761224f81611f3f565b6122588461213b565b81016020851015612267578190505b61227b6122738561213b565b83018261221b565b50505b505050565b5f82821c905092915050565b5f61229e5f1984600802612283565b1980831691505092915050565b5f6122b6838361228f565b9150826002028217905092915050565b6122cf826116eb565b67ffffffffffffffff8111156122e8576122e76117e3565b5b6122f28254611f05565b6122fd82828561223d565b5f60209050601f83116001811461232e575f841561231c578287015190505b61232685826122ab565b86555061238d565b601f19841661233c86611f3f565b5f5b828110156123635784890151825560018201915060208501945060208101905061233e565b86831015612380578489015161237c601f89168261228f565b8355505b6001600288020188555050505b505050505050565b5f6080820190506123a85f830187612024565b6123b560208301866115e5565b6123c260408301856115e5565b6123cf60608301846115e5565b95945050505050565b5f6123e282611574565b91506123ed83611574565b9250828201905080821115612405576124046120ae565b5b92915050565b5f6040820190508181035f8301526124238185611c2b565b905081810360208301526124378184611c2b565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61246482612440565b61246e818561244a565b935061247e818560208601611705565b61248781611713565b840191505092915050565b5f60a0820190506124a55f830188612024565b6124b26020830187612024565b6124bf60408301866115e5565b6124cc60608301856115e5565b81810360808301526124de818461245a565b90509695505050505050565b5f815190506124f881611638565b92915050565b5f6020828403121561251357612512611512565b5b5f612520848285016124ea565b91505092915050565b5f60a08201905061253c5f830188612024565b6125496020830187612024565b818103604083015261255b8186611c2b565b9050818103606083015261256f8185611c2b565b90508181036080830152612583818461245a565b9050969550505050505056fea26469706673582212201c9bc8ffc77b814d6da0adac9cabc17ac141f86175dde5a6265fd86ec23c04eb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x77097FC8 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x228 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xFEBDD49 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x1C75CFB4 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x177B JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15E PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1B5A JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x363 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x372 DUP3 PUSH2 0x7BC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x399 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C5 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x410 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x410 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x42D JUMPI PUSH2 0x428 DUP4 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x441 SWAP3 SWAP2 SWAP1 PUSH2 0x2001 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x474 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x715 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x489 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4CE JUMPI POP PUSH2 0x4CC DUP7 DUP3 PUSH2 0x687 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x512 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP3 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51F DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x8BE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x573 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56A SWAP3 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5BD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x623 JUMPI PUSH2 0x5F9 PUSH2 0x5E1 DUP3 DUP8 PUSH2 0x9B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5F4 DUP4 DUP8 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60C JUMPI PUSH2 0x60B PUSH2 0x2081 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x5C2 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x64A CALLER PUSH1 0x5 SLOAD DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x656 PUSH1 0x5 SLOAD DUP3 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x668 SWAP1 PUSH2 0x20DB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x683 PUSH2 0x67C PUSH2 0x8B7 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAD0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x71E PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x763 JUMPI POP PUSH2 0x761 DUP7 DUP3 PUSH2 0x687 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7A7 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP3 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B4 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xC39 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x834 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x860 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x882 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD3F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA48 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xA54 DUP6 DUP6 PUSH2 0xDEB JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xA65 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xD3F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0xA8B SWAP2 SWAP1 PUSH2 0x22C6 JUMP JUMPDEST POP DUP2 PUSH32 0x6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B PUSH2 0xAB7 DUP5 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB40 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC2C SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD19 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD10 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xD25 DUP6 DUP6 PUSH2 0xDEB JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xD36 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xD3F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD4B DUP6 DUP6 DUP6 DUP6 PUSH2 0xE1B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE4 JUMPI PUSH0 PUSH2 0xD87 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xDD3 JUMPI PUSH0 PUSH2 0xDA6 PUSH0 DUP7 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDBC PUSH0 DUP7 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xDCC DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11AB JUMP JUMPDEST POP POP PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xDE1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x135A JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xE65 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5C SWAP3 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE6E PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x106A JUMPI PUSH0 PUSH2 0xE8F DUP3 DUP7 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xEA5 DUP4 DUP7 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC8 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF74 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2395 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x105D JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1055 SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xE72 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1125 JUMPI PUSH0 PUSH2 0x1088 PUSH0 DUP6 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x109E PUSH0 DUP6 PUSH2 0x9C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1116 SWAP3 SWAP2 SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x11A4 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x119B SWAP3 SWAP2 SWAP1 PUSH2 0x240B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1352 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1246 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1243 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12C7 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12BF JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B6 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1350 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1501 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13F5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13F2 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1476 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1423 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x146E JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1465 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x14FF JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F6 SWAP2 SWAP1 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1543 DUP3 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1553 DUP2 PUSH2 0x1539 JUMP JUMPDEST DUP2 EQ PUSH2 0x155D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156E DUP2 PUSH2 0x154A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1586 DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP2 EQ PUSH2 0x1590 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15A1 DUP2 PUSH2 0x157D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15BD JUMPI PUSH2 0x15BC PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15CA DUP6 DUP3 DUP7 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15DB DUP6 DUP3 DUP7 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EE DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1607 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1641 DUP2 PUSH2 0x160D JUMP JUMPDEST DUP2 EQ PUSH2 0x164B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x165C DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1677 JUMPI PUSH2 0x1676 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1684 DUP5 DUP3 DUP6 ADD PUSH2 0x164E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A1 DUP2 PUSH2 0x168D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH0 DUP4 ADD DUP5 PUSH2 0x1698 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E2 DUP5 DUP3 DUP6 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x172D DUP3 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x1737 DUP2 DUP6 PUSH2 0x16F5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1747 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x1750 DUP2 PUSH2 0x1713 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1773 DUP2 DUP5 PUSH2 0x1723 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1793 JUMPI PUSH2 0x1792 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A0 DUP8 DUP3 DUP9 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x17B1 DUP8 DUP3 DUP9 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x17C2 DUP8 DUP3 DUP9 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x17D3 DUP8 DUP3 DUP9 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1819 DUP3 PUSH2 0x1713 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1838 JUMPI PUSH2 0x1837 PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x184A PUSH2 0x1509 JUMP JUMPDEST SWAP1 POP PUSH2 0x1856 DUP3 DUP3 PUSH2 0x1810 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1875 JUMPI PUSH2 0x1874 PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x189C PUSH2 0x1897 DUP5 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18BF JUMPI PUSH2 0x18BE PUSH2 0x1886 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18E8 JUMPI DUP1 PUSH2 0x18D4 DUP9 DUP3 PUSH2 0x1593 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18C1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1906 JUMPI PUSH2 0x1905 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1916 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x188A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x193D JUMPI PUSH2 0x193C PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH2 0x1946 DUP3 PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1973 PUSH2 0x196E DUP5 PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x198F JUMPI PUSH2 0x198E PUSH2 0x191F JUMP JUMPDEST JUMPDEST PUSH2 0x199A DUP5 DUP3 DUP6 PUSH2 0x1953 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19B6 JUMPI PUSH2 0x19B5 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19C6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1961 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19E8 JUMPI PUSH2 0x19E7 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19F5 DUP9 DUP3 DUP10 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1A06 DUP9 DUP3 DUP10 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A27 JUMPI PUSH2 0x1A26 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1A33 DUP9 DUP3 DUP10 ADD PUSH2 0x18F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A54 JUMPI PUSH2 0x1A53 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1A60 DUP9 DUP3 DUP10 ADD PUSH2 0x18F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A81 JUMPI PUSH2 0x1A80 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1A8D DUP9 DUP3 DUP10 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AB4 JUMPI PUSH2 0x1AB3 PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD7 PUSH2 0x1AD2 DUP5 PUSH2 0x1A9A JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1AFA JUMPI PUSH2 0x1AF9 PUSH2 0x1886 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B23 JUMPI DUP1 PUSH2 0x1B0F DUP9 DUP3 PUSH2 0x1560 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AFC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B41 JUMPI PUSH2 0x1B40 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B51 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B70 JUMPI PUSH2 0x1B6F PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B8D JUMPI PUSH2 0x1B8C PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1B99 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1BC6 DUP6 DUP3 DUP7 ADD PUSH2 0x18F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C02 DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C13 DUP4 DUP4 PUSH2 0x1BF9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C35 DUP3 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0x1C3F DUP2 DUP6 PUSH2 0x1BDA JUMP JUMPDEST SWAP4 POP PUSH2 0x1C4A DUP4 PUSH2 0x1BEA JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C7A JUMPI DUP2 MLOAD PUSH2 0x1C61 DUP9 DUP3 PUSH2 0x1C08 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C6C DUP4 PUSH2 0x1C1F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C4D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9F DUP2 DUP5 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC0 PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCA DUP3 PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE9 PUSH2 0x1CE4 DUP5 PUSH2 0x1CA7 JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D05 JUMPI PUSH2 0x1D04 PUSH2 0x191F JUMP JUMPDEST JUMPDEST PUSH2 0x1D10 DUP5 DUP3 DUP6 PUSH2 0x1953 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D2C JUMPI PUSH2 0x1D2B PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D3C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1CD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D5B JUMPI PUSH2 0x1D5A PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D68 DUP6 DUP3 DUP7 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1D95 DUP6 DUP3 DUP7 ADD PUSH2 0x1D18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA8 DUP2 PUSH2 0x168D JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DC3 DUP2 PUSH2 0x1D9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DEC DUP6 DUP3 DUP7 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DFD DUP6 DUP3 DUP7 ADD PUSH2 0x1DB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1D JUMPI PUSH2 0x1E1C PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E2A DUP6 DUP3 DUP7 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3B DUP6 DUP3 DUP7 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E5E JUMPI PUSH2 0x1E5D PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E6B DUP9 DUP3 DUP10 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1E7C DUP9 DUP3 DUP10 ADD PUSH2 0x1560 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E8D DUP9 DUP3 DUP10 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1E9E DUP9 DUP3 DUP10 ADD PUSH2 0x1593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBF JUMPI PUSH2 0x1EBE PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH2 0x1ECB DUP9 DUP3 DUP10 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F1C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F2F JUMPI PUSH2 0x1F2E PUSH2 0x1ED8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x1F5D DUP2 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x1F67 DUP2 DUP7 PUSH2 0x1F35 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x1F81 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1F96 JUMPI PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x1F9F DUP6 PUSH2 0x1F3F JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FC0 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FA1 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FDB DUP3 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0x1FE5 DUP2 DUP6 PUSH2 0x1F35 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FF5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x200C DUP3 DUP6 PUSH2 0x1F51 JUMP JUMPDEST SWAP2 POP PUSH2 0x2018 DUP3 DUP5 PUSH2 0x1FD1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x202D DUP2 PUSH2 0x1539 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2046 PUSH0 DUP4 ADD DUP6 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x2053 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2024 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x206D PUSH0 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x207A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20E5 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2117 JUMPI PUSH2 0x2116 PUSH2 0x20AE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2135 PUSH0 DUP4 ADD DUP5 PUSH2 0x2024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2185 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x218F DUP7 DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21CA PUSH2 0x21C5 PUSH2 0x21C0 DUP5 PUSH2 0x1574 JUMP JUMPDEST PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E3 DUP4 PUSH2 0x21B0 JUMP JUMPDEST PUSH2 0x21F7 PUSH2 0x21EF DUP3 PUSH2 0x21D1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2156 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x220B PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x2216 DUP2 DUP5 DUP5 PUSH2 0x21DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2239 JUMPI PUSH2 0x222E PUSH0 DUP3 PUSH2 0x2203 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x221C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x227E JUMPI PUSH2 0x224F DUP2 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x2258 DUP5 PUSH2 0x213B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2267 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x227B PUSH2 0x2273 DUP6 PUSH2 0x213B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x221B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x229E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2283 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22B6 DUP4 DUP4 PUSH2 0x228F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22CF DUP3 PUSH2 0x16EB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22E8 JUMPI PUSH2 0x22E7 PUSH2 0x17E3 JUMP JUMPDEST JUMPDEST PUSH2 0x22F2 DUP3 SLOAD PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x22FD DUP3 DUP3 DUP6 PUSH2 0x223D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x232E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x231C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2326 DUP6 DUP3 PUSH2 0x22AB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x238D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x233C DUP7 PUSH2 0x1F3F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2363 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x233E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2380 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x237C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x228F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x23A8 PUSH0 DUP4 ADD DUP8 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x23B5 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x23C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x23CF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15E5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23E2 DUP3 PUSH2 0x1574 JUMP JUMPDEST SWAP2 POP PUSH2 0x23ED DUP4 PUSH2 0x1574 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2405 JUMPI PUSH2 0x2404 PUSH2 0x20AE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2423 DUP2 DUP6 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2437 DUP2 DUP5 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2464 DUP3 PUSH2 0x2440 JUMP JUMPDEST PUSH2 0x246E DUP2 DUP6 PUSH2 0x244A JUMP JUMPDEST SWAP4 POP PUSH2 0x247E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1705 JUMP JUMPDEST PUSH2 0x2487 DUP2 PUSH2 0x1713 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24A5 PUSH0 DUP4 ADD DUP9 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x24B2 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x24BF PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x24CC PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x15E5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24DE DUP2 DUP5 PUSH2 0x245A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24F8 DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2513 JUMPI PUSH2 0x2512 PUSH2 0x1512 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2520 DUP5 DUP3 DUP6 ADD PUSH2 0x24EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x253C PUSH0 DUP4 ADD DUP9 PUSH2 0x2024 JUMP JUMPDEST PUSH2 0x2549 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2024 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x255B DUP2 DUP7 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x256F DUP2 DUP6 PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2583 DUP2 DUP5 PUSH2 0x245A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP12 0xC8 SELFDESTRUCT 0xC7 PUSH28 0x814D6DA0ADAC9CABC17AC141F86175DDE5A6265FD86EC23C04EB6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "249:463:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1331:332:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;554:156:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;326:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;357:191:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3156:144:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;1331:332:4:-;1399:13;1424:22;1449:10;:19;1460:7;1449:19;;;;;;;;;;;1424:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1598:1;1579:8;1573:22;:26;:83;;1638:18;1648:7;1638:9;:18::i;:::-;1573:83;;;1616:8;1626;1602:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1573:83;1566:90;;;1331:332;;;:::o;554:156:14:-;653:50;676:4;683:2;688;693:5;653:50;;;;;;;;;;;;:22;:50::i;:::-;554:156;;;;:::o;326:24::-;;;;:::o;4014:429:1:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;357:191:14:-;447:40;453:10;465:9;;476:6;447:40;;;;;;;;;;;;:5;:40::i;:::-;497:23;505:9;;516:3;497:7;:23::i;:::-;530:9;;:11;;;;;;;;;:::i;:::-;;;;;;357:191;;:::o;3156:144:1:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;3367:157::-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;2084:103:1:-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;9015:445:1:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:6:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;10746:346:1:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;1743:163:4:-;1850:8;1828:10;:19;1839:7;1828:19;;;;;;;;;;;:30;;;;;;:::i;:::-;;1891:7;1873:26;1877:12;1881:7;1877:3;:12::i;:::-;1873:26;;;;;;:::i;:::-;;;;;;;;1743:163;;:::o;13268:315:1:-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:139::-;3917:6;3912:3;3907;3901:23;3958:1;3949:6;3944:3;3940:16;3933:27;3828:139;;;:::o;3973:102::-;4014:6;4065:2;4061:7;4056:2;4049:5;4045:14;4041:28;4031:38;;3973:102;;;:::o;4081:377::-;4169:3;4197:39;4230:5;4197:39;:::i;:::-;4252:71;4316:6;4311:3;4252:71;:::i;:::-;4245:78;;4332:65;4390:6;4385:3;4378:4;4371:5;4367:16;4332:65;:::i;:::-;4422:29;4444:6;4422:29;:::i;:::-;4417:3;4413:39;4406:46;;4173:285;4081:377;;;;:::o;4464:313::-;4577:4;4615:2;4604:9;4600:18;4592:26;;4664:9;4658:4;4654:20;4650:1;4639:9;4635:17;4628:47;4692:78;4765:4;4756:6;4692:78;:::i;:::-;4684:86;;4464:313;;;;:::o;4783:765::-;4869:6;4877;4885;4893;4942:3;4930:9;4921:7;4917:23;4913:33;4910:120;;;4949:79;;:::i;:::-;4910:120;5069:1;5094:53;5139:7;5130:6;5119:9;5115:22;5094:53;:::i;:::-;5084:63;;5040:117;5196:2;5222:53;5267:7;5258:6;5247:9;5243:22;5222:53;:::i;:::-;5212:63;;5167:118;5324:2;5350:53;5395:7;5386:6;5375:9;5371:22;5350:53;:::i;:::-;5340:63;;5295:118;5452:2;5478:53;5523:7;5514:6;5503:9;5499:22;5478:53;:::i;:::-;5468:63;;5423:118;4783:765;;;;;;;:::o;5554:117::-;5663:1;5660;5653:12;5677:180;5725:77;5722:1;5715:88;5822:4;5819:1;5812:15;5846:4;5843:1;5836:15;5863:281;5946:27;5968:4;5946:27;:::i;:::-;5938:6;5934:40;6076:6;6064:10;6061:22;6040:18;6028:10;6025:34;6022:62;6019:88;;;6087:18;;:::i;:::-;6019:88;6127:10;6123:2;6116:22;5906:238;5863:281;;:::o;6150:129::-;6184:6;6211:20;;:::i;:::-;6201:30;;6240:33;6268:4;6260:6;6240:33;:::i;:::-;6150:129;;;:::o;6285:311::-;6362:4;6452:18;6444:6;6441:30;6438:56;;;6474:18;;:::i;:::-;6438:56;6524:4;6516:6;6512:17;6504:25;;6584:4;6578;6574:15;6566:23;;6285:311;;;:::o;6602:117::-;6711:1;6708;6701:12;6742:710;6838:5;6863:81;6879:64;6936:6;6879:64;:::i;:::-;6863:81;:::i;:::-;6854:90;;6964:5;6993:6;6986:5;6979:21;7027:4;7020:5;7016:16;7009:23;;7080:4;7072:6;7068:17;7060:6;7056:30;7109:3;7101:6;7098:15;7095:122;;;7128:79;;:::i;:::-;7095:122;7243:6;7226:220;7260:6;7255:3;7252:15;7226:220;;;7335:3;7364:37;7397:3;7385:10;7364:37;:::i;:::-;7359:3;7352:50;7431:4;7426:3;7422:14;7415:21;;7302:144;7286:4;7281:3;7277:14;7270:21;;7226:220;;;7230:21;6844:608;;6742:710;;;;;:::o;7475:370::-;7546:5;7595:3;7588:4;7580:6;7576:17;7572:27;7562:122;;7603:79;;:::i;:::-;7562:122;7720:6;7707:20;7745:94;7835:3;7827:6;7820:4;7812:6;7808:17;7745:94;:::i;:::-;7736:103;;7552:293;7475:370;;;;:::o;7851:117::-;7960:1;7957;7950:12;7974:307;8035:4;8125:18;8117:6;8114:30;8111:56;;;8147:18;;:::i;:::-;8111:56;8185:29;8207:6;8185:29;:::i;:::-;8177:37;;8269:4;8263;8259:15;8251:23;;7974:307;;;:::o;8287:148::-;8385:6;8380:3;8375;8362:30;8426:1;8417:6;8412:3;8408:16;8401:27;8287:148;;;:::o;8441:423::-;8518:5;8543:65;8559:48;8600:6;8559:48;:::i;:::-;8543:65;:::i;:::-;8534:74;;8631:6;8624:5;8617:21;8669:4;8662:5;8658:16;8707:3;8698:6;8693:3;8689:16;8686:25;8683:112;;;8714:79;;:::i;:::-;8683:112;8804:54;8851:6;8846:3;8841;8804:54;:::i;:::-;8524:340;8441:423;;;;;:::o;8883:338::-;8938:5;8987:3;8980:4;8972:6;8968:17;8964:27;8954:122;;8995:79;;:::i;:::-;8954:122;9112:6;9099:20;9137:78;9211:3;9203:6;9196:4;9188:6;9184:17;9137:78;:::i;:::-;9128:87;;8944:277;8883:338;;;;:::o;9227:1509::-;9381:6;9389;9397;9405;9413;9462:3;9450:9;9441:7;9437:23;9433:33;9430:120;;;9469:79;;:::i;:::-;9430:120;9589:1;9614:53;9659:7;9650:6;9639:9;9635:22;9614:53;:::i;:::-;9604:63;;9560:117;9716:2;9742:53;9787:7;9778:6;9767:9;9763:22;9742:53;:::i;:::-;9732:63;;9687:118;9872:2;9861:9;9857:18;9844:32;9903:18;9895:6;9892:30;9889:117;;;9925:79;;:::i;:::-;9889:117;10030:78;10100:7;10091:6;10080:9;10076:22;10030:78;:::i;:::-;10020:88;;9815:303;10185:2;10174:9;10170:18;10157:32;10216:18;10208:6;10205:30;10202:117;;;10238:79;;:::i;:::-;10202:117;10343:78;10413:7;10404:6;10393:9;10389:22;10343:78;:::i;:::-;10333:88;;10128:303;10498:3;10487:9;10483:19;10470:33;10530:18;10522:6;10519:30;10516:117;;;10552:79;;:::i;:::-;10516:117;10657:62;10711:7;10702:6;10691:9;10687:22;10657:62;:::i;:::-;10647:72;;10441:288;9227:1509;;;;;;;;:::o;10742:311::-;10819:4;10909:18;10901:6;10898:30;10895:56;;;10931:18;;:::i;:::-;10895:56;10981:4;10973:6;10969:17;10961:25;;11041:4;11035;11031:15;11023:23;;10742:311;;;:::o;11076:710::-;11172:5;11197:81;11213:64;11270:6;11213:64;:::i;:::-;11197:81;:::i;:::-;11188:90;;11298:5;11327:6;11320:5;11313:21;11361:4;11354:5;11350:16;11343:23;;11414:4;11406:6;11402:17;11394:6;11390:30;11443:3;11435:6;11432:15;11429:122;;;11462:79;;:::i;:::-;11429:122;11577:6;11560:220;11594:6;11589:3;11586:15;11560:220;;;11669:3;11698:37;11731:3;11719:10;11698:37;:::i;:::-;11693:3;11686:50;11765:4;11760:3;11756:14;11749:21;;11636:144;11620:4;11615:3;11611:14;11604:21;;11560:220;;;11564:21;11178:608;;11076:710;;;;;:::o;11809:370::-;11880:5;11929:3;11922:4;11914:6;11910:17;11906:27;11896:122;;11937:79;;:::i;:::-;11896:122;12054:6;12041:20;12079:94;12169:3;12161:6;12154:4;12146:6;12142:17;12079:94;:::i;:::-;12070:103;;11886:293;11809:370;;;;:::o;12185:894::-;12303:6;12311;12360:2;12348:9;12339:7;12335:23;12331:32;12328:119;;;12366:79;;:::i;:::-;12328:119;12514:1;12503:9;12499:17;12486:31;12544:18;12536:6;12533:30;12530:117;;;12566:79;;:::i;:::-;12530:117;12671:78;12741:7;12732:6;12721:9;12717:22;12671:78;:::i;:::-;12661:88;;12457:302;12826:2;12815:9;12811:18;12798:32;12857:18;12849:6;12846:30;12843:117;;;12879:79;;:::i;:::-;12843:117;12984:78;13054:7;13045:6;13034:9;13030:22;12984:78;:::i;:::-;12974:88;;12769:303;12185:894;;;;;:::o;13085:114::-;13152:6;13186:5;13180:12;13170:22;;13085:114;;;:::o;13205:184::-;13304:11;13338:6;13333:3;13326:19;13378:4;13373:3;13369:14;13354:29;;13205:184;;;;:::o;13395:132::-;13462:4;13485:3;13477:11;;13515:4;13510:3;13506:14;13498:22;;13395:132;;;:::o;13533:108::-;13610:24;13628:5;13610:24;:::i;:::-;13605:3;13598:37;13533:108;;:::o;13647:179::-;13716:10;13737:46;13779:3;13771:6;13737:46;:::i;:::-;13815:4;13810:3;13806:14;13792:28;;13647:179;;;;:::o;13832:113::-;13902:4;13934;13929:3;13925:14;13917:22;;13832:113;;;:::o;13981:732::-;14100:3;14129:54;14177:5;14129:54;:::i;:::-;14199:86;14278:6;14273:3;14199:86;:::i;:::-;14192:93;;14309:56;14359:5;14309:56;:::i;:::-;14388:7;14419:1;14404:284;14429:6;14426:1;14423:13;14404:284;;;14505:6;14499:13;14532:63;14591:3;14576:13;14532:63;:::i;:::-;14525:70;;14618:60;14671:6;14618:60;:::i;:::-;14608:70;;14464:224;14451:1;14448;14444:9;14439:14;;14404:284;;;14408:14;14704:3;14697:10;;14105:608;;;13981:732;;;;:::o;14719:373::-;14862:4;14900:2;14889:9;14885:18;14877:26;;14949:9;14943:4;14939:20;14935:1;14924:9;14920:17;14913:47;14977:108;15080:4;15071:6;14977:108;:::i;:::-;14969:116;;14719:373;;;;:::o;15098:308::-;15160:4;15250:18;15242:6;15239:30;15236:56;;;15272:18;;:::i;:::-;15236:56;15310:29;15332:6;15310:29;:::i;:::-;15302:37;;15394:4;15388;15384:15;15376:23;;15098:308;;;:::o;15412:425::-;15490:5;15515:66;15531:49;15573:6;15531:49;:::i;:::-;15515:66;:::i;:::-;15506:75;;15604:6;15597:5;15590:21;15642:4;15635:5;15631:16;15680:3;15671:6;15666:3;15662:16;15659:25;15656:112;;;15687:79;;:::i;:::-;15656:112;15777:54;15824:6;15819:3;15814;15777:54;:::i;:::-;15496:341;15412:425;;;;;:::o;15857:340::-;15913:5;15962:3;15955:4;15947:6;15943:17;15939:27;15929:122;;15970:79;;:::i;:::-;15929:122;16087:6;16074:20;16112:79;16187:3;16179:6;16172:4;16164:6;16160:17;16112:79;:::i;:::-;16103:88;;15919:278;15857:340;;;;:::o;16203:654::-;16281:6;16289;16338:2;16326:9;16317:7;16313:23;16309:32;16306:119;;;16344:79;;:::i;:::-;16306:119;16464:1;16489:53;16534:7;16525:6;16514:9;16510:22;16489:53;:::i;:::-;16479:63;;16435:117;16619:2;16608:9;16604:18;16591:32;16650:18;16642:6;16639:30;16636:117;;;16672:79;;:::i;:::-;16636:117;16777:63;16832:7;16823:6;16812:9;16808:22;16777:63;:::i;:::-;16767:73;;16562:288;16203:654;;;;;:::o;16863:116::-;16933:21;16948:5;16933:21;:::i;:::-;16926:5;16923:32;16913:60;;16969:1;16966;16959:12;16913:60;16863:116;:::o;16985:133::-;17028:5;17066:6;17053:20;17044:29;;17082:30;17106:5;17082:30;:::i;:::-;16985:133;;;;:::o;17124:468::-;17189:6;17197;17246:2;17234:9;17225:7;17221:23;17217:32;17214:119;;;17252:79;;:::i;:::-;17214:119;17372:1;17397:53;17442:7;17433:6;17422:9;17418:22;17397:53;:::i;:::-;17387:63;;17343:117;17499:2;17525:50;17567:7;17558:6;17547:9;17543:22;17525:50;:::i;:::-;17515:60;;17470:115;17124:468;;;;;:::o;17598:474::-;17666:6;17674;17723:2;17711:9;17702:7;17698:23;17694:32;17691:119;;;17729:79;;:::i;:::-;17691:119;17849:1;17874:53;17919:7;17910:6;17899:9;17895:22;17874:53;:::i;:::-;17864:63;;17820:117;17976:2;18002:53;18047:7;18038:6;18027:9;18023:22;18002:53;:::i;:::-;17992:63;;17947:118;17598:474;;;;;:::o;18078:1089::-;18182:6;18190;18198;18206;18214;18263:3;18251:9;18242:7;18238:23;18234:33;18231:120;;;18270:79;;:::i;:::-;18231:120;18390:1;18415:53;18460:7;18451:6;18440:9;18436:22;18415:53;:::i;:::-;18405:63;;18361:117;18517:2;18543:53;18588:7;18579:6;18568:9;18564:22;18543:53;:::i;:::-;18533:63;;18488:118;18645:2;18671:53;18716:7;18707:6;18696:9;18692:22;18671:53;:::i;:::-;18661:63;;18616:118;18773:2;18799:53;18844:7;18835:6;18824:9;18820:22;18799:53;:::i;:::-;18789:63;;18744:118;18929:3;18918:9;18914:19;18901:33;18961:18;18953:6;18950:30;18947:117;;;18983:79;;:::i;:::-;18947:117;19088:62;19142:7;19133:6;19122:9;19118:22;19088:62;:::i;:::-;19078:72;;18872:288;18078:1089;;;;;;;;:::o;19173:180::-;19221:77;19218:1;19211:88;19318:4;19315:1;19308:15;19342:4;19339:1;19332:15;19359:320;19403:6;19440:1;19434:4;19430:12;19420:22;;19487:1;19481:4;19477:12;19508:18;19498:81;;19564:4;19556:6;19552:17;19542:27;;19498:81;19626:2;19618:6;19615:14;19595:18;19592:38;19589:84;;19645:18;;:::i;:::-;19589:84;19410:269;19359:320;;;:::o;19685:148::-;19787:11;19824:3;19809:18;;19685:148;;;;:::o;19839:141::-;19888:4;19911:3;19903:11;;19934:3;19931:1;19924:14;19968:4;19965:1;19955:18;19947:26;;19839:141;;;:::o;20010:874::-;20113:3;20150:5;20144:12;20179:36;20205:9;20179:36;:::i;:::-;20231:89;20313:6;20308:3;20231:89;:::i;:::-;20224:96;;20351:1;20340:9;20336:17;20367:1;20362:166;;;;20542:1;20537:341;;;;20329:549;;20362:166;20446:4;20442:9;20431;20427:25;20422:3;20415:38;20508:6;20501:14;20494:22;20486:6;20482:35;20477:3;20473:45;20466:52;;20362:166;;20537:341;20604:38;20636:5;20604:38;:::i;:::-;20664:1;20678:154;20692:6;20689:1;20686:13;20678:154;;;20766:7;20760:14;20756:1;20751:3;20747:11;20740:35;20816:1;20807:7;20803:15;20792:26;;20714:4;20711:1;20707:12;20702:17;;20678:154;;;20861:6;20856:3;20852:16;20845:23;;20544:334;;20329:549;;20117:767;;20010:874;;;;:::o;20890:390::-;20996:3;21024:39;21057:5;21024:39;:::i;:::-;21079:89;21161:6;21156:3;21079:89;:::i;:::-;21072:96;;21177:65;21235:6;21230:3;21223:4;21216:5;21212:16;21177:65;:::i;:::-;21267:6;21262:3;21258:16;21251:23;;21000:280;20890:390;;;;:::o;21286:429::-;21463:3;21485:92;21573:3;21564:6;21485:92;:::i;:::-;21478:99;;21594:95;21685:3;21676:6;21594:95;:::i;:::-;21587:102;;21706:3;21699:10;;21286:429;;;;;:::o;21721:118::-;21808:24;21826:5;21808:24;:::i;:::-;21803:3;21796:37;21721:118;;:::o;21845:332::-;21966:4;22004:2;21993:9;21989:18;21981:26;;22017:71;22085:1;22074:9;22070:17;22061:6;22017:71;:::i;:::-;22098:72;22166:2;22155:9;22151:18;22142:6;22098:72;:::i;:::-;21845:332;;;;;:::o;22183:::-;22304:4;22342:2;22331:9;22327:18;22319:26;;22355:71;22423:1;22412:9;22408:17;22399:6;22355:71;:::i;:::-;22436:72;22504:2;22493:9;22489:18;22480:6;22436:72;:::i;:::-;22183:332;;;;;:::o;22521:180::-;22569:77;22566:1;22559:88;22666:4;22663:1;22656:15;22690:4;22687:1;22680:15;22707:180;22755:77;22752:1;22745:88;22852:4;22849:1;22842:15;22876:4;22873:1;22866:15;22893:233;22932:3;22955:24;22973:5;22955:24;:::i;:::-;22946:33;;23001:66;22994:5;22991:77;22988:103;;23071:18;;:::i;:::-;22988:103;23118:1;23111:5;23107:13;23100:20;;22893:233;;;:::o;23132:222::-;23225:4;23263:2;23252:9;23248:18;23240:26;;23276:71;23344:1;23333:9;23329:17;23320:6;23276:71;:::i;:::-;23132:222;;;;:::o;23360:93::-;23397:6;23444:2;23439;23432:5;23428:14;23424:23;23414:33;;23360:93;;;:::o;23459:107::-;23503:8;23553:5;23547:4;23543:16;23522:37;;23459:107;;;;:::o;23572:393::-;23641:6;23691:1;23679:10;23675:18;23714:97;23744:66;23733:9;23714:97;:::i;:::-;23832:39;23862:8;23851:9;23832:39;:::i;:::-;23820:51;;23904:4;23900:9;23893:5;23889:21;23880:30;;23953:4;23943:8;23939:19;23932:5;23929:30;23919:40;;23648:317;;23572:393;;;;;:::o;23971:60::-;23999:3;24020:5;24013:12;;23971:60;;;:::o;24037:142::-;24087:9;24120:53;24138:34;24147:24;24165:5;24147:24;:::i;:::-;24138:34;:::i;:::-;24120:53;:::i;:::-;24107:66;;24037:142;;;:::o;24185:75::-;24228:3;24249:5;24242:12;;24185:75;;;:::o;24266:269::-;24376:39;24407:7;24376:39;:::i;:::-;24437:91;24486:41;24510:16;24486:41;:::i;:::-;24478:6;24471:4;24465:11;24437:91;:::i;:::-;24431:4;24424:105;24342:193;24266:269;;;:::o;24541:73::-;24586:3;24541:73;:::o;24620:189::-;24697:32;;:::i;:::-;24738:65;24796:6;24788;24782:4;24738:65;:::i;:::-;24673:136;24620:189;;:::o;24815:186::-;24875:120;24892:3;24885:5;24882:14;24875:120;;;24946:39;24983:1;24976:5;24946:39;:::i;:::-;24919:1;24912:5;24908:13;24899:22;;24875:120;;;24815:186;;:::o;25007:543::-;25108:2;25103:3;25100:11;25097:446;;;25142:38;25174:5;25142:38;:::i;:::-;25226:29;25244:10;25226:29;:::i;:::-;25216:8;25212:44;25409:2;25397:10;25394:18;25391:49;;;25430:8;25415:23;;25391:49;25453:80;25509:22;25527:3;25509:22;:::i;:::-;25499:8;25495:37;25482:11;25453:80;:::i;:::-;25112:431;;25097:446;25007:543;;;:::o;25556:117::-;25610:8;25660:5;25654:4;25650:16;25629:37;;25556:117;;;;:::o;25679:169::-;25723:6;25756:51;25804:1;25800:6;25792:5;25789:1;25785:13;25756:51;:::i;:::-;25752:56;25837:4;25831;25827:15;25817:25;;25730:118;25679:169;;;;:::o;25853:295::-;25929:4;26075:29;26100:3;26094:4;26075:29;:::i;:::-;26067:37;;26137:3;26134:1;26130:11;26124:4;26121:21;26113:29;;25853:295;;;;:::o;26153:1395::-;26270:37;26303:3;26270:37;:::i;:::-;26372:18;26364:6;26361:30;26358:56;;;26394:18;;:::i;:::-;26358:56;26438:38;26470:4;26464:11;26438:38;:::i;:::-;26523:67;26583:6;26575;26569:4;26523:67;:::i;:::-;26617:1;26641:4;26628:17;;26673:2;26665:6;26662:14;26690:1;26685:618;;;;27347:1;27364:6;27361:77;;;27413:9;27408:3;27404:19;27398:26;27389:35;;27361:77;27464:67;27524:6;27517:5;27464:67;:::i;:::-;27458:4;27451:81;27320:222;26655:887;;26685:618;26737:4;26733:9;26725:6;26721:22;26771:37;26803:4;26771:37;:::i;:::-;26830:1;26844:208;26858:7;26855:1;26852:14;26844:208;;;26937:9;26932:3;26928:19;26922:26;26914:6;26907:42;26988:1;26980:6;26976:14;26966:24;;27035:2;27024:9;27020:18;27007:31;;26881:4;26878:1;26874:12;26869:17;;26844:208;;;27080:6;27071:7;27068:19;27065:179;;;27138:9;27133:3;27129:19;27123:26;27181:48;27223:4;27215:6;27211:17;27200:9;27181:48;:::i;:::-;27173:6;27166:64;27088:156;27065:179;27290:1;27286;27278:6;27274:14;27270:22;27264:4;27257:36;26692:611;;;26655:887;;26245:1303;;;26153:1395;;:::o;27554:553::-;27731:4;27769:3;27758:9;27754:19;27746:27;;27783:71;27851:1;27840:9;27836:17;27827:6;27783:71;:::i;:::-;27864:72;27932:2;27921:9;27917:18;27908:6;27864:72;:::i;:::-;27946;28014:2;28003:9;27999:18;27990:6;27946:72;:::i;:::-;28028;28096:2;28085:9;28081:18;28072:6;28028:72;:::i;:::-;27554:553;;;;;;;:::o;28113:191::-;28153:3;28172:20;28190:1;28172:20;:::i;:::-;28167:25;;28206:20;28224:1;28206:20;:::i;:::-;28201:25;;28249:1;28246;28242:9;28235:16;;28270:3;28267:1;28264:10;28261:36;;;28277:18;;:::i;:::-;28261:36;28113:191;;;;:::o;28310:634::-;28531:4;28569:2;28558:9;28554:18;28546:26;;28618:9;28612:4;28608:20;28604:1;28593:9;28589:17;28582:47;28646:108;28749:4;28740:6;28646:108;:::i;:::-;28638:116;;28801:9;28795:4;28791:20;28786:2;28775:9;28771:18;28764:48;28829:108;28932:4;28923:6;28829:108;:::i;:::-;28821:116;;28310:634;;;;;:::o;28950:98::-;29001:6;29035:5;29029:12;29019:22;;28950:98;;;:::o;29054:168::-;29137:11;29171:6;29166:3;29159:19;29211:4;29206:3;29202:14;29187:29;;29054:168;;;;:::o;29228:373::-;29314:3;29342:38;29374:5;29342:38;:::i;:::-;29396:70;29459:6;29454:3;29396:70;:::i;:::-;29389:77;;29475:65;29533:6;29528:3;29521:4;29514:5;29510:16;29475:65;:::i;:::-;29565:29;29587:6;29565:29;:::i;:::-;29560:3;29556:39;29549:46;;29318:283;29228:373;;;;:::o;29607:751::-;29830:4;29868:3;29857:9;29853:19;29845:27;;29882:71;29950:1;29939:9;29935:17;29926:6;29882:71;:::i;:::-;29963:72;30031:2;30020:9;30016:18;30007:6;29963:72;:::i;:::-;30045;30113:2;30102:9;30098:18;30089:6;30045:72;:::i;:::-;30127;30195:2;30184:9;30180:18;30171:6;30127:72;:::i;:::-;30247:9;30241:4;30237:20;30231:3;30220:9;30216:19;30209:49;30275:76;30346:4;30337:6;30275:76;:::i;:::-;30267:84;;29607:751;;;;;;;;:::o;30364:141::-;30420:5;30451:6;30445:13;30436:22;;30467:32;30493:5;30467:32;:::i;:::-;30364:141;;;;:::o;30511:349::-;30580:6;30629:2;30617:9;30608:7;30604:23;30600:32;30597:119;;;30635:79;;:::i;:::-;30597:119;30755:1;30780:63;30835:7;30826:6;30815:9;30811:22;30780:63;:::i;:::-;30770:73;;30726:127;30511:349;;;;:::o;30866:1053::-;31189:4;31227:3;31216:9;31212:19;31204:27;;31241:71;31309:1;31298:9;31294:17;31285:6;31241:71;:::i;:::-;31322:72;31390:2;31379:9;31375:18;31366:6;31322:72;:::i;:::-;31441:9;31435:4;31431:20;31426:2;31415:9;31411:18;31404:48;31469:108;31572:4;31563:6;31469:108;:::i;:::-;31461:116;;31624:9;31618:4;31614:20;31609:2;31598:9;31594:18;31587:48;31652:108;31755:4;31746:6;31652:108;:::i;:::-;31644:116;;31808:9;31802:4;31798:20;31792:3;31781:9;31777:19;31770:49;31836:76;31907:4;31898:6;31836:76;:::i;:::-;31828:84;;30866:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1933800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"currentID()": "2514",
								"isApprovedForAll(address,address)": "infinite",
								"mint(uint256,string)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "786",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 712,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 249,
									"end": 712,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 712,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 476,
									"end": 504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 293,
									"end": 320,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 293,
									"end": 320,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 320,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 293,
									"end": 320,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 249,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 249,
									"end": 712,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 249,
									"end": 712,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 249,
									"end": 712,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 249,
									"end": 712,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 712,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 249,
									"end": 712,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 712,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 712,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 249,
									"end": 712,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 712,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c9bc8ffc77b814d6da0adac9cabc17ac141f86175dde5a6265fd86ec23c04eb64736f6c634300081a0033",
									".code": [
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "2EB2C2D6"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "2EB2C2D6"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "4E1273F4"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "77097FC8"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "F242432A"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "FDD58E"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "E89341C"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "FEBDD49"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "1C75CFB4"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 712,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1331,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1331,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1331,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 554,
											"end": 710,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 554,
											"end": 710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 554,
											"end": 710,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 710,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 554,
											"end": 710,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 554,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 554,
											"end": 710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 554,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 554,
											"end": 710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 326,
											"end": 350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 326,
											"end": 350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 357,
											"end": 548,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 548,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 357,
											"end": 548,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 548,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 357,
											"end": 548,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 357,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 357,
											"end": 548,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 357,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 357,
											"end": 548,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1424,
											"end": 1446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1459,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1467,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1424,
											"end": 1468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1424,
											"end": 1468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1648,
											"end": 1655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1624,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1626,
											"end": 1634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1602,
											"end": 1635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1656,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 554,
											"end": 710,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 554,
											"end": 710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 653,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 676,
											"end": 680,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 683,
											"end": 685,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 688,
											"end": 690,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 693,
											"end": 698,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 653,
											"end": 703,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 703,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 653,
											"end": 703,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 653,
											"end": 703,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 703,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 653,
											"end": 703,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 703,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 653,
											"end": 703,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 653,
											"end": 703,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 703,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 653,
											"end": 703,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 653,
											"end": 703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 653,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 653,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 653,
											"end": 703,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 653,
											"end": 703,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 554,
											"end": 710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 548,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 357,
											"end": 548,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 447,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 453,
											"end": 463,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 465,
											"end": 474,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 465,
											"end": 474,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 476,
											"end": 482,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 447,
											"end": 487,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 487,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 447,
											"end": 487,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 447,
											"end": 487,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 487,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 447,
											"end": 487,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 487,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 447,
											"end": 487,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 447,
											"end": 487,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 487,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 447,
											"end": 487,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 447,
											"end": 487,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 447,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 447,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 447,
											"end": 487,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 447,
											"end": 487,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 497,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 505,
											"end": 514,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 505,
											"end": 514,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 516,
											"end": 519,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 497,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 497,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 497,
											"end": 520,
											"name": "tag",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 497,
											"end": 520,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 530,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 530,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 530,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 530,
											"end": 541,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 530,
											"end": 541,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 357,
											"end": 548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1906,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1743,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1858,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1838,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1828,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B"
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1877,
											"end": 1889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1873,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3917,
											"end": 3923,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3912,
											"end": 3915,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3907,
											"end": 3910,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3901,
											"end": 3924,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 3958,
											"end": 3959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3944,
											"end": 3947,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3933,
											"end": 3960,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3967,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4014,
											"end": 4020,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4067,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4061,
											"end": 4068,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4056,
											"end": 4058,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4045,
											"end": 4059,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4041,
											"end": 4069,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4031,
											"end": 4069,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4031,
											"end": 4069,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 4075,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 4075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4169,
											"end": 4172,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 4197,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 4197,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 4316,
											"end": 4322,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 4252,
											"end": 4323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 4252,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4245,
											"end": 4323,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4245,
											"end": 4323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 4390,
											"end": 4396,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4388,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4371,
											"end": 4376,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 4332,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 4332,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 4444,
											"end": 4450,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 4422,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 4422,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4417,
											"end": 4420,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4413,
											"end": 4452,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4173,
											"end": 4458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4081,
											"end": 4458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4081,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4577,
											"end": 4581,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4617,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4592,
											"end": 4618,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4592,
											"end": 4618,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4654,
											"end": 4674,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4648,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4628,
											"end": 4675,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4756,
											"end": 4762,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 4692,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 4692,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4684,
											"end": 4770,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4684,
											"end": 4770,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5548,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 4783,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 4883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4885,
											"end": 4891,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4899,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4942,
											"end": 4945,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4930,
											"end": 4939,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4928,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4940,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4913,
											"end": 4946,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4910,
											"end": 5030,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4910,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 4910,
											"end": 5030,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4949,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 4949,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 4949,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4949,
											"end": 5028,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 4949,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4910,
											"end": 5030,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 4910,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 5139,
											"end": 5146,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5130,
											"end": 5136,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5119,
											"end": 5128,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5115,
											"end": 5137,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5094,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 5094,
											"end": 5147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5094,
											"end": 5147,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 5094,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5084,
											"end": 5147,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5084,
											"end": 5147,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5040,
											"end": 5157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 5267,
											"end": 5274,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5258,
											"end": 5264,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5247,
											"end": 5256,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5243,
											"end": 5265,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5222,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 5222,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5222,
											"end": 5275,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 5222,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5212,
											"end": 5275,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5212,
											"end": 5275,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5167,
											"end": 5285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5324,
											"end": 5326,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5350,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5386,
											"end": 5392,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5375,
											"end": 5384,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5371,
											"end": 5393,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5350,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 5350,
											"end": 5403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5350,
											"end": 5403,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 5350,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5340,
											"end": 5403,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5340,
											"end": 5403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 5413,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5452,
											"end": 5454,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5478,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 5523,
											"end": 5530,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5514,
											"end": 5520,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5503,
											"end": 5512,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5499,
											"end": 5521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5478,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 5478,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5478,
											"end": 5531,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 5478,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5468,
											"end": 5531,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5468,
											"end": 5531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5423,
											"end": 5541,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5548,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5548,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5548,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5548,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5548,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4783,
											"end": 5548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5554,
											"end": 5671,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 5554,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5661,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5677,
											"end": 5857,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 5677,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5725,
											"end": 5802,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5722,
											"end": 5723,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5803,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 5819,
											"end": 5820,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5812,
											"end": 5827,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5846,
											"end": 5850,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5843,
											"end": 5844,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5863,
											"end": 6144,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 5863,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5946,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5946,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 5946,
											"end": 5973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5946,
											"end": 5973,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 5946,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5938,
											"end": 5944,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5934,
											"end": 5974,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6064,
											"end": 6074,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6061,
											"end": 6083,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6028,
											"end": 6038,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6025,
											"end": 6059,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6022,
											"end": 6084,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 6019,
											"end": 6107,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6019,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 6019,
											"end": 6107,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 6087,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6019,
											"end": 6107,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 6019,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6127,
											"end": 6137,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6123,
											"end": 6125,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6116,
											"end": 6138,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5906,
											"end": 6144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5863,
											"end": 6144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5863,
											"end": 6144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5863,
											"end": 6144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6150,
											"end": 6279,
											"name": "tag",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 6150,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 6211,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 6211,
											"end": 6231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6211,
											"end": 6231,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 6211,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6201,
											"end": 6231,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6201,
											"end": 6231,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6240,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 6268,
											"end": 6272,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6260,
											"end": 6266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6240,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 6240,
											"end": 6273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6240,
											"end": 6273,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 6240,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6150,
											"end": 6279,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6150,
											"end": 6279,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6150,
											"end": 6279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6150,
											"end": 6279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6285,
											"end": 6596,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 6285,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6362,
											"end": 6366,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6441,
											"end": 6471,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6494,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 6438,
											"end": 6494,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6474,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 6474,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 6474,
											"end": 6492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6474,
											"end": 6492,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 6474,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6438,
											"end": 6494,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 6438,
											"end": 6494,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6516,
											"end": 6522,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6504,
											"end": 6529,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6504,
											"end": 6529,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6584,
											"end": 6588,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6578,
											"end": 6582,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6574,
											"end": 6589,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6566,
											"end": 6589,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6566,
											"end": 6589,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6285,
											"end": 6596,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6285,
											"end": 6596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6285,
											"end": 6596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6285,
											"end": 6596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6602,
											"end": 6719,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 6602,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6709,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6701,
											"end": 6713,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6742,
											"end": 7452,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 6742,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 6879,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 6936,
											"end": 6942,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6879,
											"end": 6943,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 6879,
											"end": 6943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6879,
											"end": 6943,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 6879,
											"end": 6943,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6863,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 6863,
											"end": 6944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6863,
											"end": 6944,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 6863,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6854,
											"end": 6944,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6854,
											"end": 6944,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6964,
											"end": 6969,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6993,
											"end": 6999,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6986,
											"end": 6991,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6979,
											"end": 7000,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7027,
											"end": 7031,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 7025,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7016,
											"end": 7032,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7009,
											"end": 7032,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7009,
											"end": 7032,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7080,
											"end": 7084,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7072,
											"end": 7078,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7068,
											"end": 7085,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 7060,
											"end": 7066,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7056,
											"end": 7086,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7109,
											"end": 7112,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7101,
											"end": 7107,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7098,
											"end": 7113,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7095,
											"end": 7217,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7095,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 7095,
											"end": 7217,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7128,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 7128,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 7128,
											"end": 7207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7128,
											"end": 7207,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 7128,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7095,
											"end": 7217,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 7095,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7243,
											"end": 7249,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7226,
											"end": 7446,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 7226,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7260,
											"end": 7266,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7255,
											"end": 7258,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7252,
											"end": 7267,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7226,
											"end": 7446,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7226,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 7226,
											"end": 7446,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7335,
											"end": 7338,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7364,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 7397,
											"end": 7400,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7385,
											"end": 7395,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7364,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 7364,
											"end": 7401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7364,
											"end": 7401,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 7364,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7359,
											"end": 7362,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7402,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7426,
											"end": 7429,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7422,
											"end": 7436,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7415,
											"end": 7436,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7415,
											"end": 7436,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7302,
											"end": 7446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7286,
											"end": 7290,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7281,
											"end": 7284,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7277,
											"end": 7291,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7270,
											"end": 7291,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7270,
											"end": 7291,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7226,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 7226,
											"end": 7446,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7226,
											"end": 7446,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 7226,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6844,
											"end": 7452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6844,
											"end": 7452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6742,
											"end": 7452,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6742,
											"end": 7452,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6742,
											"end": 7452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6742,
											"end": 7452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6742,
											"end": 7452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6742,
											"end": 7452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7475,
											"end": 7845,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 7475,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7546,
											"end": 7551,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7598,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7588,
											"end": 7592,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7580,
											"end": 7586,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7576,
											"end": 7593,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7572,
											"end": 7599,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7562,
											"end": 7684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 7562,
											"end": 7684,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7603,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 7603,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 7603,
											"end": 7682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7603,
											"end": 7682,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 7603,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7562,
											"end": 7684,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 7562,
											"end": 7684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7707,
											"end": 7727,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7745,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 7835,
											"end": 7838,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7820,
											"end": 7824,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7808,
											"end": 7825,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7745,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 7745,
											"end": 7839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7745,
											"end": 7839,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 7745,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7736,
											"end": 7839,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7736,
											"end": 7839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7845,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7475,
											"end": 7845,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7475,
											"end": 7845,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7475,
											"end": 7845,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7475,
											"end": 7845,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7475,
											"end": 7845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7851,
											"end": 7968,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 7851,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7960,
											"end": 7961,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7958,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7950,
											"end": 7962,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7974,
											"end": 8281,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 7974,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8035,
											"end": 8039,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8143,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8117,
											"end": 8123,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8114,
											"end": 8144,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8111,
											"end": 8167,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8111,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 8111,
											"end": 8167,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 8147,
											"end": 8165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8111,
											"end": 8167,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 8111,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 8207,
											"end": 8213,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 8185,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 8185,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8177,
											"end": 8214,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8177,
											"end": 8214,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8269,
											"end": 8273,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8263,
											"end": 8267,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8259,
											"end": 8274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8251,
											"end": 8274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8251,
											"end": 8274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7974,
											"end": 8281,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7974,
											"end": 8281,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7974,
											"end": 8281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7974,
											"end": 8281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8287,
											"end": 8435,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 8287,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8385,
											"end": 8391,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8380,
											"end": 8383,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8375,
											"end": 8378,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8362,
											"end": 8392,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 8426,
											"end": 8427,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8423,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8412,
											"end": 8415,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8408,
											"end": 8424,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8287,
											"end": 8435,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8287,
											"end": 8435,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8287,
											"end": 8435,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8287,
											"end": 8435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8864,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 8441,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8518,
											"end": 8523,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8543,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 8559,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 8600,
											"end": 8606,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8559,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 8559,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8559,
											"end": 8607,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 8559,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 8543,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8608,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 8543,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8534,
											"end": 8608,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8534,
											"end": 8608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8631,
											"end": 8637,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8624,
											"end": 8629,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8617,
											"end": 8638,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8669,
											"end": 8673,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8662,
											"end": 8667,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8658,
											"end": 8674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8707,
											"end": 8710,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8698,
											"end": 8704,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8693,
											"end": 8696,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8689,
											"end": 8705,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8686,
											"end": 8711,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8683,
											"end": 8795,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8683,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 8683,
											"end": 8795,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8714,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 8714,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 8714,
											"end": 8793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8714,
											"end": 8793,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 8714,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8683,
											"end": 8795,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 8683,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8804,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8846,
											"end": 8849,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8841,
											"end": 8844,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8804,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 8804,
											"end": 8858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8804,
											"end": 8858,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 8804,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8524,
											"end": 8864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8864,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8864,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8441,
											"end": 8864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8883,
											"end": 9221,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 8883,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8938,
											"end": 8943,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 8990,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8980,
											"end": 8984,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8972,
											"end": 8978,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8968,
											"end": 8985,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8964,
											"end": 8991,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 8954,
											"end": 9076,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 8995,
											"end": 9074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9076,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 8954,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9099,
											"end": 9119,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9137,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 9211,
											"end": 9214,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9203,
											"end": 9209,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9196,
											"end": 9200,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9184,
											"end": 9201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9137,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 9137,
											"end": 9215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9137,
											"end": 9215,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 9137,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9215,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9128,
											"end": 9215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8944,
											"end": 9221,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8883,
											"end": 9221,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8883,
											"end": 9221,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8883,
											"end": 9221,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8883,
											"end": 9221,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8883,
											"end": 9221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 10736,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 9227,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9381,
											"end": 9387,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9389,
											"end": 9395,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9397,
											"end": 9403,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9411,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9413,
											"end": 9419,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9462,
											"end": 9465,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 9450,
											"end": 9459,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9441,
											"end": 9448,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9437,
											"end": 9460,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9433,
											"end": 9466,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9430,
											"end": 9550,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9430,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 9430,
											"end": 9550,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9469,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 9469,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 9469,
											"end": 9548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9469,
											"end": 9548,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 9469,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9430,
											"end": 9550,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 9430,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9589,
											"end": 9590,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9614,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 9659,
											"end": 9666,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9650,
											"end": 9656,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9639,
											"end": 9648,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 9635,
											"end": 9657,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9614,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 9614,
											"end": 9667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9614,
											"end": 9667,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 9614,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9667,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 9604,
											"end": 9667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9560,
											"end": 9677,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9716,
											"end": 9718,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9742,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 9787,
											"end": 9794,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9778,
											"end": 9784,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9767,
											"end": 9776,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 9763,
											"end": 9785,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9742,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 9742,
											"end": 9795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9742,
											"end": 9795,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 9742,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9732,
											"end": 9795,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9732,
											"end": 9795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9687,
											"end": 9805,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9872,
											"end": 9874,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9861,
											"end": 9870,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9857,
											"end": 9875,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9895,
											"end": 9901,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9892,
											"end": 9922,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9889,
											"end": 10006,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9889,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 9889,
											"end": 10006,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9925,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 9925,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 9925,
											"end": 10004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9925,
											"end": 10004,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 9925,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9889,
											"end": 10006,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 9889,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10030,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 10100,
											"end": 10107,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10091,
											"end": 10097,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10080,
											"end": 10089,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 10098,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10030,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 10030,
											"end": 10108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10030,
											"end": 10108,
											"name": "tag",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 10030,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10020,
											"end": 10108,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10020,
											"end": 10108,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9815,
											"end": 10118,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10185,
											"end": 10187,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10174,
											"end": 10183,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10170,
											"end": 10188,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10157,
											"end": 10189,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10208,
											"end": 10214,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10205,
											"end": 10235,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10202,
											"end": 10319,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10202,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 10202,
											"end": 10319,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10238,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 10238,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 10238,
											"end": 10317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10238,
											"end": 10317,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 10238,
											"end": 10317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10202,
											"end": 10319,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 10202,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10343,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 10413,
											"end": 10420,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10404,
											"end": 10410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10393,
											"end": 10402,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 10389,
											"end": 10411,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10343,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 10343,
											"end": 10421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10343,
											"end": 10421,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 10343,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10333,
											"end": 10421,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10333,
											"end": 10421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10128,
											"end": 10431,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10498,
											"end": 10501,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10487,
											"end": 10496,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10483,
											"end": 10502,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10470,
											"end": 10503,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10522,
											"end": 10528,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10519,
											"end": 10549,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10516,
											"end": 10633,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10516,
											"end": 10633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 10516,
											"end": 10633,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 10552,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 10552,
											"end": 10631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10552,
											"end": 10631,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 10552,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10516,
											"end": 10633,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 10516,
											"end": 10633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10657,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 10711,
											"end": 10718,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10702,
											"end": 10708,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10691,
											"end": 10700,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 10687,
											"end": 10709,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10657,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 10657,
											"end": 10719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10657,
											"end": 10719,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 10657,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10647,
											"end": 10719,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10647,
											"end": 10719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10441,
											"end": 10729,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 10736,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 10736,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 10736,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 10736,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 10736,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 10736,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 10736,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 10736,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9227,
											"end": 10736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10742,
											"end": 11053,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 10742,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10819,
											"end": 10823,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10909,
											"end": 10927,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10901,
											"end": 10907,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10898,
											"end": 10928,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10895,
											"end": 10951,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10895,
											"end": 10951,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 10895,
											"end": 10951,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10931,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 10931,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 10931,
											"end": 10949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10931,
											"end": 10949,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 10931,
											"end": 10949,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10895,
											"end": 10951,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 10895,
											"end": 10951,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10981,
											"end": 10985,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10973,
											"end": 10979,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10969,
											"end": 10986,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 10961,
											"end": 10986,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10961,
											"end": 10986,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11041,
											"end": 11045,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11035,
											"end": 11039,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11031,
											"end": 11046,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11023,
											"end": 11046,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11023,
											"end": 11046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10742,
											"end": 11053,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10742,
											"end": 11053,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10742,
											"end": 11053,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10742,
											"end": 11053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11076,
											"end": 11786,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 11076,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11172,
											"end": 11177,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 11213,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 11270,
											"end": 11276,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11213,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 11213,
											"end": 11277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11213,
											"end": 11277,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 11213,
											"end": 11277,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 11197,
											"end": 11278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11188,
											"end": 11278,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11188,
											"end": 11278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11298,
											"end": 11303,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11327,
											"end": 11333,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11320,
											"end": 11325,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11313,
											"end": 11334,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11361,
											"end": 11365,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11354,
											"end": 11359,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11350,
											"end": 11366,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11343,
											"end": 11366,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11343,
											"end": 11366,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11414,
											"end": 11418,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11406,
											"end": 11412,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11402,
											"end": 11419,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 11394,
											"end": 11400,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11390,
											"end": 11420,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11443,
											"end": 11446,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11435,
											"end": 11441,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11432,
											"end": 11447,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11551,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11551,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 11429,
											"end": 11551,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11462,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 11462,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 11462,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11462,
											"end": 11541,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 11462,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11551,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 11429,
											"end": 11551,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11577,
											"end": 11583,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11560,
											"end": 11780,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 11560,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11594,
											"end": 11600,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11589,
											"end": 11592,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11586,
											"end": 11601,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 11560,
											"end": 11780,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11560,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 11560,
											"end": 11780,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11669,
											"end": 11672,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11698,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 11731,
											"end": 11734,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11719,
											"end": 11729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11698,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 11698,
											"end": 11735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11698,
											"end": 11735,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 11698,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11693,
											"end": 11696,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11686,
											"end": 11736,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11765,
											"end": 11769,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11760,
											"end": 11763,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11756,
											"end": 11770,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11749,
											"end": 11770,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11749,
											"end": 11770,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11636,
											"end": 11780,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11620,
											"end": 11624,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11618,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11611,
											"end": 11625,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11604,
											"end": 11625,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11604,
											"end": 11625,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11560,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 11560,
											"end": 11780,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11560,
											"end": 11780,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 11560,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11564,
											"end": 11585,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11178,
											"end": 11786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11178,
											"end": 11786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11076,
											"end": 11786,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11076,
											"end": 11786,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11076,
											"end": 11786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11076,
											"end": 11786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11076,
											"end": 11786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11076,
											"end": 11786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11809,
											"end": 12179,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 11809,
											"end": 12179,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11880,
											"end": 11885,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11929,
											"end": 11932,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11922,
											"end": 11926,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 11914,
											"end": 11920,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11910,
											"end": 11927,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11906,
											"end": 11933,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 11896,
											"end": 12018,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11937,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 11937,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 11937,
											"end": 12016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11937,
											"end": 12016,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 11937,
											"end": 12016,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 12018,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 11896,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12054,
											"end": 12060,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12041,
											"end": 12061,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 12079,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 12169,
											"end": 12172,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12161,
											"end": 12167,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12154,
											"end": 12158,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12146,
											"end": 12152,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12142,
											"end": 12159,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12079,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 12079,
											"end": 12173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12079,
											"end": 12173,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 12079,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12070,
											"end": 12173,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12070,
											"end": 12173,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11886,
											"end": 12179,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11809,
											"end": 12179,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11809,
											"end": 12179,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11809,
											"end": 12179,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11809,
											"end": 12179,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11809,
											"end": 12179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 13079,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 12185,
											"end": 13079,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12303,
											"end": 12309,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12311,
											"end": 12317,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12360,
											"end": 12362,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12348,
											"end": 12357,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12339,
											"end": 12346,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12335,
											"end": 12358,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12331,
											"end": 12363,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12328,
											"end": 12447,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12328,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 12328,
											"end": 12447,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12366,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 12366,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 12366,
											"end": 12445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12366,
											"end": 12445,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 12366,
											"end": 12445,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12328,
											"end": 12447,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 12328,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12514,
											"end": 12515,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12503,
											"end": 12512,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12499,
											"end": 12516,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12486,
											"end": 12517,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 12544,
											"end": 12562,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12536,
											"end": 12542,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12533,
											"end": 12563,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12647,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 12530,
											"end": 12647,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12566,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 12566,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 12566,
											"end": 12645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12566,
											"end": 12645,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 12566,
											"end": 12645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12647,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 12530,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12671,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 12741,
											"end": 12748,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12732,
											"end": 12738,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12721,
											"end": 12730,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12717,
											"end": 12739,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12671,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 12671,
											"end": 12749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12671,
											"end": 12749,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 12671,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12661,
											"end": 12749,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12661,
											"end": 12749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12457,
											"end": 12759,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12826,
											"end": 12828,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12815,
											"end": 12824,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12811,
											"end": 12829,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12798,
											"end": 12830,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 12857,
											"end": 12875,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12846,
											"end": 12876,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12843,
											"end": 12960,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12843,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 12843,
											"end": 12960,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12879,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 12879,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 12879,
											"end": 12958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12879,
											"end": 12958,
											"name": "tag",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 12879,
											"end": 12958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12843,
											"end": 12960,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 12843,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12984,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 13054,
											"end": 13061,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13045,
											"end": 13051,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13034,
											"end": 13043,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13030,
											"end": 13052,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12984,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 12984,
											"end": 13062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12984,
											"end": 13062,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 12984,
											"end": 13062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13062,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12974,
											"end": 13062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12769,
											"end": 13072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 13079,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 13079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 13079,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 13079,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 13079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 13079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13085,
											"end": 13199,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 13085,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13152,
											"end": 13158,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13186,
											"end": 13191,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13180,
											"end": 13192,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13170,
											"end": 13192,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13170,
											"end": 13192,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13085,
											"end": 13199,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13085,
											"end": 13199,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13085,
											"end": 13199,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13085,
											"end": 13199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13205,
											"end": 13389,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 13205,
											"end": 13389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13304,
											"end": 13315,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13344,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13333,
											"end": 13336,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13326,
											"end": 13345,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13378,
											"end": 13382,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13373,
											"end": 13376,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13369,
											"end": 13383,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13354,
											"end": 13383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13354,
											"end": 13383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13205,
											"end": 13389,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13205,
											"end": 13389,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13205,
											"end": 13389,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13205,
											"end": 13389,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13205,
											"end": 13389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13395,
											"end": 13527,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 13395,
											"end": 13527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13462,
											"end": 13466,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13485,
											"end": 13488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13477,
											"end": 13488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13477,
											"end": 13488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13515,
											"end": 13519,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13510,
											"end": 13513,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13506,
											"end": 13520,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13498,
											"end": 13520,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13498,
											"end": 13520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13395,
											"end": 13527,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13395,
											"end": 13527,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13395,
											"end": 13527,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13395,
											"end": 13527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13533,
											"end": 13641,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 13533,
											"end": 13641,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13610,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 13628,
											"end": 13633,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13610,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 13610,
											"end": 13634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13610,
											"end": 13634,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 13610,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13605,
											"end": 13608,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13598,
											"end": 13635,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13533,
											"end": 13641,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13533,
											"end": 13641,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13533,
											"end": 13641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13826,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 13647,
											"end": 13826,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13716,
											"end": 13726,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13737,
											"end": 13783,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 13779,
											"end": 13782,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13771,
											"end": 13777,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13737,
											"end": 13783,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 13737,
											"end": 13783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13737,
											"end": 13783,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 13737,
											"end": 13783,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13815,
											"end": 13819,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13810,
											"end": 13813,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13806,
											"end": 13820,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13792,
											"end": 13820,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13792,
											"end": 13820,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13826,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13826,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13826,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13826,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13647,
											"end": 13826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13832,
											"end": 13945,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 13832,
											"end": 13945,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13902,
											"end": 13906,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13934,
											"end": 13938,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13929,
											"end": 13932,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13925,
											"end": 13939,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13917,
											"end": 13939,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13917,
											"end": 13939,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13832,
											"end": 13945,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13832,
											"end": 13945,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13832,
											"end": 13945,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13832,
											"end": 13945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13981,
											"end": 14713,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 13981,
											"end": 14713,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14100,
											"end": 14103,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 14177,
											"end": 14182,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14129,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 14129,
											"end": 14183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14129,
											"end": 14183,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 14129,
											"end": 14183,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14199,
											"end": 14285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 14278,
											"end": 14284,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14273,
											"end": 14276,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14199,
											"end": 14285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 14199,
											"end": 14285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14199,
											"end": 14285,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 14199,
											"end": 14285,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14192,
											"end": 14285,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14192,
											"end": 14285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14309,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 14359,
											"end": 14364,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14309,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 14309,
											"end": 14365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14309,
											"end": 14365,
											"name": "tag",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 14309,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14388,
											"end": 14395,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14419,
											"end": 14420,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14404,
											"end": 14688,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 14404,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14429,
											"end": 14435,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14426,
											"end": 14427,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14423,
											"end": 14436,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 14404,
											"end": 14688,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14404,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 14404,
											"end": 14688,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14505,
											"end": 14511,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14499,
											"end": 14512,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 14532,
											"end": 14595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 14591,
											"end": 14594,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 14576,
											"end": 14589,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14532,
											"end": 14595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 14532,
											"end": 14595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14532,
											"end": 14595,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 14532,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14525,
											"end": 14595,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 14525,
											"end": 14595,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14618,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 14671,
											"end": 14677,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14618,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 14618,
											"end": 14678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14618,
											"end": 14678,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 14618,
											"end": 14678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14608,
											"end": 14678,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14608,
											"end": 14678,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14464,
											"end": 14688,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14451,
											"end": 14452,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 14448,
											"end": 14449,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14444,
											"end": 14453,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14439,
											"end": 14453,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14439,
											"end": 14453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14404,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 14404,
											"end": 14688,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14404,
											"end": 14688,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 14404,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14408,
											"end": 14422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14704,
											"end": 14707,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14697,
											"end": 14707,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14697,
											"end": 14707,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14105,
											"end": 14713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14105,
											"end": 14713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14105,
											"end": 14713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13981,
											"end": 14713,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13981,
											"end": 14713,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13981,
											"end": 14713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13981,
											"end": 14713,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13981,
											"end": 14713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14862,
											"end": 14866,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14900,
											"end": 14902,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14889,
											"end": 14898,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14877,
											"end": 14903,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14877,
											"end": 14903,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14949,
											"end": 14958,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14943,
											"end": 14947,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14939,
											"end": 14959,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14935,
											"end": 14936,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14924,
											"end": 14933,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14920,
											"end": 14937,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14913,
											"end": 14960,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14977,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 15080,
											"end": 15084,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15071,
											"end": 15077,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14977,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 14977,
											"end": 15085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14977,
											"end": 15085,
											"name": "tag",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 14977,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14969,
											"end": 15085,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14969,
											"end": 15085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14719,
											"end": 15092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15098,
											"end": 15406,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 15098,
											"end": 15406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15160,
											"end": 15164,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15250,
											"end": 15268,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15242,
											"end": 15248,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15239,
											"end": 15269,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15236,
											"end": 15292,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15236,
											"end": 15292,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 15236,
											"end": 15292,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15272,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 15272,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 15272,
											"end": 15290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15272,
											"end": 15290,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 15272,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15236,
											"end": 15292,
											"name": "tag",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 15236,
											"end": 15292,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15310,
											"end": 15339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 15332,
											"end": 15338,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15310,
											"end": 15339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 15310,
											"end": 15339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15310,
											"end": 15339,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 15310,
											"end": 15339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15302,
											"end": 15339,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15302,
											"end": 15339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15394,
											"end": 15398,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15388,
											"end": 15392,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15384,
											"end": 15399,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15376,
											"end": 15399,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15376,
											"end": 15399,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15098,
											"end": 15406,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15098,
											"end": 15406,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15098,
											"end": 15406,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15098,
											"end": 15406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15412,
											"end": 15837,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 15412,
											"end": 15837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15490,
											"end": 15495,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15515,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 15531,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 15573,
											"end": 15579,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15531,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 15531,
											"end": 15580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15531,
											"end": 15580,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 15531,
											"end": 15580,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15515,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "274"
										},
										{
											"begin": 15515,
											"end": 15581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15515,
											"end": 15581,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 15515,
											"end": 15581,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15506,
											"end": 15581,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15506,
											"end": 15581,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15604,
											"end": 15610,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15597,
											"end": 15602,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15590,
											"end": 15611,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15642,
											"end": 15646,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15635,
											"end": 15640,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15631,
											"end": 15647,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15680,
											"end": 15683,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15671,
											"end": 15677,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15666,
											"end": 15669,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15662,
											"end": 15678,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15659,
											"end": 15684,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15656,
											"end": 15768,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15656,
											"end": 15768,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 15656,
											"end": 15768,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15687,
											"end": 15766,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 15687,
											"end": 15766,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 15687,
											"end": 15766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15687,
											"end": 15766,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 15687,
											"end": 15766,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15656,
											"end": 15768,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 15656,
											"end": 15768,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15777,
											"end": 15831,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 15824,
											"end": 15830,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15819,
											"end": 15822,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15814,
											"end": 15817,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15777,
											"end": 15831,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 15777,
											"end": 15831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15777,
											"end": 15831,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 15777,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15496,
											"end": 15837,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15412,
											"end": 15837,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 15412,
											"end": 15837,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15412,
											"end": 15837,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15412,
											"end": 15837,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15412,
											"end": 15837,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15412,
											"end": 15837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 16197,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 15857,
											"end": 16197,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15913,
											"end": 15918,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15962,
											"end": 15965,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15955,
											"end": 15959,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 15947,
											"end": 15953,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15943,
											"end": 15960,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15939,
											"end": 15966,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 15929,
											"end": 16051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 15929,
											"end": 16051,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15970,
											"end": 16049,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 15970,
											"end": 16049,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 15970,
											"end": 16049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15970,
											"end": 16049,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 15970,
											"end": 16049,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15929,
											"end": 16051,
											"name": "tag",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 15929,
											"end": 16051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16087,
											"end": 16093,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16074,
											"end": 16094,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 16112,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 16187,
											"end": 16190,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16179,
											"end": 16185,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16172,
											"end": 16176,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16164,
											"end": 16170,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16160,
											"end": 16177,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16112,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 16112,
											"end": 16191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16112,
											"end": 16191,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 16112,
											"end": 16191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16103,
											"end": 16191,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16103,
											"end": 16191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15919,
											"end": 16197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 16197,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 16197,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 16197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 16197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 16197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16203,
											"end": 16857,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 16203,
											"end": 16857,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16281,
											"end": 16287,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16289,
											"end": 16295,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16338,
											"end": 16340,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16326,
											"end": 16335,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16317,
											"end": 16324,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16313,
											"end": 16336,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16309,
											"end": 16341,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 16306,
											"end": 16425,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16306,
											"end": 16425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 16306,
											"end": 16425,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16344,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 16344,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 16344,
											"end": 16423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16344,
											"end": 16423,
											"name": "tag",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 16344,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16306,
											"end": 16425,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 16306,
											"end": 16425,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16464,
											"end": 16465,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16489,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 16534,
											"end": 16541,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16525,
											"end": 16531,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16514,
											"end": 16523,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16510,
											"end": 16532,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16489,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 16489,
											"end": 16542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16489,
											"end": 16542,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 16489,
											"end": 16542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16479,
											"end": 16542,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16479,
											"end": 16542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16435,
											"end": 16552,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16619,
											"end": 16621,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16608,
											"end": 16617,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16604,
											"end": 16622,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16591,
											"end": 16623,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 16650,
											"end": 16668,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16642,
											"end": 16648,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16639,
											"end": 16669,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 16636,
											"end": 16753,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16636,
											"end": 16753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 16636,
											"end": 16753,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16672,
											"end": 16751,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 16672,
											"end": 16751,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 16672,
											"end": 16751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16672,
											"end": 16751,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 16672,
											"end": 16751,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16636,
											"end": 16753,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 16636,
											"end": 16753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16777,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 16832,
											"end": 16839,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16823,
											"end": 16829,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16812,
											"end": 16821,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16808,
											"end": 16830,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16777,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 16777,
											"end": 16840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16777,
											"end": 16840,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 16777,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16767,
											"end": 16840,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16767,
											"end": 16840,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16562,
											"end": 16850,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16203,
											"end": 16857,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16203,
											"end": 16857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16203,
											"end": 16857,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16203,
											"end": 16857,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16203,
											"end": 16857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16203,
											"end": 16857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16863,
											"end": 16979,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 16863,
											"end": 16979,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16933,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 16948,
											"end": 16953,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16933,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 16933,
											"end": 16954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16933,
											"end": 16954,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 16933,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16926,
											"end": 16931,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16923,
											"end": 16955,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 16913,
											"end": 16973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 16913,
											"end": 16973,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16969,
											"end": 16970,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16966,
											"end": 16967,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16959,
											"end": 16971,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16913,
											"end": 16973,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 16913,
											"end": 16973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16863,
											"end": 16979,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16863,
											"end": 16979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16985,
											"end": 17118,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 16985,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17028,
											"end": 17033,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17066,
											"end": 17072,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17053,
											"end": 17073,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 17044,
											"end": 17073,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17044,
											"end": 17073,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17082,
											"end": 17112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 17106,
											"end": 17111,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17082,
											"end": 17112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 17082,
											"end": 17112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17082,
											"end": 17112,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 17082,
											"end": 17112,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16985,
											"end": 17118,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16985,
											"end": 17118,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16985,
											"end": 17118,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16985,
											"end": 17118,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16985,
											"end": 17118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17124,
											"end": 17592,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 17124,
											"end": 17592,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17189,
											"end": 17195,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17197,
											"end": 17203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17246,
											"end": 17248,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17234,
											"end": 17243,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17225,
											"end": 17232,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17221,
											"end": 17244,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17217,
											"end": 17249,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 17333,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 17333,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 17214,
											"end": 17333,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17252,
											"end": 17331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 17252,
											"end": 17331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 17252,
											"end": 17331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17252,
											"end": 17331,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 17252,
											"end": 17331,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 17333,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 17214,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17372,
											"end": 17373,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17397,
											"end": 17450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 17442,
											"end": 17449,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17433,
											"end": 17439,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17422,
											"end": 17431,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 17418,
											"end": 17440,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17397,
											"end": 17450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 17397,
											"end": 17450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17397,
											"end": 17450,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 17397,
											"end": 17450,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17387,
											"end": 17450,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17387,
											"end": 17450,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17343,
											"end": 17460,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17499,
											"end": 17501,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17525,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 17567,
											"end": 17574,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17558,
											"end": 17564,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17547,
											"end": 17556,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 17543,
											"end": 17565,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17525,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 17525,
											"end": 17575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17525,
											"end": 17575,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 17525,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17515,
											"end": 17575,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17515,
											"end": 17575,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17470,
											"end": 17585,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17124,
											"end": 17592,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17124,
											"end": 17592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17124,
											"end": 17592,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17124,
											"end": 17592,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17124,
											"end": 17592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17124,
											"end": 17592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17598,
											"end": 18072,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 17598,
											"end": 18072,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17666,
											"end": 17672,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17674,
											"end": 17680,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17723,
											"end": 17725,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17711,
											"end": 17720,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17702,
											"end": 17709,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17698,
											"end": 17721,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17694,
											"end": 17726,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 17691,
											"end": 17810,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17691,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 17691,
											"end": 17810,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17729,
											"end": 17808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 17729,
											"end": 17808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 17729,
											"end": 17808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17729,
											"end": 17808,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 17729,
											"end": 17808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17691,
											"end": 17810,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 17691,
											"end": 17810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17849,
											"end": 17850,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17874,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 17919,
											"end": 17926,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17910,
											"end": 17916,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17899,
											"end": 17908,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 17895,
											"end": 17917,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17874,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 17874,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17874,
											"end": 17927,
											"name": "tag",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 17874,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17864,
											"end": 17927,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17864,
											"end": 17927,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17820,
											"end": 17937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17976,
											"end": 17978,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18002,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 18047,
											"end": 18054,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18038,
											"end": 18044,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18027,
											"end": 18036,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 18023,
											"end": 18045,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18002,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 18002,
											"end": 18055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18002,
											"end": 18055,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 18002,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17992,
											"end": 18055,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17992,
											"end": 18055,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17947,
											"end": 18065,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17598,
											"end": 18072,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17598,
											"end": 18072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17598,
											"end": 18072,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17598,
											"end": 18072,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17598,
											"end": 18072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17598,
											"end": 18072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18078,
											"end": 19167,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 18078,
											"end": 19167,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18182,
											"end": 18188,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18190,
											"end": 18196,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18198,
											"end": 18204,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18206,
											"end": 18212,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18214,
											"end": 18220,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18263,
											"end": 18266,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 18251,
											"end": 18260,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 18242,
											"end": 18249,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 18238,
											"end": 18261,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 18234,
											"end": 18267,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 18231,
											"end": 18351,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18231,
											"end": 18351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 18231,
											"end": 18351,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18270,
											"end": 18349,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 18270,
											"end": 18349,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 18270,
											"end": 18349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18270,
											"end": 18349,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 18270,
											"end": 18349,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18231,
											"end": 18351,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 18231,
											"end": 18351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18390,
											"end": 18391,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18415,
											"end": 18468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 18460,
											"end": 18467,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 18451,
											"end": 18457,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18440,
											"end": 18449,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 18436,
											"end": 18458,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18415,
											"end": 18468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 18415,
											"end": 18468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18415,
											"end": 18468,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 18415,
											"end": 18468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18405,
											"end": 18468,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 18405,
											"end": 18468,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18361,
											"end": 18478,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18517,
											"end": 18519,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18543,
											"end": 18596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 18588,
											"end": 18595,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 18579,
											"end": 18585,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18568,
											"end": 18577,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 18564,
											"end": 18586,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18543,
											"end": 18596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 18543,
											"end": 18596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18543,
											"end": 18596,
											"name": "tag",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 18543,
											"end": 18596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18533,
											"end": 18596,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 18533,
											"end": 18596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18488,
											"end": 18606,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18645,
											"end": 18647,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 18671,
											"end": 18724,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 18716,
											"end": 18723,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 18707,
											"end": 18713,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18696,
											"end": 18705,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 18692,
											"end": 18714,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18671,
											"end": 18724,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 18671,
											"end": 18724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18671,
											"end": 18724,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 18671,
											"end": 18724,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18661,
											"end": 18724,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 18661,
											"end": 18724,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18616,
											"end": 18734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18773,
											"end": 18775,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 18799,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 18844,
											"end": 18851,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 18835,
											"end": 18841,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18824,
											"end": 18833,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 18820,
											"end": 18842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18799,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 18799,
											"end": 18852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18799,
											"end": 18852,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 18799,
											"end": 18852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18789,
											"end": 18852,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18789,
											"end": 18852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18744,
											"end": 18862,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18929,
											"end": 18932,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 18918,
											"end": 18927,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 18914,
											"end": 18933,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18901,
											"end": 18934,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 18961,
											"end": 18979,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18953,
											"end": 18959,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18950,
											"end": 18980,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 18947,
											"end": 19064,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18947,
											"end": 19064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 18947,
											"end": 19064,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18983,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 18983,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 18983,
											"end": 19062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18983,
											"end": 19062,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 18983,
											"end": 19062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18947,
											"end": 19064,
											"name": "tag",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 18947,
											"end": 19064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19088,
											"end": 19150,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 19142,
											"end": 19149,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 19133,
											"end": 19139,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19122,
											"end": 19131,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 19118,
											"end": 19140,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19088,
											"end": 19150,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 19088,
											"end": 19150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19088,
											"end": 19150,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 19088,
											"end": 19150,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19078,
											"end": 19150,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19078,
											"end": 19150,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18872,
											"end": 19160,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18078,
											"end": 19167,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18078,
											"end": 19167,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 18078,
											"end": 19167,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18078,
											"end": 19167,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18078,
											"end": 19167,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 18078,
											"end": 19167,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18078,
											"end": 19167,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 18078,
											"end": 19167,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18078,
											"end": 19167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19173,
											"end": 19353,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 19173,
											"end": 19353,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19221,
											"end": 19298,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19218,
											"end": 19219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19211,
											"end": 19299,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19318,
											"end": 19322,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 19315,
											"end": 19316,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 19308,
											"end": 19323,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19342,
											"end": 19346,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 19339,
											"end": 19340,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19332,
											"end": 19347,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19359,
											"end": 19679,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 19359,
											"end": 19679,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19403,
											"end": 19409,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19440,
											"end": 19441,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 19434,
											"end": 19438,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19430,
											"end": 19442,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 19420,
											"end": 19442,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19420,
											"end": 19442,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19487,
											"end": 19488,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 19481,
											"end": 19485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19477,
											"end": 19489,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 19508,
											"end": 19526,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19498,
											"end": 19579,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 19498,
											"end": 19579,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19564,
											"end": 19568,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 19556,
											"end": 19562,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 19542,
											"end": 19569,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19542,
											"end": 19569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19498,
											"end": 19579,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 19498,
											"end": 19579,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19626,
											"end": 19628,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19618,
											"end": 19624,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19615,
											"end": 19629,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 19595,
											"end": 19613,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19592,
											"end": 19630,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19589,
											"end": 19673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 19589,
											"end": 19673,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19645,
											"end": 19663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 19645,
											"end": 19663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 19645,
											"end": 19663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19645,
											"end": 19663,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 19645,
											"end": 19663,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19589,
											"end": 19673,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 19589,
											"end": 19673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19410,
											"end": 19679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19359,
											"end": 19679,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19359,
											"end": 19679,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19359,
											"end": 19679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19359,
											"end": 19679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19685,
											"end": 19833,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 19685,
											"end": 19833,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19787,
											"end": 19798,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19824,
											"end": 19827,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19809,
											"end": 19827,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19809,
											"end": 19827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19685,
											"end": 19833,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19685,
											"end": 19833,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19685,
											"end": 19833,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19685,
											"end": 19833,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19685,
											"end": 19833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19839,
											"end": 19980,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 19839,
											"end": 19980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19888,
											"end": 19892,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19911,
											"end": 19914,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19903,
											"end": 19914,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19903,
											"end": 19914,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19934,
											"end": 19937,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19931,
											"end": 19932,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19924,
											"end": 19938,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19968,
											"end": 19972,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19965,
											"end": 19966,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19955,
											"end": 19973,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 19947,
											"end": 19973,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19947,
											"end": 19973,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19839,
											"end": 19980,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19839,
											"end": 19980,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19839,
											"end": 19980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19839,
											"end": 19980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20010,
											"end": 20884,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 20010,
											"end": 20884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20113,
											"end": 20116,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20150,
											"end": 20155,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20144,
											"end": 20156,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 20179,
											"end": 20215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 20205,
											"end": 20214,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20179,
											"end": 20215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 20179,
											"end": 20215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20179,
											"end": 20215,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 20179,
											"end": 20215,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20231,
											"end": 20320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 20313,
											"end": 20319,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20308,
											"end": 20311,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 20231,
											"end": 20320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 20231,
											"end": 20320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20231,
											"end": 20320,
											"name": "tag",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 20231,
											"end": 20320,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20224,
											"end": 20320,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 20224,
											"end": 20320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20351,
											"end": 20352,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 20340,
											"end": 20349,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20336,
											"end": 20353,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 20367,
											"end": 20368,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20362,
											"end": 20528,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20362,
											"end": 20528,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 20362,
											"end": 20528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "545"
										},
										{
											"begin": 20362,
											"end": 20528,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20542,
											"end": 20543,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 20537,
											"end": 20878,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20537,
											"end": 20878,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 20537,
											"end": 20878,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 20537,
											"end": 20878,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20329,
											"end": 20878,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 20329,
											"end": 20878,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20362,
											"end": 20528,
											"name": "tag",
											"source": 15,
											"value": "545"
										},
										{
											"begin": 20362,
											"end": 20528,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20446,
											"end": 20450,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 20442,
											"end": 20451,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 20431,
											"end": 20440,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20427,
											"end": 20452,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 20422,
											"end": 20425,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 20415,
											"end": 20453,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20508,
											"end": 20514,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20501,
											"end": 20515,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20494,
											"end": 20516,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20486,
											"end": 20492,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20482,
											"end": 20517,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 20477,
											"end": 20480,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 20473,
											"end": 20518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20466,
											"end": 20518,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 20466,
											"end": 20518,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20362,
											"end": 20528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 20362,
											"end": 20528,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20537,
											"end": 20878,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 20537,
											"end": 20878,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20604,
											"end": 20642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 20636,
											"end": 20641,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20604,
											"end": 20642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 20604,
											"end": 20642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20604,
											"end": 20642,
											"name": "tag",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 20604,
											"end": 20642,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20664,
											"end": 20665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20678,
											"end": 20832,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 20678,
											"end": 20832,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20692,
											"end": 20698,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20689,
											"end": 20690,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20686,
											"end": 20699,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 20678,
											"end": 20832,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20678,
											"end": 20832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 20678,
											"end": 20832,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20766,
											"end": 20773,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20760,
											"end": 20774,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 20756,
											"end": 20757,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20751,
											"end": 20754,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20747,
											"end": 20758,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20740,
											"end": 20775,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20816,
											"end": 20817,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 20807,
											"end": 20814,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20803,
											"end": 20818,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20792,
											"end": 20818,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20792,
											"end": 20818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20714,
											"end": 20718,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20711,
											"end": 20712,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20707,
											"end": 20719,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20702,
											"end": 20719,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20702,
											"end": 20719,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20678,
											"end": 20832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 20678,
											"end": 20832,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20678,
											"end": 20832,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 20678,
											"end": 20832,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20861,
											"end": 20867,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20856,
											"end": 20859,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20852,
											"end": 20868,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20845,
											"end": 20868,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 20845,
											"end": 20868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20544,
											"end": 20878,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20544,
											"end": 20878,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20329,
											"end": 20878,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 20329,
											"end": 20878,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20329,
											"end": 20878,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20117,
											"end": 20884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20117,
											"end": 20884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20010,
											"end": 20884,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20010,
											"end": 20884,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20010,
											"end": 20884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20010,
											"end": 20884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20010,
											"end": 20884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20890,
											"end": 21280,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 20890,
											"end": 21280,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20996,
											"end": 20999,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21024,
											"end": 21063,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 21057,
											"end": 21062,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21024,
											"end": 21063,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 21024,
											"end": 21063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21024,
											"end": 21063,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 21024,
											"end": 21063,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21079,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 21161,
											"end": 21167,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21156,
											"end": 21159,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21079,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 21079,
											"end": 21168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21079,
											"end": 21168,
											"name": "tag",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 21079,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21072,
											"end": 21168,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 21072,
											"end": 21168,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21177,
											"end": 21242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 21235,
											"end": 21241,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21230,
											"end": 21233,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21223,
											"end": 21227,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21216,
											"end": 21221,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 21212,
											"end": 21228,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21177,
											"end": 21242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 21177,
											"end": 21242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21177,
											"end": 21242,
											"name": "tag",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 21177,
											"end": 21242,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21267,
											"end": 21273,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 21262,
											"end": 21265,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21258,
											"end": 21274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21251,
											"end": 21274,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21251,
											"end": 21274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21000,
											"end": 21280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20890,
											"end": 21280,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20890,
											"end": 21280,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20890,
											"end": 21280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20890,
											"end": 21280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20890,
											"end": 21280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21715,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 21286,
											"end": 21715,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21463,
											"end": 21466,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21485,
											"end": 21577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 21573,
											"end": 21576,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21564,
											"end": 21570,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21485,
											"end": 21577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 21485,
											"end": 21577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21485,
											"end": 21577,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 21485,
											"end": 21577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21478,
											"end": 21577,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21478,
											"end": 21577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21594,
											"end": 21689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 21685,
											"end": 21688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21676,
											"end": 21682,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21594,
											"end": 21689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 21594,
											"end": 21689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21594,
											"end": 21689,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 21594,
											"end": 21689,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21587,
											"end": 21689,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21587,
											"end": 21689,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21706,
											"end": 21709,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21699,
											"end": 21709,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21699,
											"end": 21709,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21715,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21715,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21721,
											"end": 21839,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 21721,
											"end": 21839,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21808,
											"end": 21832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 21826,
											"end": 21831,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21808,
											"end": 21832,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 21808,
											"end": 21832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21808,
											"end": 21832,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 21808,
											"end": 21832,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21803,
											"end": 21806,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21796,
											"end": 21833,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21721,
											"end": 21839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21721,
											"end": 21839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21721,
											"end": 21839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21845,
											"end": 22177,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 21845,
											"end": 22177,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21966,
											"end": 21970,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22004,
											"end": 22006,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 21993,
											"end": 22002,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21989,
											"end": 22007,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21981,
											"end": 22007,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21981,
											"end": 22007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22017,
											"end": 22088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 22085,
											"end": 22086,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22074,
											"end": 22083,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22070,
											"end": 22087,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22061,
											"end": 22067,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22017,
											"end": 22088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 22017,
											"end": 22088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22017,
											"end": 22088,
											"name": "tag",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 22017,
											"end": 22088,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22098,
											"end": 22170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 22166,
											"end": 22168,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22155,
											"end": 22164,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22151,
											"end": 22169,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22142,
											"end": 22148,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22098,
											"end": 22170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 22098,
											"end": 22170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22098,
											"end": 22170,
											"name": "tag",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 22098,
											"end": 22170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21845,
											"end": 22177,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 21845,
											"end": 22177,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21845,
											"end": 22177,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21845,
											"end": 22177,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21845,
											"end": 22177,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21845,
											"end": 22177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22183,
											"end": 22515,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 22183,
											"end": 22515,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22304,
											"end": 22308,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22342,
											"end": 22344,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 22331,
											"end": 22340,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22327,
											"end": 22345,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22319,
											"end": 22345,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22319,
											"end": 22345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22355,
											"end": 22426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 22423,
											"end": 22424,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22412,
											"end": 22421,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22408,
											"end": 22425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22399,
											"end": 22405,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22355,
											"end": 22426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 22355,
											"end": 22426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22355,
											"end": 22426,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 22355,
											"end": 22426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22436,
											"end": 22508,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 22504,
											"end": 22506,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22493,
											"end": 22502,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22489,
											"end": 22507,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22480,
											"end": 22486,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22436,
											"end": 22508,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 22436,
											"end": 22508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22436,
											"end": 22508,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 22436,
											"end": 22508,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22183,
											"end": 22515,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 22183,
											"end": 22515,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 22183,
											"end": 22515,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22183,
											"end": 22515,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22183,
											"end": 22515,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22183,
											"end": 22515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22521,
											"end": 22701,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 22521,
											"end": 22701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22569,
											"end": 22646,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22566,
											"end": 22567,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22559,
											"end": 22647,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22666,
											"end": 22670,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 22663,
											"end": 22664,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 22656,
											"end": 22671,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22690,
											"end": 22694,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 22687,
											"end": 22688,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22680,
											"end": 22695,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 22707,
											"end": 22887,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 22707,
											"end": 22887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22755,
											"end": 22832,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22752,
											"end": 22753,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22745,
											"end": 22833,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22852,
											"end": 22856,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 22849,
											"end": 22850,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 22842,
											"end": 22857,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22876,
											"end": 22880,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 22873,
											"end": 22874,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22866,
											"end": 22881,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 22893,
											"end": 23126,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 22893,
											"end": 23126,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22932,
											"end": 22935,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22955,
											"end": 22979,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 22973,
											"end": 22978,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22955,
											"end": 22979,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 22955,
											"end": 22979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22955,
											"end": 22979,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 22955,
											"end": 22979,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22946,
											"end": 22979,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22946,
											"end": 22979,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23001,
											"end": 23067,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22994,
											"end": 22999,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22991,
											"end": 23068,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 22988,
											"end": 23091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 22988,
											"end": 23091,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 23071,
											"end": 23089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 23071,
											"end": 23089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 23071,
											"end": 23089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23071,
											"end": 23089,
											"name": "tag",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 23071,
											"end": 23089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22988,
											"end": 23091,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 22988,
											"end": 23091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23118,
											"end": 23119,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 23111,
											"end": 23116,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23107,
											"end": 23120,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23100,
											"end": 23120,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23100,
											"end": 23120,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22893,
											"end": 23126,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22893,
											"end": 23126,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22893,
											"end": 23126,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22893,
											"end": 23126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23132,
											"end": 23354,
											"name": "tag",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 23132,
											"end": 23354,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23225,
											"end": 23229,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23263,
											"end": 23265,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23252,
											"end": 23261,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23248,
											"end": 23266,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23240,
											"end": 23266,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23240,
											"end": 23266,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23347,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 23344,
											"end": 23345,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23333,
											"end": 23342,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23329,
											"end": 23346,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23320,
											"end": 23326,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23347,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 23276,
											"end": 23347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23276,
											"end": 23347,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 23276,
											"end": 23347,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23132,
											"end": 23354,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23132,
											"end": 23354,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23132,
											"end": 23354,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23132,
											"end": 23354,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23132,
											"end": 23354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23360,
											"end": 23453,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 23360,
											"end": 23453,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23397,
											"end": 23403,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23444,
											"end": 23446,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23439,
											"end": 23441,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 23432,
											"end": 23437,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23428,
											"end": 23442,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23424,
											"end": 23447,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 23414,
											"end": 23447,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23414,
											"end": 23447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23360,
											"end": 23453,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23360,
											"end": 23453,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23360,
											"end": 23453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23360,
											"end": 23453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23566,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 23459,
											"end": 23566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23503,
											"end": 23511,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23553,
											"end": 23558,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23547,
											"end": 23551,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23543,
											"end": 23559,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 23522,
											"end": 23559,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23522,
											"end": 23559,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23566,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23566,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23572,
											"end": 23965,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 23572,
											"end": 23965,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23641,
											"end": 23647,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23691,
											"end": 23692,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 23679,
											"end": 23689,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23675,
											"end": 23693,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 23714,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 23744,
											"end": 23810,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23733,
											"end": 23742,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23714,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 23714,
											"end": 23811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23714,
											"end": 23811,
											"name": "tag",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 23714,
											"end": 23811,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23832,
											"end": 23871,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 23862,
											"end": 23870,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 23851,
											"end": 23860,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23832,
											"end": 23871,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 23832,
											"end": 23871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23832,
											"end": 23871,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 23832,
											"end": 23871,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23820,
											"end": 23871,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 23820,
											"end": 23871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23904,
											"end": 23908,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 23900,
											"end": 23909,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 23893,
											"end": 23898,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23889,
											"end": 23910,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 23880,
											"end": 23910,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 23880,
											"end": 23910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23953,
											"end": 23957,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 23943,
											"end": 23951,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 23939,
											"end": 23958,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 23932,
											"end": 23937,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23929,
											"end": 23959,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 23919,
											"end": 23959,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23919,
											"end": 23959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23648,
											"end": 23965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23648,
											"end": 23965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23572,
											"end": 23965,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 23572,
											"end": 23965,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23572,
											"end": 23965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23572,
											"end": 23965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23572,
											"end": 23965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23572,
											"end": 23965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23971,
											"end": 24031,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 23971,
											"end": 24031,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23999,
											"end": 24002,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24020,
											"end": 24025,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24013,
											"end": 24025,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24013,
											"end": 24025,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23971,
											"end": 24031,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23971,
											"end": 24031,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23971,
											"end": 24031,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23971,
											"end": 24031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24037,
											"end": 24179,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 24037,
											"end": 24179,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24087,
											"end": 24096,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24120,
											"end": 24173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 24138,
											"end": 24172,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 24147,
											"end": 24171,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 24165,
											"end": 24170,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24147,
											"end": 24171,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 24147,
											"end": 24171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24147,
											"end": 24171,
											"name": "tag",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 24147,
											"end": 24171,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24138,
											"end": 24172,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 24138,
											"end": 24172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24138,
											"end": 24172,
											"name": "tag",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 24138,
											"end": 24172,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24120,
											"end": 24173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 24120,
											"end": 24173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24120,
											"end": 24173,
											"name": "tag",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 24120,
											"end": 24173,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24107,
											"end": 24173,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24107,
											"end": 24173,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24037,
											"end": 24179,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24037,
											"end": 24179,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24037,
											"end": 24179,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24037,
											"end": 24179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24185,
											"end": 24260,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 24185,
											"end": 24260,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24228,
											"end": 24231,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24249,
											"end": 24254,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24242,
											"end": 24254,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24242,
											"end": 24254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24185,
											"end": 24260,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24185,
											"end": 24260,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24185,
											"end": 24260,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24185,
											"end": 24260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24266,
											"end": 24535,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 24266,
											"end": 24535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24376,
											"end": 24415,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 24407,
											"end": 24414,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24376,
											"end": 24415,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 24376,
											"end": 24415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24376,
											"end": 24415,
											"name": "tag",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 24376,
											"end": 24415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24437,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 24486,
											"end": 24527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 24510,
											"end": 24526,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24486,
											"end": 24527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 24486,
											"end": 24527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24486,
											"end": 24527,
											"name": "tag",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 24486,
											"end": 24527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24478,
											"end": 24484,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24471,
											"end": 24475,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24465,
											"end": 24476,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 24437,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 24437,
											"end": 24528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24437,
											"end": 24528,
											"name": "tag",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 24437,
											"end": 24528,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24431,
											"end": 24435,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24424,
											"end": 24529,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 24342,
											"end": 24535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24266,
											"end": 24535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24266,
											"end": 24535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24266,
											"end": 24535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24266,
											"end": 24535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24541,
											"end": 24614,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 24541,
											"end": 24614,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24586,
											"end": 24589,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24541,
											"end": 24614,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24541,
											"end": 24614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24620,
											"end": 24809,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 24620,
											"end": 24809,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24697,
											"end": 24729,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 24697,
											"end": 24729,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 24697,
											"end": 24729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24697,
											"end": 24729,
											"name": "tag",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 24697,
											"end": 24729,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24738,
											"end": 24803,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 24796,
											"end": 24802,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24788,
											"end": 24794,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24782,
											"end": 24786,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24738,
											"end": 24803,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 24738,
											"end": 24803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24738,
											"end": 24803,
											"name": "tag",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 24738,
											"end": 24803,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24673,
											"end": 24809,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24620,
											"end": 24809,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24620,
											"end": 24809,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24620,
											"end": 24809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24815,
											"end": 25001,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 24815,
											"end": 25001,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24875,
											"end": 24995,
											"name": "tag",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 24875,
											"end": 24995,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24892,
											"end": 24895,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24885,
											"end": 24890,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24882,
											"end": 24896,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 24875,
											"end": 24995,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 24875,
											"end": 24995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 24875,
											"end": 24995,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 24946,
											"end": 24985,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 24983,
											"end": 24984,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24976,
											"end": 24981,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24946,
											"end": 24985,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 24946,
											"end": 24985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24946,
											"end": 24985,
											"name": "tag",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 24946,
											"end": 24985,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24919,
											"end": 24920,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 24912,
											"end": 24917,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24908,
											"end": 24921,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24899,
											"end": 24921,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24899,
											"end": 24921,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24875,
											"end": 24995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 24875,
											"end": 24995,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24875,
											"end": 24995,
											"name": "tag",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 24875,
											"end": 24995,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24815,
											"end": 25001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24815,
											"end": 25001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24815,
											"end": 25001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25007,
											"end": 25550,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 25007,
											"end": 25550,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25108,
											"end": 25110,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 25103,
											"end": 25106,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25100,
											"end": 25111,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 25097,
											"end": 25543,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 25097,
											"end": 25543,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 25097,
											"end": 25543,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 25142,
											"end": 25180,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 25174,
											"end": 25179,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25142,
											"end": 25180,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 25142,
											"end": 25180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25142,
											"end": 25180,
											"name": "tag",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 25142,
											"end": 25180,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25226,
											"end": 25255,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 25244,
											"end": 25254,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 25226,
											"end": 25255,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 25226,
											"end": 25255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25226,
											"end": 25255,
											"name": "tag",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 25226,
											"end": 25255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25216,
											"end": 25224,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25212,
											"end": 25256,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25409,
											"end": 25411,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25397,
											"end": 25407,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 25394,
											"end": 25412,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 25391,
											"end": 25440,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 25391,
											"end": 25440,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 25391,
											"end": 25440,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 25430,
											"end": 25438,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25415,
											"end": 25438,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25415,
											"end": 25438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25391,
											"end": 25440,
											"name": "tag",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 25391,
											"end": 25440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25453,
											"end": 25533,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 25509,
											"end": 25531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 25527,
											"end": 25530,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 25509,
											"end": 25531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 25509,
											"end": 25531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25509,
											"end": 25531,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 25509,
											"end": 25531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25499,
											"end": 25507,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25495,
											"end": 25532,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25482,
											"end": 25493,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25453,
											"end": 25533,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 25453,
											"end": 25533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25453,
											"end": 25533,
											"name": "tag",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 25453,
											"end": 25533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25112,
											"end": 25543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25112,
											"end": 25543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25097,
											"end": 25543,
											"name": "tag",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 25097,
											"end": 25543,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25007,
											"end": 25550,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25007,
											"end": 25550,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25007,
											"end": 25550,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25007,
											"end": 25550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25673,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 25556,
											"end": 25673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25610,
											"end": 25618,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25660,
											"end": 25665,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25654,
											"end": 25658,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25650,
											"end": 25666,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 25629,
											"end": 25666,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25629,
											"end": 25666,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25673,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25673,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25673,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25673,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25679,
											"end": 25848,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 25679,
											"end": 25848,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25723,
											"end": 25729,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25756,
											"end": 25807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "607"
										},
										{
											"begin": 25804,
											"end": 25805,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25800,
											"end": 25806,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 25792,
											"end": 25797,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 25789,
											"end": 25790,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 25785,
											"end": 25798,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 25756,
											"end": 25807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 25756,
											"end": 25807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25756,
											"end": 25807,
											"name": "tag",
											"source": 15,
											"value": "607"
										},
										{
											"begin": 25756,
											"end": 25807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25752,
											"end": 25808,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 25837,
											"end": 25841,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 25831,
											"end": 25835,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25827,
											"end": 25842,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 25817,
											"end": 25842,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25817,
											"end": 25842,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25730,
											"end": 25848,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25679,
											"end": 25848,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25679,
											"end": 25848,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25679,
											"end": 25848,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25679,
											"end": 25848,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25679,
											"end": 25848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25853,
											"end": 26148,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 25853,
											"end": 26148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25929,
											"end": 25933,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26075,
											"end": 26104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 26100,
											"end": 26103,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26094,
											"end": 26098,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26075,
											"end": 26104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 26075,
											"end": 26104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26075,
											"end": 26104,
											"name": "tag",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 26075,
											"end": 26104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26067,
											"end": 26104,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26067,
											"end": 26104,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26137,
											"end": 26140,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26134,
											"end": 26135,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 26130,
											"end": 26141,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 26124,
											"end": 26128,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26121,
											"end": 26142,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 26113,
											"end": 26142,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26113,
											"end": 26142,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25853,
											"end": 26148,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25853,
											"end": 26148,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25853,
											"end": 26148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25853,
											"end": 26148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25853,
											"end": 26148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26153,
											"end": 27548,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 26153,
											"end": 27548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26270,
											"end": 26307,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 26303,
											"end": 26306,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26270,
											"end": 26307,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 26270,
											"end": 26307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26270,
											"end": 26307,
											"name": "tag",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 26270,
											"end": 26307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26372,
											"end": 26390,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26364,
											"end": 26370,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26361,
											"end": 26391,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 26358,
											"end": 26414,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 26358,
											"end": 26414,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 26358,
											"end": 26414,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26394,
											"end": 26412,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 26394,
											"end": 26412,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 26394,
											"end": 26412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26394,
											"end": 26412,
											"name": "tag",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 26394,
											"end": 26412,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26358,
											"end": 26414,
											"name": "tag",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 26358,
											"end": 26414,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26438,
											"end": 26476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 26470,
											"end": 26474,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26464,
											"end": 26475,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 26438,
											"end": 26476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 26438,
											"end": 26476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26438,
											"end": 26476,
											"name": "tag",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 26438,
											"end": 26476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26523,
											"end": 26590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 26583,
											"end": 26589,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26575,
											"end": 26581,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26569,
											"end": 26573,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 26523,
											"end": 26590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 26523,
											"end": 26590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26523,
											"end": 26590,
											"name": "tag",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 26523,
											"end": 26590,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26617,
											"end": 26618,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26641,
											"end": 26645,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26628,
											"end": 26645,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26628,
											"end": 26645,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26673,
											"end": 26675,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 26665,
											"end": 26671,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26662,
											"end": 26676,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 26690,
											"end": 26691,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 26685,
											"end": 27303,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26685,
											"end": 27303,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 26685,
											"end": 27303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "617"
										},
										{
											"begin": 26685,
											"end": 27303,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 27347,
											"end": 27348,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27364,
											"end": 27370,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 27361,
											"end": 27438,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 27361,
											"end": 27438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "618"
										},
										{
											"begin": 27361,
											"end": 27438,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 27413,
											"end": 27422,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27408,
											"end": 27411,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 27404,
											"end": 27423,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27398,
											"end": 27424,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 27389,
											"end": 27424,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27389,
											"end": 27424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27361,
											"end": 27438,
											"name": "tag",
											"source": 15,
											"value": "618"
										},
										{
											"begin": 27361,
											"end": 27438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27464,
											"end": 27531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 27524,
											"end": 27530,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27517,
											"end": 27522,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27464,
											"end": 27531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 27464,
											"end": 27531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27464,
											"end": 27531,
											"name": "tag",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 27464,
											"end": 27531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27458,
											"end": 27462,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 27451,
											"end": 27532,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 27320,
											"end": 27542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26655,
											"end": 27542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 26655,
											"end": 27542,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26685,
											"end": 27303,
											"name": "tag",
											"source": 15,
											"value": "617"
										},
										{
											"begin": 26685,
											"end": 27303,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26737,
											"end": 26741,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 26733,
											"end": 26742,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 26725,
											"end": 26731,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26721,
											"end": 26743,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 26771,
											"end": 26808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 26803,
											"end": 26807,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 26771,
											"end": 26808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 26771,
											"end": 26808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26771,
											"end": 26808,
											"name": "tag",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 26771,
											"end": 26808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26830,
											"end": 26831,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26844,
											"end": 27052,
											"name": "tag",
											"source": 15,
											"value": "621"
										},
										{
											"begin": 26844,
											"end": 27052,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26858,
											"end": 26865,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26855,
											"end": 26856,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26852,
											"end": 26866,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 26844,
											"end": 27052,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 26844,
											"end": 27052,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 26844,
											"end": 27052,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26937,
											"end": 26946,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26932,
											"end": 26935,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 26928,
											"end": 26947,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26922,
											"end": 26948,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 26914,
											"end": 26920,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26907,
											"end": 26949,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 26988,
											"end": 26989,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 26980,
											"end": 26986,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26976,
											"end": 26990,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26966,
											"end": 26990,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26966,
											"end": 26990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27035,
											"end": 27037,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27024,
											"end": 27033,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27020,
											"end": 27038,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27007,
											"end": 27038,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 27007,
											"end": 27038,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26881,
											"end": 26885,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26878,
											"end": 26879,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26874,
											"end": 26886,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26869,
											"end": 26886,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26869,
											"end": 26886,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26844,
											"end": 27052,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "621"
										},
										{
											"begin": 26844,
											"end": 27052,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26844,
											"end": 27052,
											"name": "tag",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 26844,
											"end": 27052,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27080,
											"end": 27086,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 27071,
											"end": 27078,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27068,
											"end": 27087,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 27065,
											"end": 27244,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 27065,
											"end": 27244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 27065,
											"end": 27244,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 27138,
											"end": 27147,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 27133,
											"end": 27136,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 27129,
											"end": 27148,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27123,
											"end": 27149,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 27181,
											"end": 27229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 27223,
											"end": 27227,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 27215,
											"end": 27221,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 27211,
											"end": 27228,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 27200,
											"end": 27209,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27181,
											"end": 27229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 27181,
											"end": 27229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27181,
											"end": 27229,
											"name": "tag",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 27181,
											"end": 27229,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27173,
											"end": 27179,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27166,
											"end": 27230,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 27088,
											"end": 27244,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27065,
											"end": 27244,
											"name": "tag",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 27065,
											"end": 27244,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27290,
											"end": 27291,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 27286,
											"end": 27287,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 27278,
											"end": 27284,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 27274,
											"end": 27288,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 27270,
											"end": 27292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27264,
											"end": 27268,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 27257,
											"end": 27293,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 26692,
											"end": 27303,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26692,
											"end": 27303,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26692,
											"end": 27303,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26655,
											"end": 27542,
											"name": "tag",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 26655,
											"end": 27542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26655,
											"end": 27542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26245,
											"end": 27548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26245,
											"end": 27548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26245,
											"end": 27548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26153,
											"end": 27548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26153,
											"end": 27548,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26153,
											"end": 27548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27554,
											"end": 28107,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 27554,
											"end": 28107,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27731,
											"end": 27735,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27769,
											"end": 27772,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 27758,
											"end": 27767,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27754,
											"end": 27773,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27746,
											"end": 27773,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27746,
											"end": 27773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27783,
											"end": 27854,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "627"
										},
										{
											"begin": 27851,
											"end": 27852,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27840,
											"end": 27849,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27836,
											"end": 27853,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27827,
											"end": 27833,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 27783,
											"end": 27854,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 27783,
											"end": 27854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27783,
											"end": 27854,
											"name": "tag",
											"source": 15,
											"value": "627"
										},
										{
											"begin": 27783,
											"end": 27854,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27864,
											"end": 27936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 27932,
											"end": 27934,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27921,
											"end": 27930,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27917,
											"end": 27935,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27908,
											"end": 27914,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 27864,
											"end": 27936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 27864,
											"end": 27936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27864,
											"end": 27936,
											"name": "tag",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 27864,
											"end": 27936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27946,
											"end": 28018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 28014,
											"end": 28016,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 28003,
											"end": 28012,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27999,
											"end": 28017,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27990,
											"end": 27996,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27946,
											"end": 28018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 27946,
											"end": 28018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27946,
											"end": 28018,
											"name": "tag",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 27946,
											"end": 28018,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28028,
											"end": 28100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 28096,
											"end": 28098,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 28085,
											"end": 28094,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28081,
											"end": 28099,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28072,
											"end": 28078,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28028,
											"end": 28100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 28028,
											"end": 28100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28028,
											"end": 28100,
											"name": "tag",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 28028,
											"end": 28100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27554,
											"end": 28107,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 27554,
											"end": 28107,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 27554,
											"end": 28107,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27554,
											"end": 28107,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27554,
											"end": 28107,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27554,
											"end": 28107,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27554,
											"end": 28107,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27554,
											"end": 28107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28113,
											"end": 28304,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 28113,
											"end": 28304,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28153,
											"end": 28156,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28172,
											"end": 28192,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "632"
										},
										{
											"begin": 28190,
											"end": 28191,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28172,
											"end": 28192,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 28172,
											"end": 28192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28172,
											"end": 28192,
											"name": "tag",
											"source": 15,
											"value": "632"
										},
										{
											"begin": 28172,
											"end": 28192,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28167,
											"end": 28192,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28167,
											"end": 28192,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28206,
											"end": 28226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 28224,
											"end": 28225,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28206,
											"end": 28226,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 28206,
											"end": 28226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28206,
											"end": 28226,
											"name": "tag",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 28206,
											"end": 28226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28201,
											"end": 28226,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 28201,
											"end": 28226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28249,
											"end": 28250,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28246,
											"end": 28247,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28242,
											"end": 28251,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28235,
											"end": 28251,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28235,
											"end": 28251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28270,
											"end": 28273,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 28267,
											"end": 28268,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28264,
											"end": 28274,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 28261,
											"end": 28297,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 28261,
											"end": 28297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "634"
										},
										{
											"begin": 28261,
											"end": 28297,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 28277,
											"end": 28295,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 28277,
											"end": 28295,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 28277,
											"end": 28295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28277,
											"end": 28295,
											"name": "tag",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 28277,
											"end": 28295,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28261,
											"end": 28297,
											"name": "tag",
											"source": 15,
											"value": "634"
										},
										{
											"begin": 28261,
											"end": 28297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28113,
											"end": 28304,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 28113,
											"end": 28304,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28113,
											"end": 28304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28113,
											"end": 28304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28113,
											"end": 28304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28310,
											"end": 28944,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 28310,
											"end": 28944,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28531,
											"end": 28535,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28569,
											"end": 28571,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 28558,
											"end": 28567,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28554,
											"end": 28572,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28546,
											"end": 28572,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28546,
											"end": 28572,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28618,
											"end": 28627,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28612,
											"end": 28616,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28608,
											"end": 28628,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28604,
											"end": 28605,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28593,
											"end": 28602,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28589,
											"end": 28606,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28582,
											"end": 28629,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28646,
											"end": 28754,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "637"
										},
										{
											"begin": 28749,
											"end": 28753,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 28646,
											"end": 28754,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 28646,
											"end": 28754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28646,
											"end": 28754,
											"name": "tag",
											"source": 15,
											"value": "637"
										},
										{
											"begin": 28646,
											"end": 28754,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28638,
											"end": 28754,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28638,
											"end": 28754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28801,
											"end": 28810,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28795,
											"end": 28799,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28791,
											"end": 28811,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28786,
											"end": 28788,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28775,
											"end": 28784,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28771,
											"end": 28789,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28764,
											"end": 28812,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28829,
											"end": 28937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 28932,
											"end": 28936,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28923,
											"end": 28929,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28829,
											"end": 28937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 28829,
											"end": 28937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28829,
											"end": 28937,
											"name": "tag",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 28829,
											"end": 28937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28821,
											"end": 28937,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28821,
											"end": 28937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28310,
											"end": 28944,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 28310,
											"end": 28944,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 28310,
											"end": 28944,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28310,
											"end": 28944,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28310,
											"end": 28944,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28310,
											"end": 28944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28950,
											"end": 29048,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 28950,
											"end": 29048,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29001,
											"end": 29007,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29035,
											"end": 29040,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29029,
											"end": 29041,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 29019,
											"end": 29041,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29019,
											"end": 29041,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28950,
											"end": 29048,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28950,
											"end": 29048,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28950,
											"end": 29048,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28950,
											"end": 29048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29054,
											"end": 29222,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 29054,
											"end": 29222,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29137,
											"end": 29148,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29171,
											"end": 29177,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29166,
											"end": 29169,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29159,
											"end": 29178,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29211,
											"end": 29215,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29206,
											"end": 29209,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29202,
											"end": 29216,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29187,
											"end": 29216,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29187,
											"end": 29216,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29054,
											"end": 29222,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 29054,
											"end": 29222,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29054,
											"end": 29222,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29054,
											"end": 29222,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29054,
											"end": 29222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29228,
											"end": 29601,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 29228,
											"end": 29601,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29314,
											"end": 29317,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29342,
											"end": 29380,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "642"
										},
										{
											"begin": 29374,
											"end": 29379,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29342,
											"end": 29380,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 29342,
											"end": 29380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29342,
											"end": 29380,
											"name": "tag",
											"source": 15,
											"value": "642"
										},
										{
											"begin": 29342,
											"end": 29380,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29396,
											"end": 29466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 29459,
											"end": 29465,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29454,
											"end": 29457,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 29396,
											"end": 29466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 29396,
											"end": 29466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29396,
											"end": 29466,
											"name": "tag",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 29396,
											"end": 29466,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29389,
											"end": 29466,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 29389,
											"end": 29466,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29475,
											"end": 29540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "644"
										},
										{
											"begin": 29533,
											"end": 29539,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29528,
											"end": 29531,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 29521,
											"end": 29525,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29514,
											"end": 29519,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 29510,
											"end": 29526,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29475,
											"end": 29540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 29475,
											"end": 29540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29475,
											"end": 29540,
											"name": "tag",
											"source": 15,
											"value": "644"
										},
										{
											"begin": 29475,
											"end": 29540,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29565,
											"end": 29594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 29587,
											"end": 29593,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29565,
											"end": 29594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 29565,
											"end": 29594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29565,
											"end": 29594,
											"name": "tag",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 29565,
											"end": 29594,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29560,
											"end": 29563,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29556,
											"end": 29595,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29549,
											"end": 29595,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29549,
											"end": 29595,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29318,
											"end": 29601,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29228,
											"end": 29601,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 29228,
											"end": 29601,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29228,
											"end": 29601,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29228,
											"end": 29601,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29228,
											"end": 29601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 30358,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 29607,
											"end": 30358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29830,
											"end": 29834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29868,
											"end": 29871,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 29857,
											"end": 29866,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29845,
											"end": 29872,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29845,
											"end": 29872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29882,
											"end": 29953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "647"
										},
										{
											"begin": 29950,
											"end": 29951,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29948,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29935,
											"end": 29952,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29926,
											"end": 29932,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 29882,
											"end": 29953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 29882,
											"end": 29953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29882,
											"end": 29953,
											"name": "tag",
											"source": 15,
											"value": "647"
										},
										{
											"begin": 29882,
											"end": 29953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29963,
											"end": 30035,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 30031,
											"end": 30033,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30020,
											"end": 30029,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30016,
											"end": 30034,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30007,
											"end": 30013,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 29963,
											"end": 30035,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 29963,
											"end": 30035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29963,
											"end": 30035,
											"name": "tag",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 29963,
											"end": 30035,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30045,
											"end": 30117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "649"
										},
										{
											"begin": 30113,
											"end": 30115,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 30102,
											"end": 30111,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30098,
											"end": 30116,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30089,
											"end": 30095,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 30045,
											"end": 30117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 30045,
											"end": 30117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30045,
											"end": 30117,
											"name": "tag",
											"source": 15,
											"value": "649"
										},
										{
											"begin": 30045,
											"end": 30117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30127,
											"end": 30199,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 30195,
											"end": 30197,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 30184,
											"end": 30193,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30180,
											"end": 30198,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30171,
											"end": 30177,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 30127,
											"end": 30199,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 30127,
											"end": 30199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30127,
											"end": 30199,
											"name": "tag",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 30127,
											"end": 30199,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30247,
											"end": 30256,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30241,
											"end": 30245,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30237,
											"end": 30257,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30231,
											"end": 30234,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 30220,
											"end": 30229,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30216,
											"end": 30235,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30209,
											"end": 30258,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 30275,
											"end": 30351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "651"
										},
										{
											"begin": 30346,
											"end": 30350,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30337,
											"end": 30343,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 30275,
											"end": 30351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 30275,
											"end": 30351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30275,
											"end": 30351,
											"name": "tag",
											"source": 15,
											"value": "651"
										},
										{
											"begin": 30275,
											"end": 30351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30267,
											"end": 30351,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30267,
											"end": 30351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 30358,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 30358,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 30358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 30358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 30358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 30358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 30358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 30358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 30358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30364,
											"end": 30505,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 30364,
											"end": 30505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30420,
											"end": 30425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30451,
											"end": 30457,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30445,
											"end": 30458,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 30436,
											"end": 30458,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30436,
											"end": 30458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30467,
											"end": 30499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "653"
										},
										{
											"begin": 30493,
											"end": 30498,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30467,
											"end": 30499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 30467,
											"end": 30499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30467,
											"end": 30499,
											"name": "tag",
											"source": 15,
											"value": "653"
										},
										{
											"begin": 30467,
											"end": 30499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30364,
											"end": 30505,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30364,
											"end": 30505,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30364,
											"end": 30505,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30364,
											"end": 30505,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30364,
											"end": 30505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30511,
											"end": 30860,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 30511,
											"end": 30860,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30580,
											"end": 30586,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30629,
											"end": 30631,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30617,
											"end": 30626,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30608,
											"end": 30615,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 30604,
											"end": 30627,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30600,
											"end": 30632,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 30597,
											"end": 30716,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 30597,
											"end": 30716,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "655"
										},
										{
											"begin": 30597,
											"end": 30716,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 30635,
											"end": 30714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 30635,
											"end": 30714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 30635,
											"end": 30714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30635,
											"end": 30714,
											"name": "tag",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 30635,
											"end": 30714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30597,
											"end": 30716,
											"name": "tag",
											"source": 15,
											"value": "655"
										},
										{
											"begin": 30597,
											"end": 30716,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30755,
											"end": 30756,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30780,
											"end": 30843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "657"
										},
										{
											"begin": 30835,
											"end": 30842,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 30826,
											"end": 30832,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30815,
											"end": 30824,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 30811,
											"end": 30833,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30780,
											"end": 30843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 30780,
											"end": 30843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30780,
											"end": 30843,
											"name": "tag",
											"source": 15,
											"value": "657"
										},
										{
											"begin": 30780,
											"end": 30843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30770,
											"end": 30843,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30770,
											"end": 30843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30726,
											"end": 30853,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30511,
											"end": 30860,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30511,
											"end": 30860,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30511,
											"end": 30860,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30511,
											"end": 30860,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30511,
											"end": 30860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30866,
											"end": 31919,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 30866,
											"end": 31919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31189,
											"end": 31193,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31227,
											"end": 31230,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 31216,
											"end": 31225,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31212,
											"end": 31231,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31204,
											"end": 31231,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31204,
											"end": 31231,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31241,
											"end": 31312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 31309,
											"end": 31310,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31298,
											"end": 31307,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31294,
											"end": 31311,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31285,
											"end": 31291,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 31241,
											"end": 31312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 31241,
											"end": 31312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31241,
											"end": 31312,
											"name": "tag",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 31241,
											"end": 31312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31322,
											"end": 31394,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 31390,
											"end": 31392,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31379,
											"end": 31388,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31375,
											"end": 31393,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31366,
											"end": 31372,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 31322,
											"end": 31394,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 31322,
											"end": 31394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31322,
											"end": 31394,
											"name": "tag",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 31322,
											"end": 31394,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31441,
											"end": 31450,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31435,
											"end": 31439,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31431,
											"end": 31451,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31426,
											"end": 31428,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 31415,
											"end": 31424,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31411,
											"end": 31429,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31404,
											"end": 31452,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 31469,
											"end": 31577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 31572,
											"end": 31576,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31563,
											"end": 31569,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 31469,
											"end": 31577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 31469,
											"end": 31577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31469,
											"end": 31577,
											"name": "tag",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 31469,
											"end": 31577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31461,
											"end": 31577,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31461,
											"end": 31577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31624,
											"end": 31633,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31618,
											"end": 31622,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31614,
											"end": 31634,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31609,
											"end": 31611,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 31598,
											"end": 31607,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31594,
											"end": 31612,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31587,
											"end": 31635,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 31652,
											"end": 31760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 31755,
											"end": 31759,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31746,
											"end": 31752,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 31652,
											"end": 31760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 31652,
											"end": 31760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31652,
											"end": 31760,
											"name": "tag",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 31652,
											"end": 31760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31644,
											"end": 31760,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31644,
											"end": 31760,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31808,
											"end": 31817,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31802,
											"end": 31806,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31798,
											"end": 31818,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 31792,
											"end": 31795,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 31781,
											"end": 31790,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31777,
											"end": 31796,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31770,
											"end": 31819,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 31836,
											"end": 31912,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 31907,
											"end": 31911,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31898,
											"end": 31904,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31836,
											"end": 31912,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 31836,
											"end": 31912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31836,
											"end": 31912,
											"name": "tag",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 31836,
											"end": 31912,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31828,
											"end": 31912,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31828,
											"end": 31912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30866,
											"end": 31919,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 30866,
											"end": 31919,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 30866,
											"end": 31919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30866,
											"end": 31919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30866,
											"end": 31919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30866,
											"end": 31919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30866,
											"end": 31919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30866,
											"end": 31919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30866,
											"end": 31919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"currentID()": "1c75cfb4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256,string)": "77097fc8",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256)": "0febdd49",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SongNFT.sol\":\"SongNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0xb4eb1c685e07054beaab5d980a18dec0ea59470154fa1ef847f8cfb6ddc1f543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cea55f4390e3c35e08616bb3c4932ab54157eb60e3939798860b26bdd62fac0\",\"dweb:/ipfs/QmWTMWhGVPnaGhwExT8618GSqm2gejaf8yanp9fjsd8oQS\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/SongNFT.sol\":{\"keccak256\":\"0xc033afc63042b046c0ed39a13f3231a19634a855327d5056eba4810f3979f323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5344d2a0aa68ba2e2273056a5ed51d92f321e243b323e02ac1641ca2532612d9\",\"dweb:/ipfs/QmSAGPU6R4XXTiv4THERDDue4NfRck8oihJyjuuUQEcpmG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1367,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "_baseURI",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1371,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 3244,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "currentID",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1639
						],
						"Context": [
							1669
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							2058
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1456
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							2070
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1311,
							"src": "135:40:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "143:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1353,
							"src": "176:56:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1352,
										"src": "184:16:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1457,
							"src": "233:73:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "241:19:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1670,
							"src": "307:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1669,
										"src": "315:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 2059,
							"src": "356:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2070,
										"src": "364:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 148,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2058,
										"src": "373:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1640,
							"src": "426:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1639,
										"src": "434:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 137,
							"src": "473:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "481:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"756:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1669,
										"src": "756:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"765:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2058,
										"src": "765:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "773:8:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1456,
										"src": "783:19:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 136,
										"src": "804:14:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187,
								136,
								1456,
								1310,
								2058,
								2070,
								1669
							],
							"name": "ERC1155",
							"nameLocation": "745:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 168,
									"libraryName": {
										"id": 165,
										"name": "Arrays",
										"nameLocations": [
											"831:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1639,
										"src": "831:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:1",
									"typeName": {
										"baseType": {
											"id": 166,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 167,
										"nodeType": "ArrayTypeName",
										"src": "842:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 172,
									"libraryName": {
										"id": 169,
										"name": "Arrays",
										"nameLocations": [
											"863:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1639,
										"src": "863:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:1",
									"typeName": {
										"baseType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 171,
										"nodeType": "ArrayTypeName",
										"src": "874:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "890:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 177,
										"keyName": "id",
										"keyNameLocation": "906:2:1",
										"keyType": {
											"id": 173,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 176,
											"keyName": "account",
											"keyNameLocation": "928:7:1",
											"keyType": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "973:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "989:7:1",
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"keyName": "operator",
											"keyNameLocation": "1016:8:1",
											"keyType": {
												"id": 180,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "1182:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 185,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1283:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1301:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 192,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1293:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1263:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:1"
									},
									"scope": 1187,
									"src": "1251:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2057,
										2069
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1488:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1517:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 210,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "1537:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 209,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1310",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1574:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "1594:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1456_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1456_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 215,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1456",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1666:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 221,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1187_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2057,
															"src": "1642:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 226,
												"nodeType": "Return",
												"src": "1498:180:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 202,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2058,
												"src": "1456:6:1"
											},
											{
												"id": 203,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2070,
												"src": "1464:7:1"
											}
										],
										"src": "1447:25:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1407:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1482:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:1"
									},
									"scope": 1187,
									"src": "1380:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2159:28:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "2176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "2169:11:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2097:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2144:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:1"
									},
									"scope": 1187,
									"src": "2084:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2333:46:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 249,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2350:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2360:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"id": 252,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "2364:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "2343:29:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:1",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2266:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2283:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2324:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:1"
									},
									"scope": 1187,
									"src": "2247:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2678:410:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 269,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2692:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 271,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2711:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2688:121:1",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "2723:86:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 275,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "2770:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 277,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "2782:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 274,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2744:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 280,
															"nodeType": "RevertStatement",
															"src": "2737:61:1"
														}
													]
												}
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2819:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 286,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2866:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:1"
											},
											{
												"body": {
													"id": 321,
													"nodeType": "Block",
													"src": "2939:112:1",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 306,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2953:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"id": 307,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "2967:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 312,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3010:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 310,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "2982:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1638,
																				"src": "2982:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 316,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3037:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 314,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 263,
																					"src": "3014:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1625,
																				"src": "3014:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 309,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "2972:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 299,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2913:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 300,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2917:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"initializationExpression": {
													"assignments": [
														296
													],
													"declarations": [
														{
															"constant": false,
															"id": 296,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 322,
															"src": "2898:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 295,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 298,
													"initialValue": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:1",
														"subExpression": {
															"id": 303,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2936:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:1"
											},
											{
												"expression": {
													"id": 323,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "3068:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 324,
												"nodeType": "Return",
												"src": "3061:20:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2569:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2604:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2660:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:1"
									},
									"scope": 1187,
									"src": "2536:552:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "3231:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "3260:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3274:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3284:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3241:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3183:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3201:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 1187,
									"src": "3156:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "3463:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 352,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3480:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 354,
														"indexExpression": {
															"id": 353,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "3499:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 356,
													"indexExpression": {
														"id": 355,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3508:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "3473:44:1"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3393:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3410:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3457:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:1"
									},
									"scope": 1187,
									"src": "3367:157:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3704:238:1",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "3714:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "3731:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3757:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 379,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3765:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 382,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3793:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 383,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "3799:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 381,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "3776:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "3753:129:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "3808:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 388,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "3858:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 389,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3866:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 387,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3829:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 391,
															"nodeType": "RevertStatement",
															"src": "3822:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3909:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3915:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3919:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3923:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3930:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "3891:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:1"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3617:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3631:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3643:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3670:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:1"
									},
									"scope": 1187,
									"src": "3591:351:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1309
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4198:245:1",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "4208:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 421,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "4225:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 425,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4259:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 428,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4287:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4293:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4270:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4247:129:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4302:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "4352:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 435,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "4360:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 433,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4323:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4316:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4408:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4414:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4418:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 444,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4423:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4431:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "4385:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4054:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4076:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4096:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4126:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4159:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:1"
									},
									"scope": 1187,
									"src": "4014:429:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5251:1174:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5265:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 465,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "5279:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "5261:117:1",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "5294:84:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 469,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "5341:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 471,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "5353:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 468,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "5315:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 474,
															"nodeType": "RevertStatement",
															"src": "5308:59:1"
														}
													]
												}
											},
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 601,
														"src": "5388:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 479,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "5407:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:1"
											},
											{
												"body": {
													"id": 562,
													"nodeType": "Block",
													"src": "5471:650:1",
													"statements": [
														{
															"assignments": [
																494
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 494,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5485:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 499,
															"initialValue": {
																"arguments": [
																	{
																		"id": 497,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5521:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 495,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "5498:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "5498:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:1"
														},
														{
															"assignments": [
																501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 501,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5537:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 506,
															"initialValue": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5579:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 502,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5553:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "5553:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "5600:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 508,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 545,
															"nodeType": "IfStatement",
															"src": "5596:420:1",
															"trueBody": {
																"id": 544,
																"nodeType": "Block",
																"src": "5620:396:1",
																"statements": [
																	{
																		"assignments": [
																			514
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 514,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 544,
																				"src": "5638:19:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 520,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 515,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "5660:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 517,
																				"indexExpression": {
																					"id": 516,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "5670:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 519,
																			"indexExpression": {
																				"id": 518,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "5674:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 521,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "5701:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 522,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "5715:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 532,
																		"nodeType": "IfStatement",
																		"src": "5697:129:1",
																		"trueBody": {
																			"id": 531,
																			"nodeType": "Block",
																			"src": "5722:104:1",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 525,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 452,
																								"src": "5778:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 526,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 514,
																								"src": "5784:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 527,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 501,
																								"src": "5797:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 528,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5804:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 524,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 101,
																							"src": "5751:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																								"typeString": "function (address,uint256,uint256,uint256) pure returns (error)"
																							}
																						},
																						"id": 529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_error",
																							"typeString": "error"
																						}
																					},
																					"id": 530,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:1"
																				}
																			]
																		}
																	},
																	{
																		"id": 543,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:1",
																		"statements": [
																			{
																				"expression": {
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 533,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 178,
																								"src": "5942:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 536,
																							"indexExpression": {
																								"id": 534,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5952:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 537,
																						"indexExpression": {
																							"id": 535,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 452,
																							"src": "5956:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 538,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 514,
																							"src": "5964:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 539,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 501,
																							"src": "5978:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 542,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:1"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6034:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 547,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 561,
															"nodeType": "IfStatement",
															"src": "6030:81:1",
															"trueBody": {
																"id": 560,
																"nodeType": "Block",
																"src": "6052:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 552,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "6070:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 555,
																					"indexExpression": {
																						"id": 553,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6080:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 556,
																				"indexExpression": {
																					"id": 554,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "6084:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 557,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "6091:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 559,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5450:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 487,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5454:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"initializationExpression": {
													"assignments": [
														483
													],
													"declarations": [
														{
															"constant": false,
															"id": 483,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 563,
															"src": "5435:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 485,
													"initialValue": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:1",
														"subExpression": {
															"id": 490,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5468:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 492,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 564,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6135:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "6343:76:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6386:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6392:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6396:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 596,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6401:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 591,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "6362:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "6357:51:1"
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "6131:288:1",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "6152:185:1",
													"statements": [
														{
															"assignments": [
																569
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 569,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6166:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 574,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 570,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6179:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "6179:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:1"
														},
														{
															"assignments": [
																576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 576,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6218:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 575,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 581,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 577,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6234:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "6234:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 583,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6296:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6306:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 585,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6312:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 586,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "6316:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 587,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "6320:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 582,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "6281:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 589,
															"nodeType": "EmitStatement",
															"src": "6276:50:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:1",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5161:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5175:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5187:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5209:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 459,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:1"
									},
									"scope": 1187,
									"src": "5144:1281:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "7195:499:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7213:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7219:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7223:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 622,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "7228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 618,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "7205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7249:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 626,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "7245:443:1",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "7267:421:1",
													"statements": [
														{
															"assignments": [
																632
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 632,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 675,
																	"src": "7281:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 635,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 633,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "7300:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 636,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "7330:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "7571:107:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 665,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7625:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 666,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7635:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 667,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7641:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 668,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7645:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 669,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7650:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 670,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7658:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 664,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7589:35:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 672,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:1"
																	}
																]
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "7326:352:1",
															"trueBody": {
																"id": 663,
																"nodeType": "Block",
																"src": "7347:218:1",
																"statements": [
																	{
																		"assignments": [
																			641
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 641,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7365:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 640,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 646,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 642,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7378:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1625,
																				"src": "7378:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:1"
																	},
																	{
																		"assignments": [
																			648
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 648,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7421:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 647,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 653,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 649,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7437:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1625,
																				"src": "7437:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7514:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7524:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 657,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7530:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 658,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "7534:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 659,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 648,
																					"src": "7538:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 660,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7545:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 654,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "7483:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 662,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:1",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7049:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7071:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7091:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 609,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7121:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7154:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:1"
									},
									"scope": 1187,
									"src": "7004:690:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "8259:355:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8273:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 693,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "8269:88:1",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "8291:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 698,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8312:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 704,
															"nodeType": "RevertStatement",
															"src": "8305:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 707,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "8370:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 708,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "8366:88:1",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "8390:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 714,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 713,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "8411:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 719,
															"nodeType": "RevertStatement",
															"src": "8404:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													726,
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8464:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 724,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 725,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8486:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 727,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "8532:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "8536:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "8513:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8579:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "8585:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "8589:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "8594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 740,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 735,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8552:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:1"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:1",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8178:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8192:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8204:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8216:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8231:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:1"
									},
									"scope": 1187,
									"src": "8151:463:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "9194:266:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9208:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 761,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "9204:88:1",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "9226:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 767,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 766,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "9247:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 772,
															"nodeType": "RevertStatement",
															"src": "9240:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "9305:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "9301:88:1",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "9325:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 782,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "9346:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "9339:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9425:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9431:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9435:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 794,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9440:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "9448:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 790,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9398:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:1"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9056:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9078:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9098:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 750,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9128:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 753,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 754,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9161:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:1"
									},
									"scope": 1187,
									"src": "9015:445:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "10338:30:1",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "10348:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 806,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "10355:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:1"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10299:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:1"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:1"
									},
									"scope": 1187,
									"src": "10282:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "10828:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "10842:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 823,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "10838:88:1",
												"trueBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "10860:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 829,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 828,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "10881:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 834,
															"nodeType": "RevertStatement",
															"src": "10874:41:1"
														}
													]
												}
											},
											{
												"assignments": [
													841,
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10936:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 839,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10958:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 842,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 843,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11004:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 847,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "11008:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "10985:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11063:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11067:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 857,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "11072:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 858,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 850,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11024:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:1"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:1",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10761:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10773:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10785:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10800:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:1"
									},
									"scope": 1187,
									"src": "10746:346:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "11630:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "11644:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 877,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "11640:88:1",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "11662:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 883,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 882,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "11683:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 888,
															"nodeType": "RevertStatement",
															"src": "11676:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "11776:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "11780:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 898,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "11785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 899,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "11793:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11737:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:1"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11543:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11555:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 866,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 867,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11577:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 869,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 870,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11602:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:1"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:1"
									},
									"scope": 1187,
									"src": "11523:282:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "12164:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "12178:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 914,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "12174:88:1",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "12198:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 920,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 919,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12219:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 925,
															"nodeType": "RevertStatement",
															"src": "12212:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													932,
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12272:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 930,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 931,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12294:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 933,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 934,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"arguments": [
														{
															"id": 937,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12340:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 938,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "12344:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "12321:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 942,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "12387:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 943,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "12405:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 948,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "12410:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 941,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12360:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:1"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:1",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12114:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12128:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12140:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:1"
									},
									"scope": 1187,
									"src": "12099:329:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "12874:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "12888:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 966,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "12884:88:1",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "12908:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 972,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 971,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12929:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 977,
															"nodeType": "RevertStatement",
															"src": "12922:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 981,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "13008:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "13026:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 987,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "13031:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 980,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12981:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:1"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12804:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12818:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 957,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 958,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12840:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 960,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 961,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:1"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:1"
									},
									"scope": 1187,
									"src": "12784:265:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "13361:222:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "13375:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1003,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "13371:94:1",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "13399:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1009,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1008,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "13420:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1014,
															"nodeType": "RevertStatement",
															"src": "13413:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1017,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "13474:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1020,
															"indexExpression": {
																"id": 1018,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "13493:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1019,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13500:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1022,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "13512:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1026,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "13550:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13557:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "13567:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1025,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "13535:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "EmitStatement",
												"src": "13530:46:1"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13296:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13311:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13329:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:1"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:1"
									},
									"scope": 1187,
									"src": "13268:315:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "13953:782:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1048,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "13967:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "13963:766:1",
												"trueBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "13987:742:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1077,
																		"nodeType": "Block",
																		"src": "14103:206:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1070,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1066,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1064,
																						"src": "14125:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1067,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "14137:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1068,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:1",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1333,
																							"src": "14137:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1069,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1076,
																				"nodeType": "IfStatement",
																				"src": "14121:174:1",
																				"trueBody": {
																					"id": 1075,
																					"nodeType": "Block",
																					"src": "14182:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1072,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14273:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1071,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14250:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1073,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1074,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1078,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1065,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1064,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1078,
																				"src": "14086:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1063,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:1"
																	},
																	"src": "14077:232:1"
																},
																{
																	"block": {
																		"id": 1094,
																		"nodeType": "Block",
																		"src": "14338:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1082,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1080,
																							"src": "14360:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1092,
																					"nodeType": "Block",
																					"src": "14515:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:1",
																								"nodeType": "YulBlock",
																								"src": "14601:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:1",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:1"
																													},
																													"nativeSrc": "14634:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:1"
																													},
																													"nativeSrc": "14651:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:1"
																											},
																											"nativeSrc": "14627:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:1"
																										},
																										"nativeSrc": "14627:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1091,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:1"
																						}
																					]
																				},
																				"id": 1093,
																				"nodeType": "IfStatement",
																				"src": "14356:349:1",
																				"trueBody": {
																					"id": 1090,
																					"nodeType": "Block",
																					"src": "14380:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1087,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14487:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1086,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14464:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1088,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1089,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1095,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1081,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1080,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1095,
																				"src": "14317:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1079,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:1"
																	},
																	"src": "14310:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1057,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "14044:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "14054:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1059,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "14060:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1060,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "14064:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1061,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "14071:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1054,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "14022:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1053,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "14005:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:1",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1333,
																	"src": "14005:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1096,
															"nodeType": "TryStatement",
															"src": "14001:718:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:1",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13810:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13836:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13858:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13878:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13898:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13921:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:1"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:1"
									},
									"scope": 1187,
									"src": "13761:974:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "15140:824:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1118,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "15154:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"nodeType": "IfStatement",
												"src": "15150:808:1",
												"trueBody": {
													"id": 1167,
													"nodeType": "Block",
													"src": "15174:784:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1147,
																		"nodeType": "Block",
																		"src": "15327:211:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1136,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "15349:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1137,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "15361:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1138,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:1",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1351,
																							"src": "15361:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1146,
																				"nodeType": "IfStatement",
																				"src": "15345:179:1",
																				"trueBody": {
																					"id": 1145,
																					"nodeType": "Block",
																					"src": "15411:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1142,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15502:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1141,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15479:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1143,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1144,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1148,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1135,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1134,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1148,
																				"src": "15297:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1133,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:1"
																	},
																	"src": "15271:267:1"
																},
																{
																	"block": {
																		"id": 1164,
																		"nodeType": "Block",
																		"src": "15567:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1152,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1150,
																							"src": "15589:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1162,
																					"nodeType": "Block",
																					"src": "15744:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:1",
																								"nodeType": "YulBlock",
																								"src": "15830:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:1",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:1"
																													},
																													"nativeSrc": "15863:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:1"
																													},
																													"nativeSrc": "15880:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:1"
																											},
																											"nativeSrc": "15856:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:1"
																										},
																										"nativeSrc": "15856:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1161,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:1"
																						}
																					]
																				},
																				"id": 1163,
																				"nodeType": "IfStatement",
																				"src": "15585:349:1",
																				"trueBody": {
																					"id": 1160,
																					"nodeType": "Block",
																					"src": "15609:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1157,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15716:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1156,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15693:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1158,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1159,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1165,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1151,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1150,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1165,
																				"src": "15546:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1149,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:1"
																	},
																	"src": "15539:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "15236:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1128,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "15246:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1129,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "15252:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1130,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "15257:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "15265:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1124,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "15209:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1123,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "15192:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:1",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1351,
																	"src": "15192:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1166,
															"nodeType": "TryStatement",
															"src": "15188:760:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:1",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "14977:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15003:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15045:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15075:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1111,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15108:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:1"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:1"
									},
									"scope": 1187,
									"src": "14923:1041:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "16238:691:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:1",
													"nodeType": "YulBlock",
													"src": "16300:623:1",
													"statements": [
														{
															"nativeSrc": "16358:21:1",
															"nodeType": "YulAssignment",
															"src": "16358:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:1"
																},
																"nativeSrc": "16368:11:1",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:1"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:1"
																},
																"nativeSrc": "16429:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:1"
															},
															"nativeSrc": "16429:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:1"
																		},
																		"nativeSrc": "16563:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:1"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:1"
																},
																"nativeSrc": "16556:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:1"
															},
															"nativeSrc": "16556:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:1"
														},
														{
															"nativeSrc": "16682:27:1",
															"nodeType": "YulAssignment",
															"src": "16682:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:1"
																},
																"nativeSrc": "16692:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:1"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:1"
																},
																"nativeSrc": "16722:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:1"
															},
															"nativeSrc": "16722:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:1"
																		},
																		"nativeSrc": "16759:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:1"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:1"
																},
																"nativeSrc": "16752:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:1"
															},
															"nativeSrc": "16752:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:1"
																		},
																		"nativeSrc": "16895:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:1"
																},
																"nativeSrc": "16882:31:1",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:1"
															},
															"nativeSrc": "16882:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1173,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:1",
														"valueSize": 1
													},
													{
														"declaration": 1175,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:1",
														"valueSize": 1
													}
												],
												"id": 1184,
												"nodeType": "InlineAssembly",
												"src": "16291:632:1"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:1",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16117:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:1"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16188:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16213:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:1"
									},
									"scope": 1187,
									"src": "16080:849:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1188,
							"src": "727:16204:1",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "109:16823:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC165": [
							2070
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 2071,
							"src": "136:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1190,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2070,
										"src": "144:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1193,
										"name": "IERC165",
										"nameLocations": [
											"358:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2070,
										"src": "358:7:2"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1192,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								2070
							],
							"name": "IERC1155",
							"nameLocation": "346:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:2",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1207,
									"name": "TransferSingle",
									"nameLocation": "508:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "523:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "549:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "571:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "591:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "603:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:2"
									},
									"src": "502:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1222,
									"name": "TransferBatch",
									"nameLocation": "779:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "802:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "836:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "866:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "894:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1215,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1216,
													"nodeType": "ArrayTypeName",
													"src": "894:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "917:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1218,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1219,
													"nodeType": "ArrayTypeName",
													"src": "917:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:2"
									},
									"src": "773:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1231,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1119:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1144:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1170:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:2"
									},
									"src": "1098:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1238,
									"name": "URI",
									"nameLocation": "1545:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1549:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1563:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:2"
									},
									"src": "1539:44:2"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:2",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1785:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:2"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1837:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:2"
									},
									"scope": 1310,
									"src": "1766:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2078:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1250,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1251,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2115:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1253,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1254,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2167:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:2"
									},
									"scope": 1310,
									"src": "2045:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2471:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2489:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:2"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:2"
									},
									"scope": 1310,
									"src": "2444:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2685:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2702:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:2"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2743:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:2"
									},
									"scope": 1310,
									"src": "2659:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3696:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3710:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3722:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3734:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3749:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:2"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:2"
									},
									"scope": 1310,
									"src": "3670:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "3785:814:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4613:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4652:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4644:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4674:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4666:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4705:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4686:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4686:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ArrayTypeName",
													"src": "4686:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4737:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4718:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4718:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1303,
													"nodeType": "ArrayTypeName",
													"src": "4718:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4753:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:144:2"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4787:0:2"
									},
									"scope": 1310,
									"src": "4604:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1311,
							"src": "336:4454:2",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "110:4681:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							2070
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 2071,
							"src": "144:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1313,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2070,
										"src": "152:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1316,
										"name": "IERC165",
										"nameLocations": [
											"357:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2070,
										"src": "357:7:3"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:3",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								2070
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:3",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1238:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1264:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1286:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1306:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1329:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:3"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1373:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:3"
									},
									"scope": 1352,
									"src": "1202:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:3",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2427:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2453:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2475:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1339,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1340,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2507:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1342,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1343,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2542:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:3"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2586:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:3"
									},
									"scope": 1352,
									"src": "2386:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1353,
							"src": "327:2269:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
					"exportedSymbols": {
						"ERC1155": [
							1187
						],
						"ERC1155URIStorage": [
							1440
						],
						"Strings": [
							2034
						]
					},
					"id": 1441,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "130:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 2035,
							"src": "156:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1355,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2034,
										"src": "164:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 1188,
							"src": "208:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1357,
										"name": "ERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1187,
										"src": "216:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1360,
										"name": "ERC1155",
										"nameLocations": [
											"405:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "405:7:4"
									},
									"id": 1361,
									"nodeType": "InheritanceSpecifier",
									"src": "405:7:4"
								}
							],
							"canonicalName": "ERC1155URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1359,
								"nodeType": "StructuredDocumentation",
								"src": "249:116:4",
								"text": " @dev ERC1155 token with storage based token URI management.\n Inspired by the ERC721URIStorage extension"
							},
							"fullyImplemented": true,
							"id": 1440,
							"linearizedBaseContracts": [
								1440,
								1187,
								136,
								1456,
								1310,
								2058,
								2070,
								1669
							],
							"name": "ERC1155URIStorage",
							"nameLocation": "384:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1364,
									"libraryName": {
										"id": 1362,
										"name": "Strings",
										"nameLocations": [
											"425:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2034,
										"src": "425:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "419:26:4",
									"typeName": {
										"id": 1363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "437:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1367,
									"mutability": "mutable",
									"name": "_baseURI",
									"nameLocation": "491:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "476:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1365,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "476:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "",
										"id": 1366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "502:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1371,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "593:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "550:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1370,
										"keyName": "tokenId",
										"keyNameLocation": "566:7:4",
										"keyType": {
											"id": 1368,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "558:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "550:34:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1369,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "577:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										239
									],
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "1414:249:4",
										"statements": [
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "tokenURI",
														"nameLocation": "1438:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1405,
														"src": "1424:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1380,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1424:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"baseExpression": {
														"id": 1382,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "1449:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1384,
													"indexExpression": {
														"id": 1383,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "1460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1449:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1424:44:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1388,
																		"name": "tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "1579:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1573:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1386,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1573:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1573:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1589:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1573:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1598:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1573:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 1401,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "1648:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1399,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1638:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155URIStorage_$1440_$",
																	"typeString": "type(contract super ERC1155URIStorage)"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1644:3:4",
															"memberName": "uri",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 239,
															"src": "1638:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256) view returns (string memory)"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1638:18:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1573:83:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 1396,
																"name": "_baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "1616:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															{
																"id": 1397,
																"name": "tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "1626:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1602:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 1393,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "1602:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1609:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "1602:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1602:33:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1404,
												"nodeType": "Return",
												"src": "1566:90:4"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "610:716:4",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the concatenation of the `_baseURI`\n and the token-specific uri if the latter is set\n This enables the following behaviors:\n - if `_tokenURIs[tokenId]` is set, then the result is the concatenation\n   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`\n   is empty per default);\n - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`\n   which in most cases will contain `ERC1155._uri`;\n - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a\n   uri value set, then the result is empty."
									},
									"functionSelector": "0e89341c",
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1340:3:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1376,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1381:8:4"
									},
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1352:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "1344:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1343:17:4"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "1399:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1377,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1399:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:15:4"
									},
									"scope": 1440,
									"src": "1331:332:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "1818:88:4",
										"statements": [
											{
												"expression": {
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1414,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "1828:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1416,
														"indexExpression": {
															"id": 1415,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "1839:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1828:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1417,
														"name": "tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "1850:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1828:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "1828:30:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1422,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "1881:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1421,
																"name": "uri",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1406
																],
																"referencedDeclaration": 1406,
																"src": "1877:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) view returns (string memory)"
																}
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1877:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1424,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "1891:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1420,
														"name": "URI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "1873:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "EmitStatement",
												"src": "1868:31:4"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "1669:69:4",
										"text": " @dev Sets `tokenURI` as the tokenURI of `tokenId`."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "1752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1768:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "1760:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "1791:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "1777:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1777:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:41:4"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:4"
									},
									"scope": 1440,
									"src": "1743:163:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "2049:35:4",
										"statements": [
											{
												"expression": {
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1434,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "2059:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1435,
														"name": "baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "2070:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2059:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "2059:18:4"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "1912:71:4",
										"text": " @dev Sets `baseURI` as the `_baseURI` for all tokens"
									},
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBaseURI",
									"nameLocation": "1997:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "baseURI",
												"nameLocation": "2023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "2009:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:23:4"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:0:4"
									},
									"scope": 1440,
									"src": "1988:96:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1441,
							"src": "366:1720:4",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "130:1957:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC1155MetadataURI": [
							1456
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1442,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1444,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1311,
							"src": "158:41:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1443,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "166:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1446,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "399:8:5"
									},
									"id": 1447,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1456,
							"linearizedBaseContracts": [
								1456,
								1310,
								2070
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "624:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:5"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "659:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:5"
									},
									"scope": 1456,
									"src": "611:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1457,
							"src": "366:310:5",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "132:545:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1639
						],
						"Math": [
							3124
						],
						"StorageSlot": [
							1779
						]
					},
					"id": 1640,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1640,
							"sourceUnit": 1780,
							"src": "126:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1459,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "134:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1640,
							"sourceUnit": 3125,
							"src": "173:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3124,
										"src": "181:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:6",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1639,
							"linearizedBaseContracts": [
								1639
							],
							"name": "Arrays",
							"nameLocation": "284:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1466,
									"libraryName": {
										"id": 1464,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1779,
										"src": "303:11:6"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:6",
									"typeName": {
										"id": 1465,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "843:834:6",
										"statements": [
											{
												"assignments": [
													1478
												],
												"declarations": [
													{
														"constant": false,
														"id": 1478,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1548,
														"src": "853:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"hexValue": "30",
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:6"
											},
											{
												"assignments": [
													1482
												],
												"declarations": [
													{
														"constant": false,
														"id": 1482,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1548,
														"src": "878:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1481,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1485,
												"initialValue": {
													"expression": {
														"id": 1483,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "893:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1486,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "920:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1492,
												"nodeType": "IfStatement",
												"src": "916:48:6",
												"trueBody": {
													"id": 1491,
													"nodeType": "Block",
													"src": "931:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1476,
															"id": 1490,
															"nodeType": "Return",
															"src": "945:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 1524,
													"nodeType": "Block",
													"src": "993:423:6",
													"statements": [
														{
															"assignments": [
																1497
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1497,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1524,
																	"src": "1007:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1496,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1503,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1500,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "1034:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1501,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1482,
																		"src": "1039:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1498,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3124,
																		"src": "1021:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3124_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2298,
																	"src": "1021:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1505,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1470,
																				"src": "1282:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1506,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1497,
																				"src": "1289:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1504,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1570,
																				1591,
																				1612
																			],
																			"referencedDeclaration": 1612,
																			"src": "1269:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1684_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1683,
																	"src": "1269:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1509,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "1302:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1522,
																"nodeType": "Block",
																"src": "1360:46:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1516,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1478,
																				"src": "1378:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1517,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1497,
																					"src": "1384:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1518,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1521,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:6"
																	}
																]
															},
															"id": 1523,
															"nodeType": "IfStatement",
															"src": "1265:141:6",
															"trueBody": {
																"id": 1515,
																"nodeType": "Block",
																"src": "1311:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1511,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1482,
																				"src": "1329:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1512,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1497,
																				"src": "1336:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1514,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1493,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "981:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1494,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "987:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1525,
												"nodeType": "WhileStatement",
												"src": "974:442:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1526,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "1533:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1530,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "1557:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1531,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "1564:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1529,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1570,
																		1591,
																		1612
																	],
																	"referencedDeclaration": 1612,
																	"src": "1544:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1684_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1683,
															"src": "1544:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1536,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "1582:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1546,
													"nodeType": "Block",
													"src": "1636:35:6",
													"statements": [
														{
															"expression": {
																"id": 1544,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "1657:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1476,
															"id": 1545,
															"nodeType": "Return",
															"src": "1650:10:6"
														}
													]
												},
												"id": 1547,
												"nodeType": "IfStatement",
												"src": "1529:142:6",
												"trueBody": {
													"id": 1543,
													"nodeType": "Block",
													"src": "1591:39:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1539,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1478,
																	"src": "1612:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1476,
															"id": 1542,
															"nodeType": "Return",
															"src": "1605:14:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:6",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "769:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1468,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1469,
													"nodeType": "ArrayTypeName",
													"src": "769:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "794:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:6"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "834:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:6"
									},
									"scope": 1639,
									"src": "745:932:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "1993:459:6",
										"statements": [
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "2003:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1561,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:6"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:6",
													"nodeType": "YulBlock",
													"src": "2316:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:6"
																},
																"nativeSrc": "2330:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:6"
															},
															"nativeSrc": "2330:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:6"
														},
														{
															"nativeSrc": "2362:36:6",
															"nodeType": "YulAssignment",
															"src": "2362:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:6"
																		},
																		"nativeSrc": "2374:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:6"
																},
																"nativeSrc": "2370:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1553,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1555,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1562,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:6",
														"valueSize": 1
													}
												],
												"id": 1564,
												"nodeType": "InlineAssembly",
												"src": "2307:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1565,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "2424:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:6",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "2424:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1675_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1675_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1560,
												"id": 1568,
												"nodeType": "Return",
												"src": "2417:28:6"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1901:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1551,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1552,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1924:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:6"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1960:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1675_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1558,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1557,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:6",
															"1972:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1675,
														"src": "1960:23:6"
													},
													"referencedDeclaration": 1675,
													"src": "1960:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1675_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:6"
									},
									"scope": 1639,
									"src": "1879:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "2768:459:6",
										"statements": [
											{
												"assignments": [
													1583
												],
												"declarations": [
													{
														"constant": false,
														"id": 1583,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1590,
														"src": "2778:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1582,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1584,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:6",
													"nodeType": "YulBlock",
													"src": "3091:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:6"
																},
																"nativeSrc": "3105:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:6"
															},
															"nativeSrc": "3105:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:6"
														},
														{
															"nativeSrc": "3137:36:6",
															"nodeType": "YulAssignment",
															"src": "3137:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:6"
																		},
																		"nativeSrc": "3149:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:6"
																},
																"nativeSrc": "3145:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1574,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1576,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1583,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:6",
														"valueSize": 1
													}
												],
												"id": 1585,
												"nodeType": "InlineAssembly",
												"src": "3082:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1586,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "3199:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:6",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1723,
														"src": "3199:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1681_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1681_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1589,
												"nodeType": "Return",
												"src": "3192:28:6"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2676:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2699:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:6"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2735:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1681_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1578,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:6",
															"2747:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1681,
														"src": "2735:23:6"
													},
													"referencedDeclaration": 1681,
													"src": "2735:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1681_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:6"
									},
									"scope": 1639,
									"src": "2654:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "3543:459:6",
										"statements": [
											{
												"assignments": [
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "3553:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1603,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:6",
													"nodeType": "YulBlock",
													"src": "3866:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:6"
																},
																"nativeSrc": "3880:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:6"
															},
															"nativeSrc": "3880:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:6"
														},
														{
															"nativeSrc": "3912:36:6",
															"nodeType": "YulAssignment",
															"src": "3912:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:6"
																		},
																		"nativeSrc": "3924:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:6"
																},
																"nativeSrc": "3920:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1595,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1597,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1604,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:6",
														"valueSize": 1
													}
												],
												"id": 1606,
												"nodeType": "InlineAssembly",
												"src": "3857:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1607,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "3974:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:6",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1734,
														"src": "3974:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1684_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1610,
												"nodeType": "Return",
												"src": "3967:28:6"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3451:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1593,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1594,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3474:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:6"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3510:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1600,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1599,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:6",
															"3522:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1684,
														"src": "3510:23:6"
													},
													"referencedDeclaration": 1684,
													"src": "3510:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:6"
									},
									"scope": 1639,
									"src": "3429:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "4303:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:6",
													"nodeType": "YulBlock",
													"src": "4322:73:6",
													"statements": [
														{
															"nativeSrc": "4336:49:6",
															"nodeType": "YulAssignment",
															"src": "4336:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:6"
																				},
																				"nativeSrc": "4353:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:6"
																				},
																				"nativeSrc": "4369:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:6"
																		},
																		"nativeSrc": "4349:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:6"
																},
																"nativeSrc": "4343:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1616,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1618,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:6",
														"valueSize": 1
													}
												],
												"id": 1623,
												"nodeType": "InlineAssembly",
												"src": "4313:82:6"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "4232:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1614,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1615,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "4254:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:6"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "4290:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:6"
									},
									"scope": 1639,
									"src": "4204:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "4702:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:6",
													"nodeType": "YulBlock",
													"src": "4721:73:6",
													"statements": [
														{
															"nativeSrc": "4735:49:6",
															"nodeType": "YulAssignment",
															"src": "4735:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:6"
																				},
																				"nativeSrc": "4752:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:6"
																				},
																				"nativeSrc": "4768:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:6"
																		},
																		"nativeSrc": "4748:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:6"
																},
																"nativeSrc": "4742:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1629,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1631,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:6",
														"valueSize": 1
													}
												],
												"id": 1636,
												"nodeType": "InlineAssembly",
												"src": "4712:82:6"
											}
										]
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4631:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1627,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1628,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4653:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:6"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4689:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:6"
									},
									"scope": 1639,
									"src": "4603:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1640,
							"src": "276:4526:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1669
						]
					},
					"id": 1670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1641,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1642,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1669,
							"linearizedBaseContracts": [
								1669
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1647,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1649,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1669,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1656,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1655,
												"id": 1658,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1669,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1664,
												"id": 1666,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1669,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1670,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1779
						]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1671,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1672,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1779,
							"linearizedBaseContracts": [
								1779
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1675,
									"members": [
										{
											"constant": false,
											"id": 1674,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1675,
											"src": "1300:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1673,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1271:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1678,
									"members": [
										{
											"constant": false,
											"id": 1677,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1678,
											"src": "1355:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1676,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1326:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1681,
									"members": [
										{
											"constant": false,
											"id": 1680,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1681,
											"src": "1407:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1679,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1378:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1684,
									"members": [
										{
											"constant": false,
											"id": 1683,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1684,
											"src": "1462:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1682,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1433:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1687,
									"members": [
										{
											"constant": false,
											"id": 1686,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1687,
											"src": "1516:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1685,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1488:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1690,
									"members": [
										{
											"constant": false,
											"id": 1689,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1690,
											"src": "1568:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1688,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1541:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "1768:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:8",
													"nodeType": "YulBlock",
													"src": "1830:38:8",
													"statements": [
														{
															"nativeSrc": "1844:14:8",
															"nodeType": "YulAssignment",
															"src": "1844:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:8",
																"nodeType": "YulIdentifier",
																"src": "1854:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1697,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1693,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:8",
														"valueSize": 1
													}
												],
												"id": 1699,
												"nodeType": "InlineAssembly",
												"src": "1821:47:8"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "1708:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:8"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "1745:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1675_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1696,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1695,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1675,
														"src": "1745:11:8"
													},
													"referencedDeclaration": 1675,
													"src": "1745:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1675_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:8"
									},
									"scope": 1779,
									"src": "1684:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "2056:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:8",
													"nodeType": "YulBlock",
													"src": "2118:38:8",
													"statements": [
														{
															"nativeSrc": "2132:14:8",
															"nodeType": "YulAssignment",
															"src": "2132:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:8",
																"nodeType": "YulIdentifier",
																"src": "2142:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1708,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1704,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:8",
														"valueSize": 1
													}
												],
												"id": 1710,
												"nodeType": "InlineAssembly",
												"src": "2109:47:8"
											}
										]
									},
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "1996:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1703,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:8"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "2033:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1678_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1707,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1706,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1678,
														"src": "2033:11:8"
													},
													"referencedDeclaration": 1678,
													"src": "2033:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1678_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:8"
									},
									"scope": 1779,
									"src": "1972:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "2344:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:8",
													"nodeType": "YulBlock",
													"src": "2406:38:8",
													"statements": [
														{
															"nativeSrc": "2420:14:8",
															"nodeType": "YulAssignment",
															"src": "2420:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:8",
																"nodeType": "YulIdentifier",
																"src": "2430:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1719,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1715,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:8",
														"valueSize": 1
													}
												],
												"id": 1721,
												"nodeType": "InlineAssembly",
												"src": "2397:47:8"
											}
										]
									},
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2284:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1714,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:8"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2321:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1681_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1718,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1717,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1681,
														"src": "2321:11:8"
													},
													"referencedDeclaration": 1681,
													"src": "2321:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1681_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:8"
									},
									"scope": 1779,
									"src": "2260:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "2632:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:8",
													"nodeType": "YulBlock",
													"src": "2694:38:8",
													"statements": [
														{
															"nativeSrc": "2708:14:8",
															"nodeType": "YulAssignment",
															"src": "2708:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:8",
																"nodeType": "YulIdentifier",
																"src": "2718:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1730,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1726,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:8",
														"valueSize": 1
													}
												],
												"id": 1732,
												"nodeType": "InlineAssembly",
												"src": "2685:47:8"
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2572:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1725,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:8"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2609:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1729,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1728,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1684,
														"src": "2609:11:8"
													},
													"referencedDeclaration": 1684,
													"src": "2609:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:8"
									},
									"scope": 1779,
									"src": "2548:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "2917:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:8",
													"nodeType": "YulBlock",
													"src": "2979:38:8",
													"statements": [
														{
															"nativeSrc": "2993:14:8",
															"nodeType": "YulAssignment",
															"src": "2993:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:8",
																"nodeType": "YulIdentifier",
																"src": "3003:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1737,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:8",
														"valueSize": 1
													}
												],
												"id": 1743,
												"nodeType": "InlineAssembly",
												"src": "2970:47:8"
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "2858:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1736,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:8"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "2895:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1687_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1739,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1687,
														"src": "2895:10:8"
													},
													"referencedDeclaration": 1687,
													"src": "2895:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1687_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:8"
									},
									"scope": 1779,
									"src": "2835:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "3225:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:8",
													"nodeType": "YulBlock",
													"src": "3287:44:8",
													"statements": [
														{
															"nativeSrc": "3301:20:8",
															"nodeType": "YulAssignment",
															"src": "3301:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:8",
																"nodeType": "YulIdentifier",
																"src": "3311:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1752,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1748,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1754,
												"nodeType": "InlineAssembly",
												"src": "3278:53:8"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "3158:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1747,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:8"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "3203:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1687_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1751,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1750,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1687,
														"src": "3203:10:8"
													},
													"referencedDeclaration": 1687,
													"src": "3203:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1687_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:8"
									},
									"scope": 1779,
									"src": "3135:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "3513:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:8",
													"nodeType": "YulBlock",
													"src": "3575:38:8",
													"statements": [
														{
															"nativeSrc": "3589:14:8",
															"nodeType": "YulAssignment",
															"src": "3589:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:8",
																"nodeType": "YulIdentifier",
																"src": "3599:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1763,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1759,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:8",
														"valueSize": 1
													}
												],
												"id": 1765,
												"nodeType": "InlineAssembly",
												"src": "3566:47:8"
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3455:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1758,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:8"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3492:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1690_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1762,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1761,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1690,
														"src": "3492:9:8"
													},
													"referencedDeclaration": 1690,
													"src": "3492:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1690_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:8"
									},
									"scope": 1779,
									"src": "3433:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "3816:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:8",
													"nodeType": "YulBlock",
													"src": "3878:44:8",
													"statements": [
														{
															"nativeSrc": "3892:20:8",
															"nodeType": "YulAssignment",
															"src": "3892:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:8",
																"nodeType": "YulIdentifier",
																"src": "3902:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1774,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1770,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1776,
												"nodeType": "InlineAssembly",
												"src": "3869:53:8"
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "3751:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:8"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "3795:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1690_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1772,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1690,
														"src": "3795:9:8"
													},
													"referencedDeclaration": 1690,
													"src": "3795:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1690_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:8"
									},
									"scope": 1779,
									"src": "3729:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1780,
							"src": "1245:2685:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3124
						],
						"SignedMath": [
							3229
						],
						"Strings": [
							2034
						]
					},
					"id": 2035,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2035,
							"sourceUnit": 3125,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1782,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3124,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1785,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2035,
							"sourceUnit": 3230,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1784,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3229,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1786,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2034,
							"linearizedBaseContracts": [
								2034
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1789,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2034,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1787,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1788,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1792,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2034,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1790,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1791,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1799,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1845,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1808
														],
														"declarations": [
															{
																"constant": false,
																"id": 1808,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1845,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1807,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1815,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1811,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1809,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3124,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3124_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2944,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1817
														],
														"declarations": [
															{
																"constant": false,
																"id": 1817,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1845,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1816,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1822,
														"initialValue": {
															"arguments": [
																{
																	"id": 1820,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1818,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1824
														],
														"declarations": [
															{
																"constant": false,
																"id": 1824,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1845,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1823,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1825,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1817,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1808,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1824,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1826,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1841,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1828,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1824,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1830,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1789,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1824,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1802,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1831,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1832,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1802,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1835,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1802,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1840,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1839,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1842,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1843,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1806,
														"id": 1844,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 2034,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1858,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1867,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1865,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3229,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3229_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3228,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1864,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1855,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1871,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1849,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1852,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 2034,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 1891,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1882,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1876,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1885,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1876,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1883,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3124,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3124_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3066,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1881,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1893,
																	1976,
																	1996
																],
																"referencedDeclaration": 1976,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1880,
														"id": 1890,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1878,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 2034,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1975,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													1904
												],
												"declarations": [
													{
														"constant": false,
														"id": 1904,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1975,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1906,
												"initialValue": {
													"id": 1905,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1896,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													1908
												],
												"declarations": [
													{
														"constant": false,
														"id": 1908,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1975,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1907,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1917,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1912,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1909,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1918,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1920,
														"indexExpression": {
															"hexValue": "30",
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1923,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1924,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1926,
														"indexExpression": {
															"hexValue": "31",
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 1958,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1944,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1908,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1946,
																	"indexExpression": {
																		"id": 1945,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1947,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1951,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1948,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1953,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1954,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1957,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1938,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1959,
												"initializationExpression": {
													"assignments": [
														1931
													],
													"declarations": [
														{
															"constant": false,
															"id": 1931,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1959,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1930,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1937,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1933,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 1941,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1943,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1960,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1969,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 1968,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1964,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1896,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1965,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1963,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1967,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1972,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1970,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1902,
												"id": 1974,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 2034,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1989,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1987,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1985,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1992,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1984,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1893,
															1976,
															1996
														],
														"referencedDeclaration": 1976,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1983,
												"id": 1994,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 2034,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2008,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2006,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2013,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2001,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2011,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2020,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1999,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2018,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2017,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2026,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2001,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2024,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2023,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2005,
												"id": 2031,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2000,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 2034,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2035,
							"src": "251:2847:9",
							"usedErrors": [
								1799
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2058
						],
						"IERC165": [
							2070
						]
					},
					"id": 2059,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2036,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2038,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2059,
							"sourceUnit": 2071,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2037,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2070,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2040,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2070,
										"src": "687:7:10"
									},
									"id": 2041,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2039,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2058,
							"linearizedBaseContracts": [
								2058,
								2070
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2069
									],
									"body": {
										"id": 2056,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2049,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2051,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2070,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2070_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2070_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2050,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2070",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2048,
												"id": 2055,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2043,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 2058,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2059,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2070
						]
					},
					"id": 2071,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2060,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2061,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2070,
							"linearizedBaseContracts": [
								2070
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2063,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 2070,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2071,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3124
						]
					},
					"id": 3125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2072,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2073,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3124,
							"linearizedBaseContracts": [
								3124
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2076,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2081,
									"members": [
										{
											"id": 2077,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 2078,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 2079,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 2080,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 2111,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															2094
														],
														"declarations": [
															{
																"constant": false,
																"id": 2094,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2111,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2093,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2098,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2095,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2096,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2086,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2099,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2100,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2106,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2104,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2092,
															"id": 2105,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2108,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2109,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2092,
														"id": 2110,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2082,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 3124,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 2139,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2125,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2126,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2132,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2130,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2124,
															"id": 2131,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2134,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2116,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2135,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2118,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2137,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2124,
														"id": 2138,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 3124,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2181,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2153,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2160,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2158,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2152,
															"id": 2159,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2162
														],
														"declarations": [
															{
																"constant": false,
																"id": 2162,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2181,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2161,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2166,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2163,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2164,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2146,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2167,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2168,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2170,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2146,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2176,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2174,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2152,
															"id": 2175,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2178,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2179,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2152,
														"id": 2180,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 3124,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2209,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2195,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2202,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2200,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2194,
															"id": 2201,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2204,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2186,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2205,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2188,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2207,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2194,
														"id": 2208,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 3124,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2237,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2223,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2230,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2228,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2222,
															"id": 2229,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2232,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2214,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2216,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2222,
														"id": 2236,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 3124,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2249,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2250,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2253,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2244,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2252,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2248,
												"id": 2255,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2240,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 3124,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2274,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2267,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2260,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2268,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2260,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2266,
												"id": 2273,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2258,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 3124,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2285,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2286,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2288,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2289,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2290,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2292,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2284,
												"id": 2296,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2276,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 3124,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2308,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2316,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2315,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2311,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2312,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2303,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2307,
															"id": 2314,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2317,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2301,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2321,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2301,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2324,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2303,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2307,
												"id": 2330,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2299,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 3124,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2456,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2345
														],
														"declarations": [
															{
																"constant": false,
																"id": 2345,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2456,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2344,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2349,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2346,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2335,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2347,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2337,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2351
														],
														"declarations": [
															{
																"constant": false,
																"id": 2351,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2456,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2350,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2352,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2335,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2337,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2353,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2354,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2362,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2361,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2357,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2345,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2358,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2343,
																	"id": 2360,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2363,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2364,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2370,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2369,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2366,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2368,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2372
														],
														"declarations": [
															{
																"constant": false,
																"id": 2372,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2456,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2371,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2373,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2339,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2372,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2372,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2372,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2335,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2337,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2374,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2376
														],
														"declarations": [
															{
																"constant": false,
																"id": 2376,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2456,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2375,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2383,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2377,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2379,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2381,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2339,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2339,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2376,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2376,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2376,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2376,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2376,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2384,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2385,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2345,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2386,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2387,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2376,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2390,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2392
														],
														"declarations": [
															{
																"constant": false,
																"id": 2392,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2456,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2391,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2399,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2394,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2396,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2400,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2402,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2403,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2407,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2408,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2410,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2411,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2415,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2416,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2418,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2419,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2423,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2424,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2426,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2427,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2431,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2432,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2434,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2435,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2439,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2440,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2442,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2443,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2447,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2448,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2449,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2345,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2450,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2453,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2454,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2343,
														"id": 2455,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 3124,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2500,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2474
												],
												"declarations": [
													{
														"constant": false,
														"id": 2474,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2500,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2473,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2480,
												"initialValue": {
													"arguments": [
														{
															"id": 2476,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2477,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2478,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2475,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2458,
															2501
														],
														"referencedDeclaration": 2458,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2482,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2081",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2081",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2481,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3123,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2081_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2485,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2461,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2486,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2463,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2487,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2465,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2484,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2497,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2496,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2492,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2495,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2498,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2474,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2472,
												"id": 2499,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2459,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2466,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 3124,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2612,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2509,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2515,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2514,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2508,
															"id": 2513,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2517
												],
												"declarations": [
													{
														"constant": false,
														"id": 2517,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2612,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2526,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2520,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2504,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2519,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2780,
																			2815
																		],
																		"referencedDeclaration": 2780,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2524,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2611,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2527,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2528,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2529,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2530,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2533,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2537,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2538,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2539,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2540,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2541,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2544,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2548,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2549,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2550,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2551,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2552,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2555,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2559,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2560,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2561,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2562,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2563,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2566,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2570,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2571,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2572,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2573,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2574,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2581,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2582,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2583,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2584,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2585,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2588,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2592,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2593,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2594,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2595,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2596,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2599,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2603,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2605,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2517,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2606,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2504,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2607,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2604,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2508,
														"id": 2610,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2502,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 3124,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2647,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2646,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2625
														],
														"declarations": [
															{
																"constant": false,
																"id": 2625,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2646,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2624,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2629,
														"initialValue": {
															"arguments": [
																{
																	"id": 2627,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2616,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2626,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2613,
																	2648
																],
																"referencedDeclaration": 2613,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2630,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2625,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2632,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2619,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2631,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3123,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2081_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2636,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2634,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2635,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2637,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2616,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2623,
														"id": 2645,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2614,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2618,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2617,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 3124,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2779,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2657
												],
												"declarations": [
													{
														"constant": false,
														"id": 2657,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2779,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2659,
												"initialValue": {
													"hexValue": "30",
													"id": 2658,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2776,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2660,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2674,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2673,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2669,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2672,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2675,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2689,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2688,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2680,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2683,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2684,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2687,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2690,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2704,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2703,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2695,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2698,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2702,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2705,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2719,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2718,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2710,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2713,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2714,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2717,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2720,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2734,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2733,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2725,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2728,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2729,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2732,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2735,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2749,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2748,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2740,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2743,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2744,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2747,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2750,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2764,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2763,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2755,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2758,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2759,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2762,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2765,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2775,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2774,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2770,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2773,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2777,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2657,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2655,
												"id": 2778,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2649,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 3124,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2814,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2813,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2792
														],
														"declarations": [
															{
																"constant": false,
																"id": 2792,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2813,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2791,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2796,
														"initialValue": {
															"arguments": [
																{
																	"id": 2794,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2783,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2793,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2780,
																	2815
																],
																"referencedDeclaration": 2780,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2797,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2792,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2799,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2786,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2798,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3123,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2081_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2803,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2801,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2802,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2792,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2804,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2783,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2810,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2790,
														"id": 2812,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2781,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2785,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2784,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 3124,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2943,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2824
												],
												"declarations": [
													{
														"constant": false,
														"id": 2824,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2943,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2826,
												"initialValue": {
													"hexValue": "30",
													"id": 2825,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 2940,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2827,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2843,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2842,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2832,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2837,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2838,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2841,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2844,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2860,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2859,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2854,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2855,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2858,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2861,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2877,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2876,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2866,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2871,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2872,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2875,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2878,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2894,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 2893,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2883,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2888,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2889,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2892,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2895,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2911,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 2910,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2900,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2905,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2906,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2909,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2912,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2928,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 2927,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2917,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2922,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 2925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2923,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2926,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2929,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2939,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 2938,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2934,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2937,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2941,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2824,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2822,
												"id": 2942,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2816,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 3124,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2978,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 2977,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															2956
														],
														"declarations": [
															{
																"constant": false,
																"id": 2956,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2977,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2955,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2960,
														"initialValue": {
															"arguments": [
																{
																	"id": 2958,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2947,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2957,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2944,
																	2979
																],
																"referencedDeclaration": 2944,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2961,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2956,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2963,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2950,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2962,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3123,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2081_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2967,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2965,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2966,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2956,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2968,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2947,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2974,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2954,
														"id": 2976,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2945,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2949,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2948,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 3124,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3065,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													2988
												],
												"declarations": [
													{
														"constant": false,
														"id": 2988,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3065,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2987,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2990,
												"initialValue": {
													"hexValue": "30",
													"id": 2989,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 3062,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3005,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 3004,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2996,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2982,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2999,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 3002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3000,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2988,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3003,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3020,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 3019,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3011,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2982,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3014,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 3017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3015,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2988,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3018,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3021,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3035,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 3034,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3026,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2982,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3029,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 3032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3030,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2988,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3033,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3036,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3050,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 3049,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3041,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2982,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3044,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 3047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3045,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2988,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3048,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3051,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3061,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 3060,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3056,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2988,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3059,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3063,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2988,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2986,
												"id": 3064,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 2980,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 3124,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3103,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 3102,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															3078
														],
														"declarations": [
															{
																"constant": false,
																"id": 3078,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3102,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3077,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3082,
														"initialValue": {
															"arguments": [
																{
																	"id": 3080,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3069,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3079,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3066,
																	3104
																],
																"referencedDeclaration": 3066,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3083,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3078,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3085,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3072,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3084,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3123,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2081_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3092,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3087,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3090,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3088,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3078,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3089,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3091,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3093,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3069,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3076,
														"id": 3101,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3067,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3071,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3070,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 3124,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3122,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3115,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3108,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2081",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2081",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3113,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3112,
												"id": 3121,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 3105,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3107,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3106,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 3124,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3125,
							"src": "203:14914:12",
							"usedErrors": [
								2076
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3229
						]
					},
					"id": 3230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3127,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3229,
							"linearizedBaseContracts": [
								3229
							],
							"name": "SignedMath",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3144,
										"nodeType": "Block",
										"src": "376:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3137,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3130,
															"src": "393:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3138,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3132,
															"src": "397:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3141,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3132,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:13",
													"trueExpression": {
														"id": 3140,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3130,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3136,
												"id": 3143,
												"nodeType": "Return",
												"src": "386:20:13"
											}
										]
									},
									"documentation": {
										"id": 3128,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "325:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3129,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3132,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3131,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:13"
									},
									"returnParameters": {
										"id": 3136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "368:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3134,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:13"
									},
									"scope": 3229,
									"src": "312:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3162,
										"nodeType": "Block",
										"src": "555:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3155,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3148,
															"src": "572:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3156,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "576:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3159,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:13",
													"trueExpression": {
														"id": 3158,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3148,
														"src": "580:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3154,
												"id": 3161,
												"nodeType": "Return",
												"src": "565:20:13"
											}
										]
									},
									"documentation": {
										"id": 3146,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "504:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3147,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3149,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:13"
									},
									"returnParameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "547:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3152,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:13"
									},
									"scope": 3229,
									"src": "491:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3206,
										"nodeType": "Block",
										"src": "797:162:13",
										"statements": [
											{
												"assignments": [
													3174
												],
												"declarations": [
													{
														"constant": false,
														"id": 3174,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3206,
														"src": "859:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3173,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3187,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3175,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3166,
																	"src": "871:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3176,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "875:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3178,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3179,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3166,
																				"src": "882:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3180,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3168,
																				"src": "886:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3182,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3185,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3188,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3174,
														"src": "911:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3193,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3174,
																						"src": "931:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3191,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3189,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3198,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3166,
																				"src": "945:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3199,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3168,
																				"src": "949:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3201,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3203,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3172,
												"id": 3205,
												"nodeType": "Return",
												"src": "904:48:13"
											}
										]
									},
									"documentation": {
										"id": 3164,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3166,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3207,
												"src": "746:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3165,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3168,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3207,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3167,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:13"
									},
									"returnParameters": {
										"id": 3172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3207,
												"src": "789:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3170,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:13"
									},
									"scope": 3229,
									"src": "729:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3227,
										"nodeType": "Block",
										"src": "1103:158:13",
										"statements": [
											{
												"id": 3226,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3217,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3210,
																			"src": "1228:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:13",
																		"subExpression": {
																			"id": 3221,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3210,
																			"src": "1242:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:13",
																	"trueExpression": {
																		"id": 3220,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3210,
																		"src": "1237:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3215,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3214,
														"id": 3225,
														"nodeType": "Return",
														"src": "1213:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3208,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3210,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3209,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:13"
									},
									"returnParameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "1094:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:13"
									},
									"scope": 3229,
									"src": "1048:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3230,
							"src": "216:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:13"
				},
				"id": 13
			},
			"contracts/SongNFT.sol": {
				"ast": {
					"absolutePath": "contracts/SongNFT.sol",
					"exportedSymbols": {
						"Arrays": [
							1639
						],
						"Context": [
							1669
						],
						"ERC1155": [
							1187
						],
						"ERC1155URIStorage": [
							1440
						],
						"ERC165": [
							2058
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1456
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							2070
						],
						"SongNFT": [
							3291
						],
						"Strings": [
							2034
						]
					},
					"id": 3292,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 3232,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3292,
							"sourceUnit": 1188,
							"src": "107:59:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
							"id": 3233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3292,
							"sourceUnit": 1441,
							"src": "167:80:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3234,
										"name": "ERC1155URIStorage",
										"nameLocations": [
											"269:17:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1440,
										"src": "269:17:14"
									},
									"id": 3235,
									"nodeType": "InheritanceSpecifier",
									"src": "269:17:14"
								}
							],
							"canonicalName": "SongNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3291,
							"linearizedBaseContracts": [
								3291,
								1440,
								1187,
								136,
								1456,
								1310,
								2058,
								2070,
								1669
							],
							"name": "SongNFT",
							"nameLocation": "258:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3241,
										"nodeType": "Block",
										"src": "318:2:14",
										"statements": []
									},
									"id": 3242,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 3238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "315:2:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 3239,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3237,
												"name": "ERC1155",
												"nameLocations": [
													"307:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1187,
												"src": "307:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "307:11:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:2:14"
									},
									"returnParameters": {
										"id": 3240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:0:14"
									},
									"scope": 3291,
									"src": "293:27:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1c75cfb4",
									"id": 3244,
									"mutability": "mutable",
									"name": "currentID",
									"nameLocation": "341:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3291,
									"src": "326:24:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3267,
										"nodeType": "Block",
										"src": "437:111:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3252,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "453:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "457:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "453:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3254,
															"name": "currentID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3244,
															"src": "465:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3255,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3246,
															"src": "476:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 3256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "484:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 3251,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "447:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "447:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3258,
												"nodeType": "ExpressionStatement",
												"src": "447:40:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3260,
															"name": "currentID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3244,
															"src": "505:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3261,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3248,
															"src": "516:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3259,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1428,
															810
														],
														"referencedDeclaration": 1428,
														"src": "497:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3263,
												"nodeType": "ExpressionStatement",
												"src": "497:23:14"
											},
											{
												"expression": {
													"id": 3265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "530:11:14",
													"subExpression": {
														"id": 3264,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3244,
														"src": "530:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3266,
												"nodeType": "ExpressionStatement",
												"src": "530:11:14"
											}
										]
									},
									"functionSelector": "77097fc8",
									"id": 3268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "366:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3246,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "388:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "380:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3248,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "418:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "404:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "404:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:57:14"
									},
									"returnParameters": {
										"id": 3250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "437:0:14"
									},
									"scope": 3291,
									"src": "357:191:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3289,
										"nodeType": "Block",
										"src": "643:67:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3282,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3270,
															"src": "676:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3283,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3272,
															"src": "683:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3284,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3274,
															"src": "688:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3285,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3276,
															"src": "693:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 3286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "700:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"id": 3279,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "653:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SongNFT_$3291_$",
																"typeString": "type(contract super SongNFT)"
															}
														},
														"id": 3281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "659:16:14",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "653:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "653:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3288,
												"nodeType": "ExpressionStatement",
												"src": "653:50:14"
											}
										]
									},
									"functionSelector": "0febdd49",
									"id": 3290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "563:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "588:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "580:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3272,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "602:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "594:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3274,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "614:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "606:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "626:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "618:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:53:14"
									},
									"returnParameters": {
										"id": 3278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:0:14"
									},
									"scope": 3291,
									"src": "554:156:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3292,
							"src": "249:463:14",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "81:632:14"
				},
				"id": 14
			}
		}
	}
}