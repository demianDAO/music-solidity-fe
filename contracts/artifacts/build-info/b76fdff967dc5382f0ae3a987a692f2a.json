{
	"id": "b76fdff967dc5382f0ae3a987a692f2a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SongNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\";\n\ncontract SongNFT is ERC1155URIStorage {\n    constructor() ERC1155(\"\"){}\n\n    uint256 public currentID;\n\n    function mint(\n        address to,\n        uint256 amount,\n        string memory uri\n    ) external {\n        _mint(to, currentID, amount, \"\");\n        _setURI(currentID, uri);\n        currentID++;\n    }\n\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value) external  {\n        super.safeTransferFrom(from,  to,  id,  value, \"\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev ERC1155 token with storage based token URI management.\n * Inspired by the ERC721URIStorage extension\n */\nabstract contract ERC1155URIStorage is ERC1155 {\n    using Strings for uint256;\n\n    // Optional base URI\n    string private _baseURI = \"\";\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the concatenation of the `_baseURI`\n     * and the token-specific uri if the latter is set\n     *\n     * This enables the following behaviors:\n     *\n     * - if `_tokenURIs[tokenId]` is set, then the result is the concatenation\n     *   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`\n     *   is empty per default);\n     *\n     * - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`\n     *   which in most cases will contain `ERC1155._uri`;\n     *\n     * - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a\n     *   uri value set, then the result is empty.\n     */\n    function uri(uint256 tokenId) public view virtual override returns (string memory) {\n        string memory tokenURI = _tokenURIs[tokenId];\n\n        // If token URI is set, concatenate base URI and tokenURI (via string.concat).\n        return bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId);\n    }\n\n    /**\n     * @dev Sets `tokenURI` as the tokenURI of `tokenId`.\n     */\n    function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {\n        _tokenURIs[tokenId] = tokenURI;\n        emit URI(uri(tokenId), tokenId);\n    }\n\n    /**\n     * @dev Sets `baseURI` as the `_baseURI` for all tokens\n     */\n    function _setBaseURI(string memory baseURI) internal virtual {\n        _baseURI = baseURI;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol": {
				"ERC1155URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1155 token with storage based token URI management. Inspired by the ERC721URIStorage extension",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1155 token with storage based token URI management. Inspired by the ERC721URIStorage extension\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":\"ERC1155URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0xb4eb1c685e07054beaab5d980a18dec0ea59470154fa1ef847f8cfb6ddc1f543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cea55f4390e3c35e08616bb3c4932ab54157eb60e3939798860b26bdd62fac0\",\"dweb:/ipfs/QmWTMWhGVPnaGhwExT8618GSqm2gejaf8yanp9fjsd8oQS\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1367,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_baseURI",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1371,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol:ERC1155URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c02aeb5be6aac432d8b9356a0f3708a60b2e0c5d025442359577812c7d93ccd464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c02aeb5be6aac432d8b9356a0f3708a60b2e0c5d025442359577812c7d93ccd464736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0x2A 0xEB JUMPDEST 0xE6 0xAA 0xC4 ORIGIN 0xD8 0xB9 CALLDATALOAD PUSH11 0xF3708A60B2E0C5D025442 CALLDATALOAD SWAP6 PUSH24 0x812C7D93CCD464736F6C634300081A003300000000000000 ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;276:4526:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c02aeb5be6aac432d8b9356a0f3708a60b2e0c5d025442359577812c7d93ccd464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0x2A 0xEB JUMPDEST 0xE6 0xAA 0xC4 ORIGIN 0xD8 0xB9 CALLDATALOAD PUSH11 0xF3708A60B2E0C5D025442 CALLDATALOAD SWAP6 PUSH24 0x812C7D93CCD464736F6C634300081A003300000000000000 ",
							"sourceMap": "276:4526:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c02aeb5be6aac432d8b9356a0f3708a60b2e0c5d025442359577812c7d93ccd464736f6c634300081a0033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a06a5b8c53357d788fdc2a7abd7678845e77132e6244baa1a88dc2b763d4e3ea64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a06a5b8c53357d788fdc2a7abd7678845e77132e6244baa1a88dc2b763d4e3ea64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 PUSH11 0x5B8C53357D788FDC2A7ABD PUSH23 0x78845E77132E6244BAA1A88DC2B763D4E3EA64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a06a5b8c53357d788fdc2a7abd7678845e77132e6244baa1a88dc2b763d4e3ea64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 PUSH11 0x5B8C53357D788FDC2A7ABD PUSH23 0x78845E77132E6244BAA1A88DC2B763D4E3EA64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1245:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a06a5b8c53357d788fdc2a7abd7678845e77132e6244baa1a88dc2b763d4e3ea64736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220584a3a939015b7d03eae2a98478a46cd98c89a7b484bc1c939deb494f46e93d664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220584a3a939015b7d03eae2a98478a46cd98c89a7b484bc1c939deb494f46e93d664736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC BLOBBASEFEE GASPRICE SWAP4 SWAP1 ISZERO 0xB7 0xD0 RETURNDATACOPY 0xAE 0x2A SWAP9 SELFBALANCE DUP11 CHAINID 0xCD SWAP9 0xC8 SWAP11 PUSH28 0x484BC1C939DEB494F46E93D664736F6C634300081A00330000000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220584a3a939015b7d03eae2a98478a46cd98c89a7b484bc1c939deb494f46e93d664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC BLOBBASEFEE GASPRICE SWAP4 SWAP1 ISZERO 0xB7 0xD0 RETURNDATACOPY 0xAE 0x2A SWAP9 SELFBALANCE DUP11 CHAINID 0xCD SWAP9 0xC8 SWAP11 PUSH28 0x484BC1C939DEB494F46E93D664736F6C634300081A00330000000000 ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220584a3a939015b7d03eae2a98478a46cd98c89a7b484bc1c939deb494f46e93d664736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f5673559f82116f26c2e3c6cf8f603bcb5bbbaea059ab83d07738ce71750ec1a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5673559f82116f26c2e3c6cf8f603bcb5bbbaea059ab83d07738ce71750ec1a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH8 0x3559F82116F26C2E EXTCODECOPY PUSH13 0xF8F603BCB5BBBAEA059AB83D07 PUSH20 0x8CE71750EC1A64736F6C634300081A0033000000 ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5673559f82116f26c2e3c6cf8f603bcb5bbbaea059ab83d07738ce71750ec1a64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH8 0x3559F82116F26C2E EXTCODECOPY PUSH13 0xF8F603BCB5BBBAEA059AB83D07 PUSH20 0x8CE71750EC1A64736F6C634300081A0033000000 ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5673559f82116f26c2e3c6cf8f603bcb5bbbaea059ab83d07738ce71750ec1a64736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220687bc847d7ddf32d49e1169dd49327c3407ce60dfefb721394ac260ccd8dbca064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220687bc847d7ddf32d49e1169dd49327c3407ce60dfefb721394ac260ccd8dbca064736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x7BC847D7DDF32D49E1 AND SWAP14 0xD4 SWAP4 0x27 0xC3 BLOCKHASH PUSH29 0xE60DFEFB721394AC260CCD8DBCA064736F6C634300081A003300000000 ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220687bc847d7ddf32d49e1169dd49327c3407ce60dfefb721394ac260ccd8dbca064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x7BC847D7DDF32D49E1 AND SWAP14 0xD4 SWAP4 0x27 0xC3 BLOCKHASH PUSH29 0xE60DFEFB721394AC260CCD8DBCA064736F6C634300081A003300000000 ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220687bc847d7ddf32d49e1169dd49327c3407ce60dfefb721394ac260ccd8dbca064736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SongNFT.sol": {
				"SongNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":476:504  string private _baseURI = \"\" */\n  0xa0\n    /* \"contracts/SongNFT.sol\":249:724  contract SongNFT is ERC1155URIStorage {... */\n  0x40\n    /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":476:504  string private _baseURI = \"\" */\n  mstore\n  0x00\n    /* \"contracts/SongNFT.sol\":249:724  contract SongNFT is ERC1155URIStorage {... */\n  0x80\n    /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":476:504  string private _baseURI = \"\" */\n  swap1\n  dup2\n  mstore\n  0x03\n  swap1\n  tag_1\n  swap1\n  dup3\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/SongNFT.sol\":293:320  constructor() ERC1155(\"\"){} */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  0x40\n  dup1\n  mload\n  0x20\n  dup2\n  add\n  swap1\n  swap2\n  mstore\n  0x00\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/SongNFT.sol\":249:724  contract SongNFT is ERC1155URIStorage {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  tag_12\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  tag_2\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_13:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_14:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_21:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_22:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_16:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_26\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_26:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_27:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_27)\ntag_29:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_25:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_2:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_33\n  tag_13\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1555:1652   */\n  tag_34\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_35\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_14\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_16\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_37\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_38\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_38:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_29)\n    /* \"#utility.yul\":1744:2393   */\ntag_37:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_41:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_44:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\ntag_18:\n    /* \"contracts/SongNFT.sol\":249:724  contract SongNFT is ERC1155URIStorage {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SongNFT.sol\":249:724  contract SongNFT is ERC1155URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2eb2c2d6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd3fc9864\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0febdd49\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1c75cfb4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":643:668   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":1230:1244   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1223:1245   */\n      iszero\n        /* \"#utility.yul\":1205:1246   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1193:1195   */\n      0x20\n        /* \"#utility.yul\":1178:1196   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_19\n        /* \"#utility.yul\":1065:1252   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1331:1663  function uri(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n        /* \"contracts/SongNFT.sol\":566:722  function safeTransferFrom(address from, address to, uint256 id, uint256 value) external  {... */\n    tag_6:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/SongNFT.sol\":326:350  uint256 public currentID */\n    tag_7:\n      tag_15\n      sload(0x05)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_33\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_9:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_10:\n      tag_33\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"contracts/SongNFT.sol\":357:560  function mint(... */\n    tag_11:\n      tag_33\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_12:\n      tag_21\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_13:\n      tag_33\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_67:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_69\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_67\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_67\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1331:1663  function uri(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1424:1446  string memory tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1449:1468  _tokenURIs[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1449:1459  _tokenURIs */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1449:1468  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1424:1468  string memory tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1399:1412  string memory */\n      0x60\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1424:1446  string memory tokenURI */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1449:1468  _tokenURIs[tokenId] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1424:1468  string memory tokenURI = _tokenURIs[tokenId] */\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_75\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1598:1599  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1579:1587  tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1573:1595  bytes(tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1573:1599  bytes(tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1573:1656  bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId) */\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1638:1656  super.uri(tokenId) */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1648:1655  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1638:1647  super.uri */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1638:1656  super.uri(tokenId) */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1573:1656  bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId) */\n      jump(tag_83)\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1616:1624  _baseURI */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1626:1634  tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1602:1635  string.concat(_baseURI, tokenURI) */\n      add(0x20, mload(0x40))\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1573:1656  bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId) */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1566:1656  return bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId) */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1331:1663  function uri(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SongNFT.sol\":566:722  function safeTransferFrom(address from, address to, uint256 id, uint256 value) external  {... */\n    tag_36:\n        /* \"contracts/SongNFT.sol\":665:715  super.safeTransferFrom(from,  to,  id,  value, \"\") */\n      tag_87\n        /* \"contracts/SongNFT.sol\":688:692  from */\n      dup5\n        /* \"contracts/SongNFT.sol\":695:697  to */\n      dup5\n        /* \"contracts/SongNFT.sol\":700:702  id */\n      dup5\n        /* \"contracts/SongNFT.sol\":705:710  value */\n      dup5\n        /* \"contracts/SongNFT.sol\":665:715  super.safeTransferFrom(from,  to,  id,  value, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/SongNFT.sol\":665:687  super.safeTransferFrom */\n      tag_66\n        /* \"contracts/SongNFT.sol\":665:715  super.safeTransferFrom(from,  to,  id,  value, \"\") */\n      jump\t// in\n    tag_87:\n        /* \"contracts/SongNFT.sol\":566:722  function safeTransferFrom(address from, address to, uint256 id, uint256 value) external  {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_43:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      dup7\n      and\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      shl(0xe1, 0x711bec91)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11204:11236   */\n      dup1\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":11186:11237   */\n      mstore\n        /* \"#utility.yul\":11273:11305   */\n      dup8\n      and\n        /* \"#utility.yul\":11253:11271   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11246:11306   */\n      mstore\n        /* \"#utility.yul\":11159:11177   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      dup4\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      shl(0xe0, 0x5b059991)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":11491:11516   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":11532:11550   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11525:11559   */\n      mstore\n        /* \"#utility.yul\":11464:11482   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      tag_94\n        /* \"#utility.yul\":11317:11565   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_103\n      jumpi\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_105:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      dup1\n      dup3\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup7\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_109\n      swap1\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      dup1\n      dup5\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup8\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      tag_18\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_115\n      jumpi\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_106)\n    tag_107:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_118\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SongNFT.sol\":357:560  function mint(... */\n    tag_57:\n        /* \"contracts/SongNFT.sol\":467:499  _mint(to, currentID, amount, \"\") */\n      tag_122\n        /* \"contracts/SongNFT.sol\":473:475  to */\n      dup4\n        /* \"contracts/SongNFT.sol\":477:486  currentID */\n      sload(0x05)\n        /* \"contracts/SongNFT.sol\":488:494  amount */\n      dup5\n        /* \"contracts/SongNFT.sol\":467:499  _mint(to, currentID, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/SongNFT.sol\":467:472  _mint */\n      tag_123\n        /* \"contracts/SongNFT.sol\":467:499  _mint(to, currentID, amount, \"\") */\n      jump\t// in\n    tag_122:\n        /* \"contracts/SongNFT.sol\":509:532  _setURI(currentID, uri) */\n      tag_124\n        /* \"contracts/SongNFT.sol\":517:526  currentID */\n      sload(0x05)\n        /* \"contracts/SongNFT.sol\":528:531  uri */\n      dup3\n        /* \"contracts/SongNFT.sol\":509:516  _setURI */\n      tag_125\n        /* \"contracts/SongNFT.sol\":509:532  _setURI(currentID, uri) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/SongNFT.sol\":542:551  currentID */\n      0x05\n        /* \"contracts/SongNFT.sol\":542:553  currentID++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/SongNFT.sol\":542:551  currentID */\n      0x00\n        /* \"contracts/SongNFT.sol\":542:553  currentID++ */\n      tag_126\n      dup4\n      tag_127\n      jump\t// in\n    tag_126:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/SongNFT.sol\":357:560  function mint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      dup7\n      and\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      tag_131\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      shl(0xe1, 0x711bec91)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11204:11236   */\n      dup1\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":11186:11237   */\n      mstore\n        /* \"#utility.yul\":11273:11305   */\n      dup8\n      and\n        /* \"#utility.yul\":11253:11271   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11246:11306   */\n      mstore\n        /* \"#utility.yul\":11159:11177   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      tag_94\n        /* \"#utility.yul\":11012:11312   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_75\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_75\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12120:12171   */\n      mstore\n        /* \"#utility.yul\":12093:12111   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      tag_94\n        /* \"#utility.yul\":11974:12177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12120:12171   */\n      mstore\n        /* \"#utility.yul\":12093:12111   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      tag_94\n        /* \"#utility.yul\":11974:12177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      shl(0xe8, 0xced3e1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12120:12171   */\n      mstore\n        /* \"#utility.yul\":12093:12111   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      tag_94\n        /* \"#utility.yul\":11974:12177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1205:1246   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1178:1196   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12120:12171   */\n      mstore\n        /* \"#utility.yul\":12093:12111   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      tag_94\n        /* \"#utility.yul\":11974:12177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      dup1\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup2\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      dup6\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      0x80\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_96\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1743:1906  function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1828:1847  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1828:1838  _tokenURIs */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1828:1847  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1828:1858  _tokenURIs[tokenId] = tokenURI */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1850:1858  tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1828:1847  _tokenURIs[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1828:1858  _tokenURIs[tokenId] = tokenURI */\n      tag_167\n      jump\t// in\n    tag_166:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1891:1898  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1873:1899  URI(uri(tokenId), tokenId) */\n      0x6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1877:1889  uri(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1881:1888  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1877:1880  uri */\n      tag_30\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1877:1889  uri(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1873:1899  URI(uri(tokenId), tokenId) */\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":1743:1906  function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12120:12171   */\n      mstore\n        /* \"#utility.yul\":12093:12111   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      tag_94\n        /* \"#utility.yul\":11974:12177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x6a0d45)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12120:12171   */\n      mstore\n        /* \"#utility.yul\":12093:12111   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      tag_94\n        /* \"#utility.yul\":11974:12177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      dup1\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup2\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      dup6\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      0x80\n      dup3\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      dup5\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup5\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      swap1\n      dup5\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      dup6\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_96)\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      shl(0xe0, 0x5b059991)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":11491:11516   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":11532:11550   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11525:11559   */\n      mstore\n        /* \"#utility.yul\":11464:11482   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      tag_94\n        /* \"#utility.yul\":11317:11565   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      dup2\n      dup2\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup6\n      dup2\n      add\n      dup3\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      swap1\n      dup6\n      add\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      dup9\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      shl(0xe0, 0x03dee4c5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14429:14461   */\n      dup11\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14411:14462   */\n      mstore\n        /* \"#utility.yul\":14478:14496   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14471:14505   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":14521:14539   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14514:14548   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14564:14582   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":14557:14591   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14383:14402   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      tag_94\n        /* \"#utility.yul\":14180:14597   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      dup8\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      tag_205\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      tag_206\n      jump\t// in\n    tag_205:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_204:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_195)\n    tag_196:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      dup5\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_210\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":11491:11516   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":11547:11549   */\n      0x20\n        /* \"#utility.yul\":11532:11550   */\n      dup3\n      add\n        /* \"#utility.yul\":11525:11559   */\n      mstore\n        /* \"#utility.yul\":11479:11481   */\n      0x40\n        /* \"#utility.yul\":11464:11482   */\n      add\n      swap1\n        /* \"#utility.yul\":11317:11565   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_151)\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_212\n      swap3\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      tag_216\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      0x04\n      add\n      tag_217\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_219\n      swap2\n      dup2\n      add\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      0x01\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_221\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_226\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_225)\n    tag_226:\n      0x60\n      swap2\n      pop\n    tag_225:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12138:12170   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12120:12171   */\n      mstore\n        /* \"#utility.yul\":12093:12111   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      tag_94\n        /* \"#utility.yul\":11974:12177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_221:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12138:12170   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12120:12171   */\n      mstore\n        /* \"#utility.yul\":12093:12111   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      tag_94\n        /* \"#utility.yul\":11974:12177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      tag_235\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      0x04\n      add\n      tag_236\n      jump\t// in\n    tag_235:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_237\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_238\n      swap2\n      dup2\n      add\n      swap1\n      tag_220\n      jump\t// in\n    tag_238:\n      0x01\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_239\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_226\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_225)\n    tag_239:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x2bfa23e7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12138:12170   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12120:12171   */\n      mstore\n        /* \"#utility.yul\":12093:12111   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      tag_94\n        /* \"#utility.yul\":11974:12177   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_251:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_267:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:492   */\n    tag_17:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_269:\n        /* \"#utility.yul\":360:389   */\n      tag_270\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_251\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":458:460   */\n      0x20\n        /* \"#utility.yul\":443:461   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":430:462   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:492   */\n      jump\t// out\n        /* \"#utility.yul\":679:810   */\n    tag_252:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":753:785   */\n      dup2\n      and\n        /* \"#utility.yul\":743:786   */\n      dup2\n      eq\n        /* \"#utility.yul\":733:804   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":800:801   */\n      0x00\n        /* \"#utility.yul\":797:798   */\n      dup1\n        /* \"#utility.yul\":790:802   */\n      revert\n        /* \"#utility.yul\":733:804   */\n    tag_273:\n        /* \"#utility.yul\":679:810   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":815:1060   */\n    tag_23:\n        /* \"#utility.yul\":873:879   */\n      0x00\n        /* \"#utility.yul\":926:928   */\n      0x20\n        /* \"#utility.yul\":914:923   */\n      dup3\n        /* \"#utility.yul\":905:912   */\n      dup5\n        /* \"#utility.yul\":901:924   */\n      sub\n        /* \"#utility.yul\":897:929   */\n      slt\n        /* \"#utility.yul\":894:946   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":942:943   */\n      0x00\n        /* \"#utility.yul\":939:940   */\n      dup1\n        /* \"#utility.yul\":932:944   */\n      revert\n        /* \"#utility.yul\":894:946   */\n    tag_275:\n        /* \"#utility.yul\":981:990   */\n      dup2\n        /* \"#utility.yul\":968:991   */\n      calldataload\n        /* \"#utility.yul\":1000:1030   */\n      tag_83\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":1000:1030   */\n      tag_252\n      jump\t// in\n        /* \"#utility.yul\":1257:1483   */\n    tag_29:\n        /* \"#utility.yul\":1316:1322   */\n      0x00\n        /* \"#utility.yul\":1369:1371   */\n      0x20\n        /* \"#utility.yul\":1357:1366   */\n      dup3\n        /* \"#utility.yul\":1348:1355   */\n      dup5\n        /* \"#utility.yul\":1344:1367   */\n      sub\n        /* \"#utility.yul\":1340:1372   */\n      slt\n        /* \"#utility.yul\":1337:1389   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":1385:1386   */\n      0x00\n        /* \"#utility.yul\":1382:1383   */\n      dup1\n        /* \"#utility.yul\":1375:1387   */\n      revert\n        /* \"#utility.yul\":1337:1389   */\n    tag_279:\n      pop\n        /* \"#utility.yul\":1430:1453   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1257:1483   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1488:1738   */\n    tag_253:\n        /* \"#utility.yul\":1573:1574   */\n      0x00\n        /* \"#utility.yul\":1583:1696   */\n    tag_281:\n        /* \"#utility.yul\":1597:1603   */\n      dup4\n        /* \"#utility.yul\":1594:1595   */\n      dup2\n        /* \"#utility.yul\":1591:1604   */\n      lt\n        /* \"#utility.yul\":1583:1696   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1673:1684   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1667:1685   */\n      mload\n        /* \"#utility.yul\":1654:1665   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1647:1686   */\n      mstore\n        /* \"#utility.yul\":1619:1621   */\n      0x20\n        /* \"#utility.yul\":1612:1622   */\n      add\n        /* \"#utility.yul\":1583:1696   */\n      jump(tag_281)\n    tag_283:\n      pop\n      pop\n        /* \"#utility.yul\":1730:1731   */\n      0x00\n        /* \"#utility.yul\":1712:1728   */\n      swap2\n      add\n        /* \"#utility.yul\":1705:1732   */\n      mstore\n        /* \"#utility.yul\":1488:1738   */\n      jump\t// out\n        /* \"#utility.yul\":1743:2014   */\n    tag_254:\n        /* \"#utility.yul\":1785:1788   */\n      0x00\n        /* \"#utility.yul\":1823:1828   */\n      dup2\n        /* \"#utility.yul\":1817:1829   */\n      mload\n        /* \"#utility.yul\":1850:1856   */\n      dup1\n        /* \"#utility.yul\":1845:1848   */\n      dup5\n        /* \"#utility.yul\":1838:1857   */\n      mstore\n        /* \"#utility.yul\":1866:1942   */\n      tag_285\n        /* \"#utility.yul\":1935:1941   */\n      dup2\n        /* \"#utility.yul\":1928:1932   */\n      0x20\n        /* \"#utility.yul\":1923:1926   */\n      dup7\n        /* \"#utility.yul\":1919:1933   */\n      add\n        /* \"#utility.yul\":1912:1916   */\n      0x20\n        /* \"#utility.yul\":1905:1910   */\n      dup7\n        /* \"#utility.yul\":1901:1917   */\n      add\n        /* \"#utility.yul\":1866:1942   */\n      tag_253\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1996:1998   */\n      0x1f\n        /* \"#utility.yul\":1975:1990   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1971:2000   */\n      and\n        /* \"#utility.yul\":1962:2001   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2003:2007   */\n      0x20\n        /* \"#utility.yul\":1958:2008   */\n      add\n      swap3\n        /* \"#utility.yul\":1743:2014   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2239   */\n    tag_32:\n        /* \"#utility.yul\":2168:2170   */\n      0x20\n        /* \"#utility.yul\":2157:2166   */\n      dup2\n        /* \"#utility.yul\":2150:2171   */\n      mstore\n        /* \"#utility.yul\":2131:2135   */\n      0x00\n        /* \"#utility.yul\":2188:2233   */\n      tag_83\n        /* \"#utility.yul\":2229:2231   */\n      0x20\n        /* \"#utility.yul\":2218:2227   */\n      dup4\n        /* \"#utility.yul\":2214:2232   */\n      add\n        /* \"#utility.yul\":2206:2212   */\n      dup5\n        /* \"#utility.yul\":2188:2233   */\n      tag_254\n      jump\t// in\n        /* \"#utility.yul\":2244:2739   */\n    tag_35:\n        /* \"#utility.yul\":2330:2336   */\n      0x00\n        /* \"#utility.yul\":2338:2344   */\n      dup1\n        /* \"#utility.yul\":2346:2352   */\n      0x00\n        /* \"#utility.yul\":2354:2360   */\n      dup1\n        /* \"#utility.yul\":2407:2410   */\n      0x80\n        /* \"#utility.yul\":2395:2404   */\n      dup6\n        /* \"#utility.yul\":2386:2393   */\n      dup8\n        /* \"#utility.yul\":2382:2405   */\n      sub\n        /* \"#utility.yul\":2378:2411   */\n      slt\n        /* \"#utility.yul\":2375:2428   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2424:2425   */\n      0x00\n        /* \"#utility.yul\":2421:2422   */\n      dup1\n        /* \"#utility.yul\":2414:2426   */\n      revert\n        /* \"#utility.yul\":2375:2428   */\n    tag_289:\n        /* \"#utility.yul\":2447:2476   */\n      tag_290\n        /* \"#utility.yul\":2466:2475   */\n      dup6\n        /* \"#utility.yul\":2447:2476   */\n      tag_251\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2437:2476   */\n      swap4\n      pop\n        /* \"#utility.yul\":2495:2533   */\n      tag_291\n        /* \"#utility.yul\":2529:2531   */\n      0x20\n        /* \"#utility.yul\":2518:2527   */\n      dup7\n        /* \"#utility.yul\":2514:2532   */\n      add\n        /* \"#utility.yul\":2495:2533   */\n      tag_251\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2244:2739   */\n      swap4\n      swap7\n        /* \"#utility.yul\":2485:2533   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2602:2604   */\n      0x40\n        /* \"#utility.yul\":2587:2605   */\n      dup3\n      add\n        /* \"#utility.yul\":2574:2606   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2703:2705   */\n      0x60\n        /* \"#utility.yul\":2688:2706   */\n      add\n        /* \"#utility.yul\":2675:2707   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2244:2739   */\n      jump\t// out\n        /* \"#utility.yul\":2744:2871   */\n    tag_104:\n        /* \"#utility.yul\":2805:2815   */\n      0x4e487b71\n        /* \"#utility.yul\":2800:2803   */\n      0xe0\n        /* \"#utility.yul\":2796:2816   */\n      shl\n        /* \"#utility.yul\":2793:2794   */\n      0x00\n        /* \"#utility.yul\":2786:2817   */\n      mstore\n        /* \"#utility.yul\":2836:2840   */\n      0x41\n        /* \"#utility.yul\":2833:2834   */\n      0x04\n        /* \"#utility.yul\":2826:2841   */\n      mstore\n        /* \"#utility.yul\":2860:2864   */\n      0x24\n        /* \"#utility.yul\":2857:2858   */\n      0x00\n        /* \"#utility.yul\":2850:2865   */\n      revert\n        /* \"#utility.yul\":2876:3151   */\n    tag_255:\n        /* \"#utility.yul\":2947:2949   */\n      0x40\n        /* \"#utility.yul\":2941:2950   */\n      mload\n        /* \"#utility.yul\":3012:3014   */\n      0x1f\n        /* \"#utility.yul\":2993:3006   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2989:3016   */\n      and\n        /* \"#utility.yul\":2977:3017   */\n      dup2\n      add\n        /* \"#utility.yul\":3047:3065   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3032:3066   */\n      dup2\n      gt\n        /* \"#utility.yul\":3068:3090   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3029:3091   */\n      or\n        /* \"#utility.yul\":3026:3114   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3094:3112   */\n      tag_295\n      tag_104\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3130:3132   */\n      0x40\n        /* \"#utility.yul\":3123:3145   */\n      mstore\n        /* \"#utility.yul\":2876:3151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3156:3339   */\n    tag_256:\n        /* \"#utility.yul\":3216:3220   */\n      0x00\n        /* \"#utility.yul\":3249:3267   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3241:3247   */\n      dup3\n        /* \"#utility.yul\":3238:3268   */\n      gt\n        /* \"#utility.yul\":3235:3291   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3271:3289   */\n      tag_298\n      tag_104\n      jump\t// in\n    tag_298:\n      pop\n        /* \"#utility.yul\":3316:3317   */\n      0x05\n        /* \"#utility.yul\":3312:3326   */\n      shl\n        /* \"#utility.yul\":3328:3332   */\n      0x20\n        /* \"#utility.yul\":3308:3333   */\n      add\n      swap1\n        /* \"#utility.yul\":3156:3339   */\n      jump\t// out\n        /* \"#utility.yul\":3344:4067   */\n    tag_257:\n        /* \"#utility.yul\":3398:3403   */\n      0x00\n        /* \"#utility.yul\":3451:3454   */\n      dup3\n        /* \"#utility.yul\":3444:3448   */\n      0x1f\n        /* \"#utility.yul\":3436:3442   */\n      dup4\n        /* \"#utility.yul\":3432:3449   */\n      add\n        /* \"#utility.yul\":3428:3455   */\n      slt\n        /* \"#utility.yul\":3418:3473   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":3469:3470   */\n      0x00\n        /* \"#utility.yul\":3466:3467   */\n      dup1\n        /* \"#utility.yul\":3459:3471   */\n      revert\n        /* \"#utility.yul\":3418:3473   */\n    tag_300:\n        /* \"#utility.yul\":3509:3515   */\n      dup2\n        /* \"#utility.yul\":3496:3516   */\n      calldataload\n        /* \"#utility.yul\":3536:3600   */\n      tag_301\n        /* \"#utility.yul\":3552:3599   */\n      tag_302\n        /* \"#utility.yul\":3592:3598   */\n      dup3\n        /* \"#utility.yul\":3552:3599   */\n      tag_256\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3536:3600   */\n      tag_255\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3624:3627   */\n      dup1\n        /* \"#utility.yul\":3648:3654   */\n      dup3\n        /* \"#utility.yul\":3643:3646   */\n      dup3\n        /* \"#utility.yul\":3636:3655   */\n      mstore\n        /* \"#utility.yul\":3680:3684   */\n      0x20\n        /* \"#utility.yul\":3675:3678   */\n      dup3\n        /* \"#utility.yul\":3671:3685   */\n      add\n        /* \"#utility.yul\":3664:3685   */\n      swap2\n      pop\n        /* \"#utility.yul\":3741:3745   */\n      0x20\n        /* \"#utility.yul\":3731:3737   */\n      dup4\n        /* \"#utility.yul\":3728:3729   */\n      0x05\n        /* \"#utility.yul\":3724:3738   */\n      shl\n        /* \"#utility.yul\":3716:3722   */\n      dup7\n        /* \"#utility.yul\":3712:3739   */\n      add\n        /* \"#utility.yul\":3708:3746   */\n      add\n        /* \"#utility.yul\":3694:3746   */\n      swap3\n      pop\n        /* \"#utility.yul\":3769:3772   */\n      dup6\n        /* \"#utility.yul\":3761:3767   */\n      dup4\n        /* \"#utility.yul\":3758:3773   */\n      gt\n        /* \"#utility.yul\":3755:3790   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3786:3787   */\n      0x00\n        /* \"#utility.yul\":3783:3784   */\n      dup1\n        /* \"#utility.yul\":3776:3788   */\n      revert\n        /* \"#utility.yul\":3755:3790   */\n    tag_303:\n        /* \"#utility.yul\":3822:3826   */\n      0x20\n        /* \"#utility.yul\":3814:3820   */\n      dup6\n        /* \"#utility.yul\":3810:3827   */\n      add\n        /* \"#utility.yul\":3836:4036   */\n    tag_304:\n        /* \"#utility.yul\":3852:3858   */\n      dup4\n        /* \"#utility.yul\":3847:3850   */\n      dup2\n        /* \"#utility.yul\":3844:3859   */\n      lt\n        /* \"#utility.yul\":3836:4036   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":3944:3961   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3974:3992   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4021:4025   */\n      0x20\n        /* \"#utility.yul\":4012:4026   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":3869:3883   */\n      add\n        /* \"#utility.yul\":3836:4036   */\n      jump(tag_304)\n    tag_306:\n      pop\n        /* \"#utility.yul\":4054:4061   */\n      swap6\n        /* \"#utility.yul\":3344:4067   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4072:4521   */\n    tag_258:\n        /* \"#utility.yul\":4136:4141   */\n      0x00\n        /* \"#utility.yul\":4168:4169   */\n      dup1\n        /* \"#utility.yul\":4192:4210   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4184:4190   */\n      dup5\n        /* \"#utility.yul\":4181:4211   */\n      gt\n        /* \"#utility.yul\":4178:4234   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":4214:4232   */\n      tag_309\n      tag_104\n      jump\t// in\n    tag_309:\n      pop\n        /* \"#utility.yul\":4280:4282   */\n      0x1f\n        /* \"#utility.yul\":4259:4274   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4255:4284   */\n      and\n        /* \"#utility.yul\":4286:4290   */\n      0x20\n        /* \"#utility.yul\":4251:4291   */\n      add\n        /* \"#utility.yul\":4309:4330   */\n      tag_310\n        /* \"#utility.yul\":4251:4291   */\n      dup2\n        /* \"#utility.yul\":4309:4330   */\n      tag_255\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4300:4330   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4353:4359   */\n      dup3\n        /* \"#utility.yul\":4346:4351   */\n      dup2\n        /* \"#utility.yul\":4339:4360   */\n      mstore\n        /* \"#utility.yul\":4393:4396   */\n      dup4\n        /* \"#utility.yul\":4384:4390   */\n      dup4\n        /* \"#utility.yul\":4379:4382   */\n      dup4\n        /* \"#utility.yul\":4375:4391   */\n      add\n        /* \"#utility.yul\":4372:4397   */\n      gt\n        /* \"#utility.yul\":4369:4414   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":4410:4411   */\n      0x00\n        /* \"#utility.yul\":4407:4408   */\n      dup1\n        /* \"#utility.yul\":4400:4412   */\n      revert\n        /* \"#utility.yul\":4369:4414   */\n    tag_311:\n        /* \"#utility.yul\":4459:4465   */\n      dup3\n        /* \"#utility.yul\":4454:4457   */\n      dup3\n        /* \"#utility.yul\":4447:4451   */\n      0x20\n        /* \"#utility.yul\":4440:4445   */\n      dup4\n        /* \"#utility.yul\":4436:4452   */\n      add\n        /* \"#utility.yul\":4423:4466   */\n      calldatacopy\n        /* \"#utility.yul\":4513:4514   */\n      0x00\n        /* \"#utility.yul\":4506:4510   */\n      0x20\n        /* \"#utility.yul\":4497:4503   */\n      dup5\n        /* \"#utility.yul\":4490:4495   */\n      dup4\n        /* \"#utility.yul\":4486:4504   */\n      add\n        /* \"#utility.yul\":4482:4511   */\n      add\n        /* \"#utility.yul\":4475:4515   */\n      mstore\n        /* \"#utility.yul\":4072:4521   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4746   */\n    tag_259:\n        /* \"#utility.yul\":4568:4573   */\n      0x00\n        /* \"#utility.yul\":4621:4624   */\n      dup3\n        /* \"#utility.yul\":4614:4618   */\n      0x1f\n        /* \"#utility.yul\":4606:4612   */\n      dup4\n        /* \"#utility.yul\":4602:4619   */\n      add\n        /* \"#utility.yul\":4598:4625   */\n      slt\n        /* \"#utility.yul\":4588:4643   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4588:4643   */\n    tag_313:\n        /* \"#utility.yul\":4661:4740   */\n      tag_83\n        /* \"#utility.yul\":4736:4739   */\n      dup4\n        /* \"#utility.yul\":4727:4733   */\n      dup4\n        /* \"#utility.yul\":4714:4734   */\n      calldataload\n        /* \"#utility.yul\":4707:4711   */\n      0x20\n        /* \"#utility.yul\":4699:4705   */\n      dup6\n        /* \"#utility.yul\":4695:4712   */\n      add\n        /* \"#utility.yul\":4661:4740   */\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":4751:5705   */\n    tag_42:\n        /* \"#utility.yul\":4905:4911   */\n      0x00\n        /* \"#utility.yul\":4913:4919   */\n      dup1\n        /* \"#utility.yul\":4921:4927   */\n      0x00\n        /* \"#utility.yul\":4929:4935   */\n      dup1\n        /* \"#utility.yul\":4937:4943   */\n      0x00\n        /* \"#utility.yul\":4990:4993   */\n      0xa0\n        /* \"#utility.yul\":4978:4987   */\n      dup7\n        /* \"#utility.yul\":4969:4976   */\n      dup9\n        /* \"#utility.yul\":4965:4988   */\n      sub\n        /* \"#utility.yul\":4961:4994   */\n      slt\n        /* \"#utility.yul\":4958:5011   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":5007:5008   */\n      0x00\n        /* \"#utility.yul\":5004:5005   */\n      dup1\n        /* \"#utility.yul\":4997:5009   */\n      revert\n        /* \"#utility.yul\":4958:5011   */\n    tag_316:\n        /* \"#utility.yul\":5030:5059   */\n      tag_317\n        /* \"#utility.yul\":5049:5058   */\n      dup7\n        /* \"#utility.yul\":5030:5059   */\n      tag_251\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5020:5059   */\n      swap5\n      pop\n        /* \"#utility.yul\":5078:5116   */\n      tag_318\n        /* \"#utility.yul\":5112:5114   */\n      0x20\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5115   */\n      add\n        /* \"#utility.yul\":5078:5116   */\n      tag_251\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5068:5116   */\n      swap4\n      pop\n        /* \"#utility.yul\":5167:5169   */\n      0x40\n        /* \"#utility.yul\":5156:5165   */\n      dup7\n        /* \"#utility.yul\":5152:5170   */\n      add\n        /* \"#utility.yul\":5139:5171   */\n      calldataload\n        /* \"#utility.yul\":5194:5212   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5186:5192   */\n      dup2\n        /* \"#utility.yul\":5183:5213   */\n      gt\n        /* \"#utility.yul\":5180:5230   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5223:5224   */\n      dup1\n        /* \"#utility.yul\":5216:5228   */\n      revert\n        /* \"#utility.yul\":5180:5230   */\n    tag_319:\n        /* \"#utility.yul\":5249:5310   */\n      tag_320\n        /* \"#utility.yul\":5302:5309   */\n      dup9\n        /* \"#utility.yul\":5293:5299   */\n      dup3\n        /* \"#utility.yul\":5282:5291   */\n      dup10\n        /* \"#utility.yul\":5278:5300   */\n      add\n        /* \"#utility.yul\":5249:5310   */\n      tag_257\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5239:5310   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":5363:5365   */\n      0x60\n        /* \"#utility.yul\":5352:5361   */\n      dup7\n        /* \"#utility.yul\":5348:5366   */\n      add\n        /* \"#utility.yul\":5335:5367   */\n      calldataload\n        /* \"#utility.yul\":5392:5410   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5382:5390   */\n      dup2\n        /* \"#utility.yul\":5379:5411   */\n      gt\n        /* \"#utility.yul\":5376:5428   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":5424:5425   */\n      0x00\n        /* \"#utility.yul\":5421:5422   */\n      dup1\n        /* \"#utility.yul\":5414:5426   */\n      revert\n        /* \"#utility.yul\":5376:5428   */\n    tag_321:\n        /* \"#utility.yul\":5447:5510   */\n      tag_322\n        /* \"#utility.yul\":5502:5509   */\n      dup9\n        /* \"#utility.yul\":5491:5499   */\n      dup3\n        /* \"#utility.yul\":5480:5489   */\n      dup10\n        /* \"#utility.yul\":5476:5500   */\n      add\n        /* \"#utility.yul\":5447:5510   */\n      tag_257\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5437:5510   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5563:5566   */\n      0x80\n        /* \"#utility.yul\":5552:5561   */\n      dup7\n        /* \"#utility.yul\":5548:5567   */\n      add\n        /* \"#utility.yul\":5535:5568   */\n      calldataload\n        /* \"#utility.yul\":5593:5611   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5583:5591   */\n      dup2\n        /* \"#utility.yul\":5580:5612   */\n      gt\n        /* \"#utility.yul\":5577:5629   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":5625:5626   */\n      0x00\n        /* \"#utility.yul\":5622:5623   */\n      dup1\n        /* \"#utility.yul\":5615:5627   */\n      revert\n        /* \"#utility.yul\":5577:5629   */\n    tag_323:\n        /* \"#utility.yul\":5648:5699   */\n      tag_324\n        /* \"#utility.yul\":5691:5698   */\n      dup9\n        /* \"#utility.yul\":5680:5688   */\n      dup3\n        /* \"#utility.yul\":5669:5678   */\n      dup10\n        /* \"#utility.yul\":5665:5689   */\n      add\n        /* \"#utility.yul\":5648:5699   */\n      tag_259\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5638:5699   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4751:5705   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5710:6856   */\n    tag_46:\n        /* \"#utility.yul\":5828:5834   */\n      0x00\n        /* \"#utility.yul\":5836:5842   */\n      dup1\n        /* \"#utility.yul\":5889:5891   */\n      0x40\n        /* \"#utility.yul\":5877:5886   */\n      dup4\n        /* \"#utility.yul\":5868:5875   */\n      dup6\n        /* \"#utility.yul\":5864:5887   */\n      sub\n        /* \"#utility.yul\":5860:5892   */\n      slt\n        /* \"#utility.yul\":5857:5909   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":5905:5906   */\n      0x00\n        /* \"#utility.yul\":5902:5903   */\n      dup1\n        /* \"#utility.yul\":5895:5907   */\n      revert\n        /* \"#utility.yul\":5857:5909   */\n    tag_326:\n        /* \"#utility.yul\":5945:5954   */\n      dup3\n        /* \"#utility.yul\":5932:5955   */\n      calldataload\n        /* \"#utility.yul\":5978:5996   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5970:5976   */\n      dup2\n        /* \"#utility.yul\":5967:5997   */\n      gt\n        /* \"#utility.yul\":5964:6014   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":6010:6011   */\n      0x00\n        /* \"#utility.yul\":6007:6008   */\n      dup1\n        /* \"#utility.yul\":6000:6012   */\n      revert\n        /* \"#utility.yul\":5964:6014   */\n    tag_327:\n        /* \"#utility.yul\":6033:6055   */\n      dup4\n      add\n        /* \"#utility.yul\":6086:6090   */\n      0x1f\n        /* \"#utility.yul\":6078:6091   */\n      dup2\n      add\n        /* \"#utility.yul\":6074:6101   */\n      dup6\n      sgt\n        /* \"#utility.yul\":6064:6119   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":6115:6116   */\n      0x00\n        /* \"#utility.yul\":6112:6113   */\n      dup1\n        /* \"#utility.yul\":6105:6117   */\n      revert\n        /* \"#utility.yul\":6064:6119   */\n    tag_328:\n        /* \"#utility.yul\":6155:6157   */\n      dup1\n        /* \"#utility.yul\":6142:6158   */\n      calldataload\n        /* \"#utility.yul\":6178:6242   */\n      tag_329\n        /* \"#utility.yul\":6194:6241   */\n      tag_302\n        /* \"#utility.yul\":6234:6240   */\n      dup3\n        /* \"#utility.yul\":6194:6241   */\n      tag_256\n      jump\t// in\n        /* \"#utility.yul\":6178:6242   */\n    tag_329:\n        /* \"#utility.yul\":6264:6267   */\n      dup1\n        /* \"#utility.yul\":6288:6294   */\n      dup3\n        /* \"#utility.yul\":6283:6286   */\n      dup3\n        /* \"#utility.yul\":6276:6295   */\n      mstore\n        /* \"#utility.yul\":6320:6324   */\n      0x20\n        /* \"#utility.yul\":6315:6318   */\n      dup3\n        /* \"#utility.yul\":6311:6325   */\n      add\n        /* \"#utility.yul\":6304:6325   */\n      swap2\n      pop\n        /* \"#utility.yul\":6377:6381   */\n      0x20\n        /* \"#utility.yul\":6367:6373   */\n      dup4\n        /* \"#utility.yul\":6364:6365   */\n      0x05\n        /* \"#utility.yul\":6360:6374   */\n      shl\n        /* \"#utility.yul\":6356:6358   */\n      dup6\n        /* \"#utility.yul\":6352:6375   */\n      add\n        /* \"#utility.yul\":6348:6382   */\n      add\n        /* \"#utility.yul\":6334:6382   */\n      swap3\n      pop\n        /* \"#utility.yul\":6405:6412   */\n      dup8\n        /* \"#utility.yul\":6397:6403   */\n      dup4\n        /* \"#utility.yul\":6394:6413   */\n      gt\n        /* \"#utility.yul\":6391:6430   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":6426:6427   */\n      0x00\n        /* \"#utility.yul\":6423:6424   */\n      dup1\n        /* \"#utility.yul\":6416:6428   */\n      revert\n        /* \"#utility.yul\":6391:6430   */\n    tag_331:\n        /* \"#utility.yul\":6458:6462   */\n      0x20\n        /* \"#utility.yul\":6454:6456   */\n      dup5\n        /* \"#utility.yul\":6450:6463   */\n      add\n        /* \"#utility.yul\":6439:6463   */\n      swap4\n      pop\n        /* \"#utility.yul\":6472:6624   */\n    tag_332:\n        /* \"#utility.yul\":6488:6494   */\n      dup3\n        /* \"#utility.yul\":6483:6486   */\n      dup5\n        /* \"#utility.yul\":6480:6495   */\n      lt\n        /* \"#utility.yul\":6472:6624   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6556:6579   */\n      tag_335\n        /* \"#utility.yul\":6575:6578   */\n      dup5\n        /* \"#utility.yul\":6556:6579   */\n      tag_251\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6544:6580   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6609:6613   */\n      0x20\n        /* \"#utility.yul\":6505:6519   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":6600:6614   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":6472:6624   */\n      jump(tag_332)\n    tag_334:\n        /* \"#utility.yul\":6643:6648   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6701:6705   */\n      0x20\n        /* \"#utility.yul\":6686:6706   */\n      dup4\n      add\n        /* \"#utility.yul\":6673:6707   */\n      calldataload\n        /* \"#utility.yul\":6732:6750   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6719:6751   */\n      dup2\n      gt\n        /* \"#utility.yul\":6716:6768   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":6764:6765   */\n      0x00\n        /* \"#utility.yul\":6761:6762   */\n      dup1\n        /* \"#utility.yul\":6754:6766   */\n      revert\n        /* \"#utility.yul\":6716:6768   */\n    tag_336:\n        /* \"#utility.yul\":6787:6850   */\n      tag_337\n        /* \"#utility.yul\":6842:6849   */\n      dup6\n        /* \"#utility.yul\":6831:6839   */\n      dup3\n        /* \"#utility.yul\":6820:6829   */\n      dup7\n        /* \"#utility.yul\":6816:6840   */\n      add\n        /* \"#utility.yul\":6787:6850   */\n      tag_257\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6777:6850   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5710:6856   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6861:7281   */\n    tag_260:\n        /* \"#utility.yul\":6914:6917   */\n      0x00\n        /* \"#utility.yul\":6952:6957   */\n      dup2\n        /* \"#utility.yul\":6946:6958   */\n      mload\n        /* \"#utility.yul\":6979:6985   */\n      dup1\n        /* \"#utility.yul\":6974:6977   */\n      dup5\n        /* \"#utility.yul\":6967:6986   */\n      mstore\n        /* \"#utility.yul\":7011:7015   */\n      0x20\n        /* \"#utility.yul\":7006:7009   */\n      dup5\n        /* \"#utility.yul\":7002:7016   */\n      add\n        /* \"#utility.yul\":6995:7016   */\n      swap4\n      pop\n        /* \"#utility.yul\":7050:7054   */\n      0x20\n        /* \"#utility.yul\":7043:7048   */\n      dup4\n        /* \"#utility.yul\":7039:7055   */\n      add\n        /* \"#utility.yul\":7073:7074   */\n      0x00\n        /* \"#utility.yul\":7083:7256   */\n    tag_339:\n        /* \"#utility.yul\":7097:7103   */\n      dup3\n        /* \"#utility.yul\":7094:7095   */\n      dup2\n        /* \"#utility.yul\":7091:7104   */\n      lt\n        /* \"#utility.yul\":7083:7256   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":7158:7171   */\n      dup2\n      mload\n        /* \"#utility.yul\":7146:7172   */\n      dup7\n      mstore\n        /* \"#utility.yul\":7201:7205   */\n      0x20\n        /* \"#utility.yul\":7192:7206   */\n      swap6\n      dup7\n      add\n      swap6\n        /* \"#utility.yul\":7229:7246   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":7119:7120   */\n      0x01\n        /* \"#utility.yul\":7112:7121   */\n      add\n        /* \"#utility.yul\":7083:7256   */\n      jump(tag_339)\n    tag_341:\n      pop\n        /* \"#utility.yul\":7272:7275   */\n      swap4\n      swap5\n        /* \"#utility.yul\":6861:7281   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7286:7547   */\n    tag_49:\n        /* \"#utility.yul\":7465:7467   */\n      0x20\n        /* \"#utility.yul\":7454:7463   */\n      dup2\n        /* \"#utility.yul\":7447:7468   */\n      mstore\n        /* \"#utility.yul\":7428:7432   */\n      0x00\n        /* \"#utility.yul\":7485:7541   */\n      tag_83\n        /* \"#utility.yul\":7537:7539   */\n      0x20\n        /* \"#utility.yul\":7526:7535   */\n      dup4\n        /* \"#utility.yul\":7522:7540   */\n      add\n        /* \"#utility.yul\":7514:7520   */\n      dup5\n        /* \"#utility.yul\":7485:7541   */\n      tag_260\n      jump\t// in\n        /* \"#utility.yul\":7552:7899   */\n    tag_52:\n        /* \"#utility.yul\":7617:7623   */\n      0x00\n        /* \"#utility.yul\":7625:7631   */\n      dup1\n        /* \"#utility.yul\":7678:7680   */\n      0x40\n        /* \"#utility.yul\":7666:7675   */\n      dup4\n        /* \"#utility.yul\":7657:7664   */\n      dup6\n        /* \"#utility.yul\":7653:7676   */\n      sub\n        /* \"#utility.yul\":7649:7681   */\n      slt\n        /* \"#utility.yul\":7646:7698   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":7694:7695   */\n      0x00\n        /* \"#utility.yul\":7691:7692   */\n      dup1\n        /* \"#utility.yul\":7684:7696   */\n      revert\n        /* \"#utility.yul\":7646:7698   */\n    tag_345:\n        /* \"#utility.yul\":7717:7746   */\n      tag_346\n        /* \"#utility.yul\":7736:7745   */\n      dup4\n        /* \"#utility.yul\":7717:7746   */\n      tag_251\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7707:7746   */\n      swap2\n      pop\n        /* \"#utility.yul\":7796:7798   */\n      0x20\n        /* \"#utility.yul\":7785:7794   */\n      dup4\n        /* \"#utility.yul\":7781:7799   */\n      add\n        /* \"#utility.yul\":7768:7800   */\n      calldataload\n        /* \"#utility.yul\":7843:7848   */\n      dup1\n        /* \"#utility.yul\":7836:7849   */\n      iszero\n        /* \"#utility.yul\":7829:7850   */\n      iszero\n        /* \"#utility.yul\":7822:7827   */\n      dup2\n        /* \"#utility.yul\":7819:7851   */\n      eq\n        /* \"#utility.yul\":7809:7869   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":7865:7866   */\n      0x00\n        /* \"#utility.yul\":7862:7863   */\n      dup1\n        /* \"#utility.yul\":7855:7867   */\n      revert\n        /* \"#utility.yul\":7809:7869   */\n    tag_347:\n        /* \"#utility.yul\":7888:7893   */\n      dup1\n        /* \"#utility.yul\":7878:7893   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7552:7899   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7904:8542   */\n    tag_56:\n        /* \"#utility.yul\":7991:7997   */\n      0x00\n        /* \"#utility.yul\":7999:8005   */\n      dup1\n        /* \"#utility.yul\":8007:8013   */\n      0x00\n        /* \"#utility.yul\":8060:8062   */\n      0x60\n        /* \"#utility.yul\":8048:8057   */\n      dup5\n        /* \"#utility.yul\":8039:8046   */\n      dup7\n        /* \"#utility.yul\":8035:8058   */\n      sub\n        /* \"#utility.yul\":8031:8063   */\n      slt\n        /* \"#utility.yul\":8028:8080   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":8076:8077   */\n      0x00\n        /* \"#utility.yul\":8073:8074   */\n      dup1\n        /* \"#utility.yul\":8066:8078   */\n      revert\n        /* \"#utility.yul\":8028:8080   */\n    tag_349:\n        /* \"#utility.yul\":8099:8128   */\n      tag_350\n        /* \"#utility.yul\":8118:8127   */\n      dup5\n        /* \"#utility.yul\":8099:8128   */\n      tag_251\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8089:8128   */\n      swap3\n      pop\n        /* \"#utility.yul\":8197:8199   */\n      0x20\n        /* \"#utility.yul\":8182:8200   */\n      dup5\n      add\n        /* \"#utility.yul\":8169:8201   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":8276:8278   */\n      0x40\n        /* \"#utility.yul\":8261:8279   */\n      dup5\n      add\n        /* \"#utility.yul\":8248:8280   */\n      calldataload\n        /* \"#utility.yul\":8303:8321   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8292:8322   */\n      dup2\n      gt\n        /* \"#utility.yul\":8289:8339   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":8335:8336   */\n      0x00\n        /* \"#utility.yul\":8332:8333   */\n      dup1\n        /* \"#utility.yul\":8325:8337   */\n      revert\n        /* \"#utility.yul\":8289:8339   */\n    tag_351:\n        /* \"#utility.yul\":8358:8380   */\n      dup5\n      add\n        /* \"#utility.yul\":8411:8415   */\n      0x1f\n        /* \"#utility.yul\":8403:8416   */\n      dup2\n      add\n        /* \"#utility.yul\":8399:8426   */\n      dup7\n      sgt\n        /* \"#utility.yul\":8389:8444   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":8440:8441   */\n      0x00\n        /* \"#utility.yul\":8437:8438   */\n      dup1\n        /* \"#utility.yul\":8430:8442   */\n      revert\n        /* \"#utility.yul\":8389:8444   */\n    tag_352:\n        /* \"#utility.yul\":8463:8536   */\n      tag_353\n        /* \"#utility.yul\":8528:8535   */\n      dup7\n        /* \"#utility.yul\":8523:8525   */\n      dup3\n        /* \"#utility.yul\":8510:8526   */\n      calldataload\n        /* \"#utility.yul\":8505:8507   */\n      0x20\n        /* \"#utility.yul\":8501:8503   */\n      dup5\n        /* \"#utility.yul\":8497:8508   */\n      add\n        /* \"#utility.yul\":8463:8536   */\n      tag_258\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":8453:8536   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7904:8542   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8547:8807   */\n    tag_60:\n        /* \"#utility.yul\":8615:8621   */\n      0x00\n        /* \"#utility.yul\":8623:8629   */\n      dup1\n        /* \"#utility.yul\":8676:8678   */\n      0x40\n        /* \"#utility.yul\":8664:8673   */\n      dup4\n        /* \"#utility.yul\":8655:8662   */\n      dup6\n        /* \"#utility.yul\":8651:8674   */\n      sub\n        /* \"#utility.yul\":8647:8679   */\n      slt\n        /* \"#utility.yul\":8644:8696   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":8692:8693   */\n      0x00\n        /* \"#utility.yul\":8689:8690   */\n      dup1\n        /* \"#utility.yul\":8682:8694   */\n      revert\n        /* \"#utility.yul\":8644:8696   */\n    tag_355:\n        /* \"#utility.yul\":8715:8744   */\n      tag_356\n        /* \"#utility.yul\":8734:8743   */\n      dup4\n        /* \"#utility.yul\":8715:8744   */\n      tag_251\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8705:8744   */\n      swap2\n      pop\n        /* \"#utility.yul\":8763:8801   */\n      tag_357\n        /* \"#utility.yul\":8797:8799   */\n      0x20\n        /* \"#utility.yul\":8786:8795   */\n      dup5\n        /* \"#utility.yul\":8782:8800   */\n      add\n        /* \"#utility.yul\":8763:8801   */\n      tag_251\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":8753:8801   */\n      swap1\n      pop\n        /* \"#utility.yul\":8547:8807   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8812:9516   */\n    tag_65:\n        /* \"#utility.yul\":8916:8922   */\n      0x00\n        /* \"#utility.yul\":8924:8930   */\n      dup1\n        /* \"#utility.yul\":8932:8938   */\n      0x00\n        /* \"#utility.yul\":8940:8946   */\n      dup1\n        /* \"#utility.yul\":8948:8954   */\n      0x00\n        /* \"#utility.yul\":9001:9004   */\n      0xa0\n        /* \"#utility.yul\":8989:8998   */\n      dup7\n        /* \"#utility.yul\":8980:8987   */\n      dup9\n        /* \"#utility.yul\":8976:8999   */\n      sub\n        /* \"#utility.yul\":8972:9005   */\n      slt\n        /* \"#utility.yul\":8969:9022   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":9018:9019   */\n      0x00\n        /* \"#utility.yul\":9015:9016   */\n      dup1\n        /* \"#utility.yul\":9008:9020   */\n      revert\n        /* \"#utility.yul\":8969:9022   */\n    tag_359:\n        /* \"#utility.yul\":9041:9070   */\n      tag_360\n        /* \"#utility.yul\":9060:9069   */\n      dup7\n        /* \"#utility.yul\":9041:9070   */\n      tag_251\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9031:9070   */\n      swap5\n      pop\n        /* \"#utility.yul\":9089:9127   */\n      tag_361\n        /* \"#utility.yul\":9123:9125   */\n      0x20\n        /* \"#utility.yul\":9112:9121   */\n      dup8\n        /* \"#utility.yul\":9108:9126   */\n      add\n        /* \"#utility.yul\":9089:9127   */\n      tag_251\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9079:9127   */\n      swap4\n      pop\n        /* \"#utility.yul\":9196:9198   */\n      0x40\n        /* \"#utility.yul\":9181:9199   */\n      dup7\n      add\n        /* \"#utility.yul\":9168:9200   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":9297:9299   */\n      0x60\n        /* \"#utility.yul\":9282:9300   */\n      dup7\n      add\n        /* \"#utility.yul\":9269:9301   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":9378:9381   */\n      0x80\n        /* \"#utility.yul\":9363:9382   */\n      dup7\n      add\n        /* \"#utility.yul\":9350:9383   */\n      calldataload\n        /* \"#utility.yul\":9406:9424   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9395:9425   */\n      dup2\n      gt\n        /* \"#utility.yul\":9392:9442   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":9438:9439   */\n      0x00\n        /* \"#utility.yul\":9435:9436   */\n      dup1\n        /* \"#utility.yul\":9428:9440   */\n      revert\n        /* \"#utility.yul\":9521:9901   */\n    tag_75:\n        /* \"#utility.yul\":9600:9601   */\n      0x01\n        /* \"#utility.yul\":9596:9608   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9643:9655   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9664:9725   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":9718:9722   */\n      0x7f\n        /* \"#utility.yul\":9710:9716   */\n      dup3\n        /* \"#utility.yul\":9706:9723   */\n      and\n        /* \"#utility.yul\":9696:9723   */\n      swap2\n      pop\n        /* \"#utility.yul\":9664:9725   */\n    tag_365:\n        /* \"#utility.yul\":9771:9773   */\n      0x20\n        /* \"#utility.yul\":9763:9769   */\n      dup3\n        /* \"#utility.yul\":9760:9774   */\n      lt\n        /* \"#utility.yul\":9740:9758   */\n      dup2\n        /* \"#utility.yul\":9737:9775   */\n      sub\n        /* \"#utility.yul\":9734:9895   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":9817:9827   */\n      0x4e487b71\n        /* \"#utility.yul\":9812:9815   */\n      0xe0\n        /* \"#utility.yul\":9808:9828   */\n      shl\n        /* \"#utility.yul\":9805:9806   */\n      0x00\n        /* \"#utility.yul\":9798:9829   */\n      mstore\n        /* \"#utility.yul\":9852:9856   */\n      0x22\n        /* \"#utility.yul\":9849:9850   */\n      0x04\n        /* \"#utility.yul\":9842:9857   */\n      mstore\n        /* \"#utility.yul\":9880:9884   */\n      0x24\n        /* \"#utility.yul\":9877:9878   */\n      0x00\n        /* \"#utility.yul\":9870:9885   */\n      revert\n        /* \"#utility.yul\":9734:9895   */\n    tag_366:\n      pop\n        /* \"#utility.yul\":9521:9901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10032:11007   */\n    tag_85:\n        /* \"#utility.yul\":10208:10211   */\n      0x00\n        /* \"#utility.yul\":10237:10238   */\n      dup1\n        /* \"#utility.yul\":10270:10276   */\n      dup5\n        /* \"#utility.yul\":10264:10277   */\n      sload\n        /* \"#utility.yul\":10300:10336   */\n      tag_369\n        /* \"#utility.yul\":10326:10335   */\n      dup2\n        /* \"#utility.yul\":10300:10336   */\n      tag_75\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":10367:10368   */\n      0x01\n        /* \"#utility.yul\":10352:10369   */\n      dup3\n      and\n        /* \"#utility.yul\":10378:10511   */\n      dup1\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":10525:10526   */\n      0x01\n        /* \"#utility.yul\":10520:10852   */\n      dup2\n      eq\n      tag_372\n      jumpi\n        /* \"#utility.yul\":10345:10852   */\n      jump(tag_370)\n        /* \"#utility.yul\":10378:10511   */\n    tag_371:\n      not(0xff)\n        /* \"#utility.yul\":10411:10435   */\n      dup4\n      and\n        /* \"#utility.yul\":10399:10436   */\n      dup7\n      mstore\n        /* \"#utility.yul\":10484:10498   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10477:10499   */\n      iszero\n        /* \"#utility.yul\":10465:10500   */\n      dup3\n      mul\n        /* \"#utility.yul\":10456:10501   */\n      dup7\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":10378:10511   */\n      jump(tag_370)\n        /* \"#utility.yul\":10520:10852   */\n    tag_372:\n        /* \"#utility.yul\":10551:10557   */\n      dup8\n        /* \"#utility.yul\":10548:10549   */\n      0x00\n        /* \"#utility.yul\":10541:10558   */\n      mstore\n        /* \"#utility.yul\":10599:10603   */\n      0x20\n        /* \"#utility.yul\":10596:10597   */\n      0x00\n        /* \"#utility.yul\":10586:10604   */\n      keccak256\n        /* \"#utility.yul\":10626:10627   */\n      0x00\n        /* \"#utility.yul\":10640:10806   */\n    tag_373:\n        /* \"#utility.yul\":10654:10660   */\n      dup4\n        /* \"#utility.yul\":10651:10652   */\n      dup2\n        /* \"#utility.yul\":10648:10661   */\n      lt\n        /* \"#utility.yul\":10640:10806   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":10734:10748   */\n      dup2\n      sload\n        /* \"#utility.yul\":10721:10732   */\n      dup9\n      dup3\n      add\n        /* \"#utility.yul\":10714:10749   */\n      mstore\n        /* \"#utility.yul\":10790:10791   */\n      0x01\n        /* \"#utility.yul\":10777:10792   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":10676:10680   */\n      0x20\n        /* \"#utility.yul\":10669:10681   */\n      add\n        /* \"#utility.yul\":10640:10806   */\n      jump(tag_373)\n    tag_375:\n        /* \"#utility.yul\":10644:10647   */\n      pop\n      pop\n        /* \"#utility.yul\":10835:10841   */\n      dup2\n        /* \"#utility.yul\":10830:10833   */\n      dup7\n        /* \"#utility.yul\":10826:10842   */\n      add\n        /* \"#utility.yul\":10819:10842   */\n      swap4\n      pop\n        /* \"#utility.yul\":10345:10852   */\n    tag_370:\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10883:10889   */\n      dup4\n        /* \"#utility.yul\":10877:10890   */\n      mload\n        /* \"#utility.yul\":10899:10967   */\n      tag_376\n        /* \"#utility.yul\":10958:10966   */\n      dup2\n        /* \"#utility.yul\":10953:10956   */\n      dup4\n        /* \"#utility.yul\":10946:10950   */\n      0x20\n        /* \"#utility.yul\":10938:10944   */\n      dup9\n        /* \"#utility.yul\":10934:10951   */\n      add\n        /* \"#utility.yul\":10899:10967   */\n      tag_253\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10983:11001   */\n      add\n      swap5\n        /* \"#utility.yul\":10032:11007   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11570:11697   */\n    tag_116:\n        /* \"#utility.yul\":11631:11641   */\n      0x4e487b71\n        /* \"#utility.yul\":11626:11629   */\n      0xe0\n        /* \"#utility.yul\":11622:11642   */\n      shl\n        /* \"#utility.yul\":11619:11620   */\n      0x00\n        /* \"#utility.yul\":11612:11643   */\n      mstore\n        /* \"#utility.yul\":11662:11666   */\n      0x32\n        /* \"#utility.yul\":11659:11660   */\n      0x04\n        /* \"#utility.yul\":11652:11667   */\n      mstore\n        /* \"#utility.yul\":11686:11690   */\n      0x24\n        /* \"#utility.yul\":11683:11684   */\n      0x00\n        /* \"#utility.yul\":11676:11691   */\n      revert\n        /* \"#utility.yul\":11702:11829   */\n    tag_262:\n        /* \"#utility.yul\":11763:11773   */\n      0x4e487b71\n        /* \"#utility.yul\":11758:11761   */\n      0xe0\n        /* \"#utility.yul\":11754:11774   */\n      shl\n        /* \"#utility.yul\":11751:11752   */\n      0x00\n        /* \"#utility.yul\":11744:11775   */\n      mstore\n        /* \"#utility.yul\":11794:11798   */\n      0x11\n        /* \"#utility.yul\":11791:11792   */\n      0x04\n        /* \"#utility.yul\":11784:11799   */\n      mstore\n        /* \"#utility.yul\":11818:11822   */\n      0x24\n        /* \"#utility.yul\":11815:11816   */\n      0x00\n        /* \"#utility.yul\":11808:11823   */\n      revert\n        /* \"#utility.yul\":11834:11969   */\n    tag_127:\n        /* \"#utility.yul\":11873:11876   */\n      0x00\n        /* \"#utility.yul\":11894:11911   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11891:11934   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":11914:11932   */\n      tag_383\n      tag_262\n      jump\t// in\n    tag_383:\n      pop\n        /* \"#utility.yul\":11961:11962   */\n      0x01\n        /* \"#utility.yul\":11950:11963   */\n      add\n      swap1\n        /* \"#utility.yul\":11834:11969   */\n      jump\t// out\n        /* \"#utility.yul\":12182:12700   */\n    tag_263:\n        /* \"#utility.yul\":12284:12286   */\n      0x1f\n        /* \"#utility.yul\":12279:12282   */\n      dup3\n        /* \"#utility.yul\":12276:12287   */\n      gt\n        /* \"#utility.yul\":12273:12694   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":12320:12325   */\n      dup1\n        /* \"#utility.yul\":12317:12318   */\n      0x00\n        /* \"#utility.yul\":12310:12326   */\n      mstore\n        /* \"#utility.yul\":12364:12368   */\n      0x20\n        /* \"#utility.yul\":12361:12362   */\n      0x00\n        /* \"#utility.yul\":12351:12369   */\n      keccak256\n        /* \"#utility.yul\":12434:12436   */\n      0x1f\n        /* \"#utility.yul\":12422:12432   */\n      dup5\n        /* \"#utility.yul\":12418:12437   */\n      add\n        /* \"#utility.yul\":12415:12416   */\n      0x05\n        /* \"#utility.yul\":12411:12438   */\n      shr\n        /* \"#utility.yul\":12405:12409   */\n      dup2\n        /* \"#utility.yul\":12401:12439   */\n      add\n        /* \"#utility.yul\":12470:12474   */\n      0x20\n        /* \"#utility.yul\":12458:12468   */\n      dup6\n        /* \"#utility.yul\":12455:12475   */\n      lt\n        /* \"#utility.yul\":12452:12499   */\n      iszero\n      tag_387\n      jumpi\n      pop\n        /* \"#utility.yul\":12493:12497   */\n      dup1\n        /* \"#utility.yul\":12452:12499   */\n    tag_387:\n        /* \"#utility.yul\":12548:12550   */\n      0x1f\n        /* \"#utility.yul\":12543:12546   */\n      dup5\n        /* \"#utility.yul\":12539:12551   */\n      add\n        /* \"#utility.yul\":12536:12537   */\n      0x05\n        /* \"#utility.yul\":12532:12552   */\n      shr\n        /* \"#utility.yul\":12526:12530   */\n      dup3\n        /* \"#utility.yul\":12522:12553   */\n      add\n        /* \"#utility.yul\":12512:12553   */\n      swap2\n      pop\n        /* \"#utility.yul\":12603:12684   */\n    tag_388:\n        /* \"#utility.yul\":12621:12623   */\n      dup2\n        /* \"#utility.yul\":12614:12619   */\n      dup2\n        /* \"#utility.yul\":12611:12624   */\n      lt\n        /* \"#utility.yul\":12603:12684   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":12680:12681   */\n      0x00\n        /* \"#utility.yul\":12666:12682   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12647:12648   */\n      0x01\n        /* \"#utility.yul\":12636:12649   */\n      add\n        /* \"#utility.yul\":12603:12684   */\n      jump(tag_388)\n        /* \"#utility.yul\":12273:12694   */\n    tag_386:\n        /* \"#utility.yul\":12182:12700   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12876:14175   */\n    tag_167:\n        /* \"#utility.yul\":13002:13005   */\n      dup2\n        /* \"#utility.yul\":12996:13006   */\n      mload\n        /* \"#utility.yul\":13029:13047   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13021:13027   */\n      dup2\n        /* \"#utility.yul\":13018:13048   */\n      gt\n        /* \"#utility.yul\":13015:13071   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":13051:13069   */\n      tag_394\n      tag_104\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13080:13177   */\n      tag_395\n        /* \"#utility.yul\":13170:13176   */\n      dup2\n        /* \"#utility.yul\":13130:13168   */\n      tag_396\n        /* \"#utility.yul\":13162:13166   */\n      dup5\n        /* \"#utility.yul\":13156:13167   */\n      sload\n        /* \"#utility.yul\":13130:13168   */\n      tag_75\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":13124:13128   */\n      dup5\n        /* \"#utility.yul\":13080:13177   */\n      tag_263\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":13226:13230   */\n      0x20\n        /* \"#utility.yul\":13257:13259   */\n      0x1f\n        /* \"#utility.yul\":13246:13260   */\n      dup3\n      gt\n        /* \"#utility.yul\":13274:13275   */\n      0x01\n        /* \"#utility.yul\":13269:13918   */\n      dup2\n      eq\n      tag_398\n      jumpi\n        /* \"#utility.yul\":13962:13963   */\n      0x00\n        /* \"#utility.yul\":13979:13985   */\n      dup4\n        /* \"#utility.yul\":13976:14065   */\n      iszero\n      tag_399\n      jumpi\n      pop\n        /* \"#utility.yul\":14031:14050   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":14025:14051   */\n      mload\n        /* \"#utility.yul\":13976:14065   */\n    tag_399:\n      not(0x00)\n        /* \"#utility.yul\":12833:12834   */\n      0x03\n        /* \"#utility.yul\":12829:12840   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":12825:12849   */\n      shr\n        /* \"#utility.yul\":12821:12850   */\n      not\n        /* \"#utility.yul\":12811:12851   */\n      and\n        /* \"#utility.yul\":12857:12858   */\n      0x01\n        /* \"#utility.yul\":12853:12864   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":12808:12865   */\n      or\n        /* \"#utility.yul\":14078:14159   */\n      dup5\n      sstore\n        /* \"#utility.yul\":13239:14169   */\n      jump(tag_151)\n        /* \"#utility.yul\":13269:13918   */\n    tag_398:\n        /* \"#utility.yul\":9979:9980   */\n      0x00\n        /* \"#utility.yul\":9972:9986   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":10016:10020   */\n      0x20\n        /* \"#utility.yul\":10003:10021   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":13305:13325   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":13423:13645   */\n    tag_402:\n        /* \"#utility.yul\":13437:13444   */\n      dup3\n        /* \"#utility.yul\":13434:13435   */\n      dup2\n        /* \"#utility.yul\":13431:13445   */\n      lt\n        /* \"#utility.yul\":13423:13645   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":13519:13538   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":13513:13539   */\n      mload\n        /* \"#utility.yul\":13498:13540   */\n      dup3\n      sstore\n        /* \"#utility.yul\":13626:13630   */\n      0x20\n        /* \"#utility.yul\":13611:13631   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":13579:13580   */\n      0x01\n        /* \"#utility.yul\":13567:13581   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":13453:13465   */\n      add\n        /* \"#utility.yul\":13423:13645   */\n      jump(tag_402)\n    tag_404:\n        /* \"#utility.yul\":13427:13430   */\n      pop\n        /* \"#utility.yul\":13673:13679   */\n      dup5\n        /* \"#utility.yul\":13664:13671   */\n      dup3\n        /* \"#utility.yul\":13661:13680   */\n      lt\n        /* \"#utility.yul\":13658:13859   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":13734:13753   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":13728:13754   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":13817:13818   */\n      0x03\n        /* \"#utility.yul\":13813:13827   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":13829:13832   */\n      0xf8\n        /* \"#utility.yul\":13809:13833   */\n      and\n        /* \"#utility.yul\":13805:13842   */\n      shr\n        /* \"#utility.yul\":13801:13843   */\n      not\n        /* \"#utility.yul\":13786:13844   */\n      and\n        /* \"#utility.yul\":13771:13845   */\n      dup2\n      sstore\n        /* \"#utility.yul\":13658:13859   */\n    tag_405:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13905:13906   */\n      0x01\n        /* \"#utility.yul\":13889:13903   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":13885:13907   */\n      add\n        /* \"#utility.yul\":13872:13908   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":12876:14175   */\n      jump\t// out\n        /* \"#utility.yul\":14602:14727   */\n    tag_206:\n        /* \"#utility.yul\":14667:14676   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14688:14698   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":14685:14721   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":14701:14719   */\n      tag_67\n      tag_262\n      jump\t// in\n        /* \"#utility.yul\":14732:15197   */\n    tag_213:\n        /* \"#utility.yul\":14989:14991   */\n      0x40\n        /* \"#utility.yul\":14978:14987   */\n      dup2\n        /* \"#utility.yul\":14971:14992   */\n      mstore\n        /* \"#utility.yul\":14952:14956   */\n      0x00\n        /* \"#utility.yul\":15015:15071   */\n      tag_411\n        /* \"#utility.yul\":15067:15069   */\n      0x40\n        /* \"#utility.yul\":15056:15065   */\n      dup4\n        /* \"#utility.yul\":15052:15070   */\n      add\n        /* \"#utility.yul\":15044:15050   */\n      dup6\n        /* \"#utility.yul\":15015:15071   */\n      tag_260\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":15119:15128   */\n      dup3\n        /* \"#utility.yul\":15111:15117   */\n      dup2\n        /* \"#utility.yul\":15107:15129   */\n      sub\n        /* \"#utility.yul\":15102:15104   */\n      0x20\n        /* \"#utility.yul\":15091:15100   */\n      dup5\n        /* \"#utility.yul\":15087:15105   */\n      add\n        /* \"#utility.yul\":15080:15130   */\n      mstore\n        /* \"#utility.yul\":15147:15191   */\n      tag_412\n        /* \"#utility.yul\":15184:15190   */\n      dup2\n        /* \"#utility.yul\":15176:15182   */\n      dup6\n        /* \"#utility.yul\":15147:15191   */\n      tag_260\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":15139:15191   */\n      swap6\n        /* \"#utility.yul\":14732:15197   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15202:15759   */\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15461:15493   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":15443:15494   */\n      dup3\n      mstore\n        /* \"#utility.yul\":15530:15562   */\n      dup6\n      and\n        /* \"#utility.yul\":15525:15527   */\n      0x20\n        /* \"#utility.yul\":15510:15528   */\n      dup3\n      add\n        /* \"#utility.yul\":15503:15563   */\n      mstore\n        /* \"#utility.yul\":15594:15596   */\n      0x40\n        /* \"#utility.yul\":15579:15597   */\n      dup2\n      add\n        /* \"#utility.yul\":15572:15606   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":15637:15639   */\n      0x60\n        /* \"#utility.yul\":15622:15640   */\n      dup2\n      add\n        /* \"#utility.yul\":15615:15649   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":15481:15484   */\n      0xa0\n        /* \"#utility.yul\":15680:15683   */\n      0x80\n        /* \"#utility.yul\":15665:15684   */\n      dup3\n      add\n        /* \"#utility.yul\":15658:15690   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":15707:15753   */\n      tag_414\n      swap1\n        /* \"#utility.yul\":15733:15752   */\n      dup4\n      add\n        /* \"#utility.yul\":15725:15731   */\n      dup5\n        /* \"#utility.yul\":15707:15753   */\n      tag_254\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":15699:15753   */\n      swap8\n        /* \"#utility.yul\":15202:15759   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15764:16013   */\n    tag_220:\n        /* \"#utility.yul\":15833:15839   */\n      0x00\n        /* \"#utility.yul\":15886:15888   */\n      0x20\n        /* \"#utility.yul\":15874:15883   */\n      dup3\n        /* \"#utility.yul\":15865:15872   */\n      dup5\n        /* \"#utility.yul\":15861:15884   */\n      sub\n        /* \"#utility.yul\":15857:15889   */\n      slt\n        /* \"#utility.yul\":15854:15906   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":15902:15903   */\n      0x00\n        /* \"#utility.yul\":15899:15900   */\n      dup1\n        /* \"#utility.yul\":15892:15904   */\n      revert\n        /* \"#utility.yul\":15854:15906   */\n    tag_416:\n        /* \"#utility.yul\":15934:15943   */\n      dup2\n        /* \"#utility.yul\":15928:15944   */\n      mload\n        /* \"#utility.yul\":15953:15983   */\n      tag_83\n        /* \"#utility.yul\":15977:15982   */\n      dup2\n        /* \"#utility.yul\":15953:15983   */\n      tag_252\n      jump\t// in\n        /* \"#utility.yul\":16018:16841   */\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16377:16409   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":16359:16410   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16446:16478   */\n      dup6\n      and\n        /* \"#utility.yul\":16441:16443   */\n      0x20\n        /* \"#utility.yul\":16426:16444   */\n      dup3\n      add\n        /* \"#utility.yul\":16419:16479   */\n      mstore\n        /* \"#utility.yul\":16397:16400   */\n      0xa0\n        /* \"#utility.yul\":16510:16512   */\n      0x40\n        /* \"#utility.yul\":16495:16513   */\n      dup3\n      add\n        /* \"#utility.yul\":16488:16519   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":16542:16599   */\n      tag_419\n      swap1\n        /* \"#utility.yul\":16579:16598   */\n      dup4\n      add\n        /* \"#utility.yul\":16571:16577   */\n      dup7\n        /* \"#utility.yul\":16542:16599   */\n      tag_260\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":16647:16656   */\n      dup3\n        /* \"#utility.yul\":16639:16645   */\n      dup2\n        /* \"#utility.yul\":16635:16657   */\n      sub\n        /* \"#utility.yul\":16630:16632   */\n      0x60\n        /* \"#utility.yul\":16619:16628   */\n      dup5\n        /* \"#utility.yul\":16615:16633   */\n      add\n        /* \"#utility.yul\":16608:16658   */\n      mstore\n        /* \"#utility.yul\":16681:16725   */\n      tag_420\n        /* \"#utility.yul\":16718:16724   */\n      dup2\n        /* \"#utility.yul\":16710:16716   */\n      dup7\n        /* \"#utility.yul\":16681:16725   */\n      tag_260\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":16667:16725   */\n      swap1\n      pop\n        /* \"#utility.yul\":16774:16783   */\n      dup3\n        /* \"#utility.yul\":16766:16772   */\n      dup2\n        /* \"#utility.yul\":16762:16784   */\n      sub\n        /* \"#utility.yul\":16756:16759   */\n      0x80\n        /* \"#utility.yul\":16745:16754   */\n      dup5\n        /* \"#utility.yul\":16741:16760   */\n      add\n        /* \"#utility.yul\":16734:16785   */\n      mstore\n        /* \"#utility.yul\":16802:16835   */\n      tag_421\n        /* \"#utility.yul\":16828:16834   */\n      dup2\n        /* \"#utility.yul\":16820:16826   */\n      dup6\n        /* \"#utility.yul\":16802:16835   */\n      tag_254\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":16794:16835   */\n      swap9\n        /* \"#utility.yul\":16018:16841   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122052fdafcd2ee8d69b5154f76ad2b24e5306494a4397c10692db7c0eb57ef6069b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3242": {
									"entryPoint": null,
									"id": 3242,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setURI_810": {
									"entryPoint": 68,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2652:15",
										"nodeType": "YulBlock",
										"src": "0:2652:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:15",
													"nodeType": "YulBlock",
													"src": "46:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:15",
																		"nodeType": "YulLiteral",
																		"src": "63:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:15",
																				"nodeType": "YulLiteral",
																				"src": "70:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:15",
																				"nodeType": "YulLiteral",
																				"src": "75:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:15"
																		},
																		"nativeSrc": "66:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:15"
																},
																"nativeSrc": "56:31:15",
																"nodeType": "YulFunctionCall",
																"src": "56:31:15"
															},
															"nativeSrc": "56:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:15",
																		"nodeType": "YulLiteral",
																		"src": "103:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:15",
																		"nodeType": "YulLiteral",
																		"src": "106:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:15"
																},
																"nativeSrc": "96:15:15",
																"nodeType": "YulFunctionCall",
																"src": "96:15:15"
															},
															"nativeSrc": "96:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:15",
																		"nodeType": "YulLiteral",
																		"src": "127:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:15",
																		"nodeType": "YulLiteral",
																		"src": "130:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:15"
																},
																"nativeSrc": "120:15:15",
																"nodeType": "YulFunctionCall",
																"src": "120:15:15"
															},
															"nativeSrc": "120:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:15"
											},
											{
												"body": {
													"nativeSrc": "201:325:15",
													"nodeType": "YulBlock",
													"src": "201:325:15",
													"statements": [
														{
															"nativeSrc": "211:22:15",
															"nodeType": "YulAssignment",
															"src": "211:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:15",
																		"nodeType": "YulLiteral",
																		"src": "225:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:15"
																},
																"nativeSrc": "221:12:15",
																"nodeType": "YulFunctionCall",
																"src": "221:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:15"
																}
															]
														},
														{
															"nativeSrc": "242:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:15",
																		"nodeType": "YulLiteral",
																		"src": "278:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:15"
																},
																"nativeSrc": "268:12:15",
																"nodeType": "YulFunctionCall",
																"src": "268:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:15",
																	"nodeType": "YulTypedName",
																	"src": "246:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:15",
																"nodeType": "YulBlock",
																"src": "319:31:15",
																"statements": [
																	{
																		"nativeSrc": "321:27:15",
																		"nodeType": "YulAssignment",
																		"src": "321:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:15",
																					"nodeType": "YulLiteral",
																					"src": "343:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:15"
																			},
																			"nativeSrc": "331:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:15"
																},
																"nativeSrc": "292:26:15",
																"nodeType": "YulFunctionCall",
																"src": "292:26:15"
															},
															"nativeSrc": "289:61:15",
															"nodeType": "YulIf",
															"src": "289:61:15"
														},
														{
															"body": {
																"nativeSrc": "409:111:15",
																"nodeType": "YulBlock",
																"src": "409:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:15",
																					"nodeType": "YulLiteral",
																					"src": "430:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:15",
																							"nodeType": "YulLiteral",
																							"src": "437:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:15",
																							"nodeType": "YulLiteral",
																							"src": "442:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:15"
																					},
																					"nativeSrc": "433:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:15"
																			},
																			"nativeSrc": "423:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:15"
																		},
																		"nativeSrc": "423:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:15",
																					"nodeType": "YulLiteral",
																					"src": "474:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:15",
																					"nodeType": "YulLiteral",
																					"src": "477:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:15"
																			},
																			"nativeSrc": "467:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:15"
																		},
																		"nativeSrc": "467:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:15",
																					"nodeType": "YulLiteral",
																					"src": "502:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:15",
																					"nodeType": "YulLiteral",
																					"src": "505:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:15"
																			},
																			"nativeSrc": "495:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:15"
																		},
																		"nativeSrc": "495:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:15",
																				"nodeType": "YulLiteral",
																				"src": "396:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:15"
																		},
																		"nativeSrc": "385:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:15"
																},
																"nativeSrc": "362:38:15",
																"nodeType": "YulFunctionCall",
																"src": "362:38:15"
															},
															"nativeSrc": "359:161:15",
															"nodeType": "YulIf",
															"src": "359:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:15",
														"nodeType": "YulTypedName",
														"src": "181:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:15",
														"nodeType": "YulTypedName",
														"src": "190:6:15",
														"type": ""
													}
												],
												"src": "146:380:15"
											},
											{
												"body": {
													"nativeSrc": "587:65:15",
													"nodeType": "YulBlock",
													"src": "587:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:15",
																		"nodeType": "YulLiteral",
																		"src": "604:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:15"
																},
																"nativeSrc": "597:14:15",
																"nodeType": "YulFunctionCall",
																"src": "597:14:15"
															},
															"nativeSrc": "597:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:15"
														},
														{
															"nativeSrc": "620:26:15",
															"nodeType": "YulAssignment",
															"src": "620:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:15",
																		"nodeType": "YulLiteral",
																		"src": "638:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:15",
																		"nodeType": "YulLiteral",
																		"src": "641:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:15"
																},
																"nativeSrc": "628:18:15",
																"nodeType": "YulFunctionCall",
																"src": "628:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:15",
														"nodeType": "YulTypedName",
														"src": "570:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:15",
														"nodeType": "YulTypedName",
														"src": "578:4:15",
														"type": ""
													}
												],
												"src": "531:121:15"
											},
											{
												"body": {
													"nativeSrc": "738:437:15",
													"nodeType": "YulBlock",
													"src": "738:437:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:15",
																"nodeType": "YulBlock",
																"src": "771:398:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:15",
																					"nodeType": "YulLiteral",
																					"src": "792:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:15"
																			},
																			"nativeSrc": "785:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:15"
																		},
																		"nativeSrc": "785:16:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:15"
																	},
																	{
																		"nativeSrc": "814:30:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:15",
																					"nodeType": "YulLiteral",
																					"src": "836:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:15",
																					"nodeType": "YulLiteral",
																					"src": "839:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:15"
																			},
																			"nativeSrc": "826:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:15"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:15",
																				"nodeType": "YulTypedName",
																				"src": "818:4:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:15",
																							"nodeType": "YulLiteral",
																							"src": "890:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:15",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:15",
																									"nodeType": "YulLiteral",
																									"src": "909:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:15"
																							},
																							"nativeSrc": "893:19:15",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:15"
																					},
																					"nativeSrc": "886:27:15",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:15"
																			},
																			"nativeSrc": "876:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:15",
																				"nodeType": "YulTypedName",
																				"src": "861:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:15",
																			"nodeType": "YulBlock",
																			"src": "951:23:15",
																			"statements": [
																				{
																					"nativeSrc": "953:19:15",
																					"nodeType": "YulAssignment",
																					"src": "953:19:15",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:15",
																					"nodeType": "YulLiteral",
																					"src": "945:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:15"
																			},
																			"nativeSrc": "930:20:15",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:15"
																		},
																		"nativeSrc": "927:47:15",
																		"nodeType": "YulIf",
																		"src": "927:47:15"
																	},
																	{
																		"nativeSrc": "987:41:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:15",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:15"
																							},
																							"nativeSrc": "1014:12:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:15"
																					},
																					"nativeSrc": "1007:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:15"
																			},
																			"nativeSrc": "997:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:15"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:15",
																				"nodeType": "YulTypedName",
																				"src": "991:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:15",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:15"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:15",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:15",
																			"nodeType": "YulBlock",
																			"src": "1139:20:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:15"
																						},
																						"nativeSrc": "1141:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:15"
																					},
																					"nativeSrc": "1141:16:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:15"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:15"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:15"
																			},
																			"nativeSrc": "1086:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:15"
																		},
																		"nativeSrc": "1078:81:15",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:15",
																			"nodeType": "YulBlock",
																			"src": "1100:26:15",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:15",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:15"
																						},
																						"nativeSrc": "1111:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:15"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:15"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:15",
																			"nodeType": "YulBlock",
																			"src": "1082:3:15",
																			"statements": []
																		},
																		"src": "1078:81:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:15",
																		"nodeType": "YulLiteral",
																		"src": "759:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:15"
																},
																"nativeSrc": "751:11:15",
																"nodeType": "YulFunctionCall",
																"src": "751:11:15"
															},
															"nativeSrc": "748:421:15",
															"nodeType": "YulIf",
															"src": "748:421:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:15",
														"nodeType": "YulTypedName",
														"src": "710:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:15",
														"nodeType": "YulTypedName",
														"src": "717:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:15",
														"nodeType": "YulTypedName",
														"src": "722:10:15",
														"type": ""
													}
												],
												"src": "657:518:15"
											},
											{
												"body": {
													"nativeSrc": "1265:81:15",
													"nodeType": "YulBlock",
													"src": "1265:81:15",
													"statements": [
														{
															"nativeSrc": "1275:65:15",
															"nodeType": "YulAssignment",
															"src": "1275:65:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:15",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:15"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:15"
																								},
																								"nativeSrc": "1304:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:15",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:15"
																								},
																								"nativeSrc": "1317:6:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:15"
																						},
																						"nativeSrc": "1300:24:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:15"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:15"
																				},
																				"nativeSrc": "1296:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:15"
																		},
																		"nativeSrc": "1286:40:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:15",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:15"
																		},
																		"nativeSrc": "1328:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:15"
																},
																"nativeSrc": "1283:57:15",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:15",
														"nodeType": "YulTypedName",
														"src": "1242:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:15",
														"nodeType": "YulTypedName",
														"src": "1248:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:15",
														"nodeType": "YulTypedName",
														"src": "1256:4:15",
														"type": ""
													}
												],
												"src": "1180:166:15"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:15",
													"nodeType": "YulBlock",
													"src": "1447:1203:15",
													"statements": [
														{
															"nativeSrc": "1457:24:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:15"
																},
																"nativeSrc": "1471:10:15",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:15",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:15",
																"nodeType": "YulBlock",
																"src": "1524:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:15"
																			},
																			"nativeSrc": "1526:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:15"
																		},
																		"nativeSrc": "1526:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:15",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:15",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:15"
																				},
																				"nativeSrc": "1508:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:15"
																		},
																		"nativeSrc": "1504:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:15"
																},
																"nativeSrc": "1493:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:15"
															},
															"nativeSrc": "1490:56:15",
															"nodeType": "YulIf",
															"src": "1490:56:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:15"
																				},
																				"nativeSrc": "1631:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:15"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:15",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:15"
																		},
																		"nativeSrc": "1605:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:15"
																},
																"nativeSrc": "1555:97:15",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:15"
															},
															"nativeSrc": "1555:97:15",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:15"
														},
														{
															"nativeSrc": "1661:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:15",
																"nodeType": "YulLiteral",
																"src": "1678:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:15",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:15",
															"nodeType": "YulAssignment",
															"src": "1688:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:15",
																"nodeType": "YulLiteral",
																"src": "1701:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:15",
																		"nodeType": "YulBlock",
																		"src": "1751:642:15",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:15"
																							},
																							"nativeSrc": "1792:7:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:15"
																					},
																					"nativeSrc": "1780:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:15",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:15",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:15"
																					},
																					"nativeSrc": "1827:35:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:15",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:15",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:15",
																					"nodeType": "YulBlock",
																					"src": "1955:165:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:15"
																												},
																												"nativeSrc": "1994:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:15"
																										},
																										"nativeSrc": "1988:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:15"
																								},
																								"nativeSrc": "1973:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:15"
																							},
																							"nativeSrc": "1973:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:15"
																						},
																						{
																							"nativeSrc": "2032:24:15",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:15",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:15"
																								},
																								"nativeSrc": "2042:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:15",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:15",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:15"
																								},
																								"nativeSrc": "2086:20:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:15"
																					},
																					"nativeSrc": "1906:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:15"
																				},
																				"nativeSrc": "1898:222:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:15",
																					"nodeType": "YulBlock",
																					"src": "1921:21:15",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:15",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:15",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:15"
																								},
																								"nativeSrc": "1928:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:15",
																					"nodeType": "YulBlock",
																					"src": "1902:3:15",
																					"statements": []
																				},
																				"src": "1898:222:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:15",
																					"nodeType": "YulBlock",
																					"src": "2168:166:15",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:15"
																										},
																										"nativeSrc": "2209:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:15"
																								},
																								"nativeSrc": "2203:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:15",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:15",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:15",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:15",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:15"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:15",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:15"
																																		},
																																		"nativeSrc": "2288:14:15",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:15"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:15",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:15",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:15"
																																},
																																"nativeSrc": "2284:24:15",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:15"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:15",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:15",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:15"
																																},
																																"nativeSrc": "2310:6:15",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:15"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:15",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:15"
																														},
																														"nativeSrc": "2280:37:15",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:15"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:15"
																												},
																												"nativeSrc": "2276:42:15",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:15"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:15"
																										},
																										"nativeSrc": "2261:58:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:15"
																								},
																								"nativeSrc": "2246:74:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:15"
																							},
																							"nativeSrc": "2246:74:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:15"
																					},
																					"nativeSrc": "2136:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:15"
																				},
																				"nativeSrc": "2133:201:15",
																				"nodeType": "YulIf",
																				"src": "2133:201:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:15",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:15",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:15"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:15"
																									},
																									"nativeSrc": "2364:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:15",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:15"
																							},
																							"nativeSrc": "2360:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:15"
																					},
																					"nativeSrc": "2347:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:15"
																				},
																				"nativeSrc": "2347:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:15"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:15",
																	"nodeType": "YulCase",
																	"src": "1744:649:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:15",
																		"nodeType": "YulBlock",
																		"src": "2410:234:15",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:15",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:15",
																					"nodeType": "YulBlock",
																					"src": "2473:67:15",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:15",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:15"
																										},
																										"nativeSrc": "2506:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:15"
																								},
																								"nativeSrc": "2500:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:15"
																				},
																				"nativeSrc": "2451:89:15",
																				"nodeType": "YulIf",
																				"src": "2451:89:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:15"
																							},
																							"nativeSrc": "2566:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:15"
																					},
																					"nativeSrc": "2553:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:15"
																				},
																				"nativeSrc": "2553:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:15"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:15",
																	"nodeType": "YulCase",
																	"src": "2402:242:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:15"
																},
																"nativeSrc": "1721:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:15"
															},
															"nativeSrc": "1714:930:15",
															"nodeType": "YulSwitch",
															"src": "1714:930:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:15",
														"nodeType": "YulTypedName",
														"src": "1432:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:15",
														"nodeType": "YulTypedName",
														"src": "1438:3:15",
														"type": ""
													}
												],
												"src": "1351:1299:15"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526000608090815260039061001890826100f3565b5034801561002557600080fd5b5060408051602081019091526000815261003e81610044565b506101b1565b600261005082826100f3565b5050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061007e57607f821691505b60208210810361009e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100ee57806000526020600020601f840160051c810160208510156100cb5750805b601f840160051c820191505b818110156100eb57600081556001016100d7565b50505b505050565b81516001600160401b0381111561010c5761010c610054565b6101208161011a845461006a565b846100a4565b6020601f821160018114610154576000831561013c5750848201515b600019600385901b1c1916600184901b1784556100eb565b600084815260208120601f198516915b828110156101845787850151825560209485019460019092019101610164565b50848210156101a25786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611568806101c06000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80632eb2c2d6116100715780632eb2c2d6146101345780634e1273f414610147578063a22cb46514610167578063d3fc98641461017a578063e985e9c51461018d578063f242432a146101a057600080fd5b8062fdd58e146100ad57806301ffc9a7146100d35780630e89341c146100f65780630febdd49146101165780631c75cfb41461012b575b600080fd5b6100c06100bb366004610cae565b6101b3565b6040519081526020015b60405180910390f35b6100e66100e1366004610cf1565b6101db565b60405190151581526020016100ca565b610109610104366004610d0e565b61022b565b6040516100ca9190610d77565b610129610124366004610d8a565b61030b565b005b6100c060055481565b610129610142366004610f20565b61032d565b61015a610155366004610fd6565b610399565b6040516100ca91906110db565b6101296101753660046110ee565b610466565b61012961018836600461112a565b610475565b6100e661019b366004611195565b6104b8565b6101296101ae3660046111c8565b6104e6565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061020c57506001600160e01b031982166303a24d0760e21b145b806101d557506301ffc9a760e01b6001600160e01b03198316146101d5565b60008181526004602052604081208054606092919061024990611221565b80601f016020809104026020016040519081016040528092919081815260200182805461027590611221565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905060008151116102e0576102db83610545565b610304565b6003816040516020016102f492919061125b565b6040516020818303038152906040525b9392505050565b61032784848484604051806020016040528060008152506104e6565b50505050565b336001600160a01b038616811480159061034e575061034c86826104b8565b155b156103845760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b61039186868686866105d9565b505050505050565b606081518351146103ca5781518351604051635b05999160e01b81526004810192909252602482015260440161037b565b6000835167ffffffffffffffff8111156103e6576103e6610dcc565b60405190808252806020026020018201604052801561040f578160200160208202803683370190505b50905060005b845181101561045e57602080820286010151610439906020808402870101516101b3565b82828151811061044b5761044b6112e1565b6020908102919091010152600101610415565b509392505050565b610471338383610640565b5050565b6104928360055484604051806020016040528060008152506106d6565b61049e60055482610733565b600580549060006104ae8361130d565b9190505550505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b0386168114801590610507575061050586826104b8565b155b156105385760405163711bec9160e11b81526001600160a01b0380831660048301528716602482015260440161037b565b6103918686868686610790565b60606002805461055490611221565b80601f016020809104026020016040519081016040528092919081815260200182805461058090611221565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b50505050509050919050565b6001600160a01b03841661060357604051632bfa23e760e11b81526000600482015260240161037b565b6001600160a01b03851661062c57604051626a0d4560e21b81526000600482015260240161037b565b610639858585858561081e565b5050505050565b6001600160a01b0382166106695760405162ced3e160e81b81526000600482015260240161037b565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661070057604051632bfa23e760e11b81526000600482015260240161037b565b6040805160018082526020820186905281830190815260608201859052608082019092529061039160008784848761081e565b600082815260046020526040902061074b8282611372565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b6107778461022b565b6040516107849190610d77565b60405180910390a25050565b6001600160a01b0384166107ba57604051632bfa23e760e11b81526000600482015260240161037b565b6001600160a01b0385166107e357604051626a0d4560e21b81526000600482015260240161037b565b60408051600180825260208201869052818301908152606082018590526080820190925290610815878784848761081e565b50505050505050565b61082a85858585610871565b6001600160a01b038416156106395782513390600103610863576020848101519084015161085c838989858589610a85565b5050610391565b610391818787878787610ba9565b80518251146108a05781518151604051635b05999160e01b81526004810192909252602482015260440161037b565b3360005b83518110156109a6576020818102858101820151908501909101516001600160a01b03881615610957576000828152602081815260408083206001600160a01b038c16845290915290205481811015610930576040516303dee4c560e01b81526001600160a01b038a16600482015260248101829052604481018390526064810184905260840161037b565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b0387161561099c576000828152602081815260408083206001600160a01b038b16845290915281208054839290610996908490611431565b90915550505b50506001016108a4565b508251600103610a275760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610a18929190918252602082015260400190565b60405180910390a45050610639565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610a76929190611444565b60405180910390a45050505050565b6001600160a01b0384163b156103915760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ac99089908990889088908890600401611472565b6020604051808303816000875af1925050508015610b04575060408051601f3d908101601f19168201909252610b01918101906114b7565b60015b610b6d573d808015610b32576040519150601f19603f3d011682016040523d82523d6000602084013e610b37565b606091505b508051600003610b6557604051632bfa23e760e11b81526001600160a01b038616600482015260240161037b565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b1461081557604051632bfa23e760e11b81526001600160a01b038616600482015260240161037b565b6001600160a01b0384163b156103915760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610bed90899089908890889088906004016114d4565b6020604051808303816000875af1925050508015610c28575060408051601f3d908101601f19168201909252610c25918101906114b7565b60015b610c56573d808015610b32576040519150601f19603f3d011682016040523d82523d6000602084013e610b37565b6001600160e01b0319811663bc197c8160e01b1461081557604051632bfa23e760e11b81526001600160a01b038616600482015260240161037b565b80356001600160a01b0381168114610ca957600080fd5b919050565b60008060408385031215610cc157600080fd5b610cca83610c92565b946020939093013593505050565b6001600160e01b031981168114610cee57600080fd5b50565b600060208284031215610d0357600080fd5b813561030481610cd8565b600060208284031215610d2057600080fd5b5035919050565b60005b83811015610d42578181015183820152602001610d2a565b50506000910152565b60008151808452610d63816020860160208601610d27565b601f01601f19169290920160200192915050565b6020815260006103046020830184610d4b565b60008060008060808587031215610da057600080fd5b610da985610c92565b9350610db760208601610c92565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e0b57610e0b610dcc565b604052919050565b600067ffffffffffffffff821115610e2d57610e2d610dcc565b5060051b60200190565b600082601f830112610e4857600080fd5b8135610e5b610e5682610e13565b610de2565b8082825260208201915060208360051b860101925085831115610e7d57600080fd5b602085015b83811015610e9a578035835260209283019201610e82565b5095945050505050565b60008067ffffffffffffffff841115610ebf57610ebf610dcc565b50601f8301601f1916602001610ed481610de2565b915050828152838383011115610ee957600080fd5b828260208301376000602084830101529392505050565b600082601f830112610f1157600080fd5b61030483833560208501610ea4565b600080600080600060a08688031215610f3857600080fd5b610f4186610c92565b9450610f4f60208701610c92565b9350604086013567ffffffffffffffff811115610f6b57600080fd5b610f7788828901610e37565b935050606086013567ffffffffffffffff811115610f9457600080fd5b610fa088828901610e37565b925050608086013567ffffffffffffffff811115610fbd57600080fd5b610fc988828901610f00565b9150509295509295909350565b60008060408385031215610fe957600080fd5b823567ffffffffffffffff81111561100057600080fd5b8301601f8101851361101157600080fd5b803561101f610e5682610e13565b8082825260208201915060208360051b85010192508783111561104157600080fd5b6020840193505b8284101561106a5761105984610c92565b825260209384019390910190611048565b9450505050602083013567ffffffffffffffff81111561108957600080fd5b61109585828601610e37565b9150509250929050565b600081518084526020840193506020830160005b828110156110d15781518652602095860195909101906001016110b3565b5093949350505050565b602081526000610304602083018461109f565b6000806040838503121561110157600080fd5b61110a83610c92565b91506020830135801515811461111f57600080fd5b809150509250929050565b60008060006060848603121561113f57600080fd5b61114884610c92565b925060208401359150604084013567ffffffffffffffff81111561116b57600080fd5b8401601f8101861361117c57600080fd5b61118b86823560208401610ea4565b9150509250925092565b600080604083850312156111a857600080fd5b6111b183610c92565b91506111bf60208401610c92565b90509250929050565b600080600080600060a086880312156111e057600080fd5b6111e986610c92565b94506111f760208701610c92565b93506040860135925060608601359150608086013567ffffffffffffffff811115610fbd57600080fd5b600181811c9082168061123557607f821691505b60208210810361125557634e487b7160e01b600052602260045260246000fd5b50919050565b600080845461126981611221565b6001821680156112805760018114611295576112c5565b60ff19831686528115158202860193506112c5565b87600052602060002060005b838110156112bd578154888201526001909101906020016112a1565b505081860193505b50505083516112d8818360208801610d27565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161131f5761131f6112f7565b5060010190565b601f82111561136d57806000526020600020601f840160051c8101602085101561134d5750805b601f840160051c820191505b818110156106395760008155600101611359565b505050565b815167ffffffffffffffff81111561138c5761138c610dcc565b6113a08161139a8454611221565b84611326565b6020601f8211600181146113d457600083156113bc5750848201515b600019600385901b1c1916600184901b178455610639565b600084815260208120601f198516915b8281101561140457878501518255602094850194600190920191016113e4565b50848210156114225786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156101d5576101d56112f7565b604081526000611457604083018561109f565b8281036020840152611469818561109f565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906114ac90830184610d4b565b979650505050505050565b6000602082840312156114c957600080fd5b815161030481610cd8565b6001600160a01b0386811682528516602082015260a0604082018190526000906115009083018661109f565b8281036060840152611512818661109f565b905082810360808401526115268185610d4b565b9897505050505050505056fea264697066735822122052fdafcd2ee8d69b5154f76ad2b24e5306494a4397c10692db7c0eb57ef6069b64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 PUSH2 0x18 SWAP1 DUP3 PUSH2 0xF3 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x3E DUP2 PUSH2 0x44 JUMP JUMPDEST POP PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x50 DUP3 DUP3 PUSH2 0xF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xEE JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xCB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x10C JUMPI PUSH2 0x10C PUSH2 0x54 JUMP JUMPDEST PUSH2 0x120 DUP2 PUSH2 0x11A DUP5 SLOAD PUSH2 0x6A JUMP JUMPDEST DUP5 PUSH2 0xA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x154 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x13C JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xEB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x184 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x164 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1A2 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1568 DUP1 PUSH2 0x1C0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xD3FC9864 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xFEBDD49 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x1C75CFB4 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x129 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x112A JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x20C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x1D5 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x249 SWAP1 PUSH2 0x1221 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x275 SWAP1 PUSH2 0x1221 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x297 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2E0 JUMPI PUSH2 0x2DB DUP4 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x304 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F4 SWAP3 SWAP2 SWAP1 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x327 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4E6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x34E JUMPI POP PUSH2 0x34C DUP7 DUP3 PUSH2 0x4B8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x391 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x5D9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3CA JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E6 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x45E JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x439 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x1B3 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x44B JUMPI PUSH2 0x44B PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x415 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x471 CALLER DUP4 DUP4 PUSH2 0x640 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x492 DUP4 PUSH1 0x5 SLOAD DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x49E PUSH1 0x5 SLOAD DUP3 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x4AE DUP4 PUSH2 0x130D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x507 JUMPI POP PUSH2 0x505 DUP7 DUP3 PUSH2 0x4B8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x37B JUMP JUMPDEST PUSH2 0x391 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x554 SWAP1 PUSH2 0x1221 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x580 SWAP1 PUSH2 0x1221 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH2 0x639 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x391 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x74B DUP3 DUP3 PUSH2 0x1372 JUMP JUMPDEST POP DUP2 PUSH32 0x6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B PUSH2 0x777 DUP5 PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x815 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x81E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x82A DUP6 DUP6 DUP6 DUP6 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x639 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x863 JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x85C DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xA85 JUMP JUMPDEST POP POP PUSH2 0x391 JUMP JUMPDEST PUSH2 0x391 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xBA9 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x8A0 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x37B JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x957 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x996 SWAP1 DUP5 SWAP1 PUSH2 0x1431 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x8A4 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0xA27 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA18 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x639 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA76 SWAP3 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAC9 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1472 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB04 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB01 SWAP2 DUP2 ADD SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB32 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xBED SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC28 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC25 SWAP2 DUP2 ADD SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC56 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB32 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCA DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x304 DUP2 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD42 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD2A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD63 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x304 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA9 DUP6 PUSH2 0xC92 JUMP JUMPDEST SWAP4 POP PUSH2 0xDB7 PUSH1 0x20 DUP7 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE0B JUMPI PUSH2 0xE0B PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE2D JUMPI PUSH2 0xE2D PUSH2 0xDCC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE5B PUSH2 0xE56 DUP3 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE9A JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xE82 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBF PUSH2 0xDCC JUMP JUMPDEST POP PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xED4 DUP2 PUSH2 0xDE2 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0xEE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x304 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF41 DUP7 PUSH2 0xC92 JUMP JUMPDEST SWAP5 POP PUSH2 0xF4F PUSH1 0x20 DUP8 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF77 DUP9 DUP3 DUP10 ADD PUSH2 0xE37 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA0 DUP9 DUP3 DUP10 ADD PUSH2 0xE37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC9 DUP9 DUP3 DUP10 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1011 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x101F PUSH2 0xE56 DUP3 PUSH2 0xE13 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 DUP4 GT ISZERO PUSH2 0x1041 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x106A JUMPI PUSH2 0x1059 DUP5 PUSH2 0xC92 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1048 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1089 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1095 DUP6 DUP3 DUP7 ADD PUSH2 0xE37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x10D1 JUMPI DUP2 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10B3 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x304 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x110A DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x111F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x113F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1148 DUP5 PUSH2 0xC92 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x116B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x117C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118B DUP7 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B1 DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH2 0x11BF PUSH1 0x20 DUP5 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E9 DUP7 PUSH2 0xC92 JUMP JUMPDEST SWAP5 POP PUSH2 0x11F7 PUSH1 0x20 DUP8 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1235 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1255 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x1269 DUP2 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 DUP3 AND DUP1 ISZERO PUSH2 0x1280 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1295 JUMPI PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x12C5 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12BD JUMPI DUP2 SLOAD DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x12A1 JUMP JUMPDEST POP POP DUP2 DUP7 ADD SWAP4 POP JUMPDEST POP POP POP DUP4 MLOAD PUSH2 0x12D8 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD27 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x131F JUMPI PUSH2 0x131F PUSH2 0x12F7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x136D JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x134D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1359 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x138C JUMPI PUSH2 0x138C PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x13A0 DUP2 PUSH2 0x139A DUP5 SLOAD PUSH2 0x1221 JUMP JUMPDEST DUP5 PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x13BC JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1404 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x13E4 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1422 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1D5 JUMPI PUSH2 0x1D5 PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1457 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x109F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1469 DUP2 DUP6 PUSH2 0x109F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14AC SWAP1 DUP4 ADD DUP5 PUSH2 0xD4B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x304 DUP2 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1500 SWAP1 DUP4 ADD DUP7 PUSH2 0x109F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1512 DUP2 DUP7 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1526 DUP2 DUP6 PUSH2 0xD4B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE REVERT 0xAF 0xCD 0x2E 0xE8 0xD6 SWAP12 MLOAD SLOAD 0xF7 PUSH11 0xD2B24E5306494A4397C106 SWAP3 0xDB PUSH29 0xEB57EF6069B64736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "476:28:4:-:0;249:475:14;476:28:4;-1:-1:-1;249:475:14;476:28:4;;;;;;;;;:::i;:::-;;293:27:14;;;;;;;;;-1:-1:-1;1251:62:1;;;;;;;;;-1:-1:-1;1251:62:1;;1293:13;1251:62;1293:7;:13::i;:::-;1251:62;249:475:14;;10282:86:1;10348:4;:13;10355:6;10348:4;:13;:::i;:::-;;10282:86;:::o;14:127:15:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:15;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:15;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:15;;;2500:26;2451:89;-1:-1:-1;;1308:1:15;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:15;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:15;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:15;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:15:o;:::-;249:475:14;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1186": {
									"entryPoint": null,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_doSafeBatchTransferAcceptanceCheck_1170": {
									"entryPoint": 2985,
									"id": 1170,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1100": {
									"entryPoint": 2693,
									"id": 1100,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_862": {
									"entryPoint": 1750,
									"id": 862,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1651": {
									"entryPoint": null,
									"id": 1651,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_799": {
									"entryPoint": 1497,
									"id": 799,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_744": {
									"entryPoint": 1936,
									"id": 744,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1032": {
									"entryPoint": 1600,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_1428": {
									"entryPoint": 1843,
									"id": 1428,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_678": {
									"entryPoint": 2078,
									"id": 678,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_602": {
									"entryPoint": 2161,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_326": {
									"entryPoint": 921,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_256": {
									"entryPoint": 435,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@currentID_3244": {
									"entryPoint": null,
									"id": 3244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_359": {
									"entryPoint": 1208,
									"id": 359,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_3269": {
									"entryPoint": 1141,
									"id": 3269,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_449": {
									"entryPoint": 813,
									"id": 449,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_3291": {
									"entryPoint": 779,
									"id": 3291,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_403": {
									"entryPoint": 1254,
									"id": 403,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_342": {
									"entryPoint": 1126,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2057": {
									"entryPoint": null,
									"id": 2057,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_228": {
									"entryPoint": 475,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1625": {
									"entryPoint": null,
									"id": 1625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1638": {
									"entryPoint": null,
									"id": 1638,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_1406": {
									"entryPoint": 555,
									"id": 1406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_239": {
									"entryPoint": 1349,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 3748,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256": {
									"entryPoint": 3466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4699,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5234,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 4902,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 4978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4855,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16843:15",
										"nodeType": "YulBlock",
										"src": "0:16843:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:15",
													"nodeType": "YulBlock",
													"src": "63:124:15",
													"statements": [
														{
															"nativeSrc": "73:29:15",
															"nodeType": "YulAssignment",
															"src": "73:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:15"
																},
																"nativeSrc": "82:20:15",
																"nodeType": "YulFunctionCall",
																"src": "82:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:15",
																"nodeType": "YulBlock",
																"src": "165:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:15",
																					"nodeType": "YulLiteral",
																					"src": "174:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:15",
																					"nodeType": "YulLiteral",
																					"src": "177:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:15"
																			},
																			"nativeSrc": "167:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:15"
																		},
																		"nativeSrc": "167:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:15",
																										"nodeType": "YulLiteral",
																										"src": "150:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:15",
																										"nodeType": "YulLiteral",
																										"src": "155:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:15"
																								},
																								"nativeSrc": "146:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:15",
																								"nodeType": "YulLiteral",
																								"src": "159:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:15"
																						},
																						"nativeSrc": "142:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:15"
																				},
																				"nativeSrc": "131:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:15"
																		},
																		"nativeSrc": "121:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:15"
																},
																"nativeSrc": "114:50:15",
																"nodeType": "YulFunctionCall",
																"src": "114:50:15"
															},
															"nativeSrc": "111:70:15",
															"nodeType": "YulIf",
															"src": "111:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:15",
														"nodeType": "YulTypedName",
														"src": "42:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:15",
														"nodeType": "YulTypedName",
														"src": "53:5:15",
														"type": ""
													}
												],
												"src": "14:173:15"
											},
											{
												"body": {
													"nativeSrc": "279:213:15",
													"nodeType": "YulBlock",
													"src": "279:213:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:15",
																"nodeType": "YulBlock",
																"src": "325:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:15",
																					"nodeType": "YulLiteral",
																					"src": "334:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:15",
																					"nodeType": "YulLiteral",
																					"src": "337:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:15"
																			},
																			"nativeSrc": "327:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:15"
																		},
																		"nativeSrc": "327:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:15"
																		},
																		"nativeSrc": "296:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:15",
																		"nodeType": "YulLiteral",
																		"src": "321:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:15"
																},
																"nativeSrc": "292:32:15",
																"nodeType": "YulFunctionCall",
																"src": "292:32:15"
															},
															"nativeSrc": "289:52:15",
															"nodeType": "YulIf",
															"src": "289:52:15"
														},
														{
															"nativeSrc": "350:39:15",
															"nodeType": "YulAssignment",
															"src": "350:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "379:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "360:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:15"
																},
																"nativeSrc": "360:29:15",
																"nodeType": "YulFunctionCall",
																"src": "360:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "350:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:15"
																}
															]
														},
														{
															"nativeSrc": "398:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "398:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "411:1:15",
																"nodeType": "YulLiteral",
																"src": "411:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "402:5:15",
																	"nodeType": "YulTypedName",
																	"src": "402:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "421:41:15",
															"nodeType": "YulAssignment",
															"src": "421:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "447:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "447:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "458:2:15",
																				"nodeType": "YulLiteral",
																				"src": "458:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "443:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "443:3:15"
																		},
																		"nativeSrc": "443:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "443:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "430:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "430:12:15"
																},
																"nativeSrc": "430:32:15",
																"nodeType": "YulFunctionCall",
																"src": "430:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "421:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "421:5:15"
																}
															]
														},
														{
															"nativeSrc": "471:15:15",
															"nodeType": "YulAssignment",
															"src": "471:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "481:5:15",
																"nodeType": "YulIdentifier",
																"src": "481:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "471:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "192:300:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:15",
														"nodeType": "YulTypedName",
														"src": "237:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:15",
														"nodeType": "YulTypedName",
														"src": "248:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:15",
														"nodeType": "YulTypedName",
														"src": "260:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:15",
														"nodeType": "YulTypedName",
														"src": "268:6:15",
														"type": ""
													}
												],
												"src": "192:300:15"
											},
											{
												"body": {
													"nativeSrc": "598:76:15",
													"nodeType": "YulBlock",
													"src": "598:76:15",
													"statements": [
														{
															"nativeSrc": "608:26:15",
															"nodeType": "YulAssignment",
															"src": "608:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "620:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "631:2:15",
																		"nodeType": "YulLiteral",
																		"src": "631:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "616:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:15"
																},
																"nativeSrc": "616:18:15",
																"nodeType": "YulFunctionCall",
																"src": "616:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "608:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "650:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "661:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "661:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "643:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:15"
																},
																"nativeSrc": "643:25:15",
																"nodeType": "YulFunctionCall",
																"src": "643:25:15"
															},
															"nativeSrc": "643:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "643:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "497:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "567:9:15",
														"nodeType": "YulTypedName",
														"src": "567:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "578:6:15",
														"nodeType": "YulTypedName",
														"src": "578:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "589:4:15",
														"nodeType": "YulTypedName",
														"src": "589:4:15",
														"type": ""
													}
												],
												"src": "497:177:15"
											},
											{
												"body": {
													"nativeSrc": "723:87:15",
													"nodeType": "YulBlock",
													"src": "723:87:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "788:16:15",
																"nodeType": "YulBlock",
																"src": "788:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:15",
																					"nodeType": "YulLiteral",
																					"src": "797:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:1:15",
																					"nodeType": "YulLiteral",
																					"src": "800:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:15"
																			},
																			"nativeSrc": "790:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "790:12:15"
																		},
																		"nativeSrc": "790:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "746:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "746:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "757:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "757:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "768:3:15",
																								"nodeType": "YulLiteral",
																								"src": "768:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "773:10:15",
																								"nodeType": "YulLiteral",
																								"src": "773:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "764:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "764:3:15"
																						},
																						"nativeSrc": "764:20:15",
																						"nodeType": "YulFunctionCall",
																						"src": "764:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "753:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "753:3:15"
																				},
																				"nativeSrc": "753:32:15",
																				"nodeType": "YulFunctionCall",
																				"src": "753:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "743:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "743:2:15"
																		},
																		"nativeSrc": "743:43:15",
																		"nodeType": "YulFunctionCall",
																		"src": "743:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "736:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:15"
																},
																"nativeSrc": "736:51:15",
																"nodeType": "YulFunctionCall",
																"src": "736:51:15"
															},
															"nativeSrc": "733:71:15",
															"nodeType": "YulIf",
															"src": "733:71:15"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "679:131:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "712:5:15",
														"nodeType": "YulTypedName",
														"src": "712:5:15",
														"type": ""
													}
												],
												"src": "679:131:15"
											},
											{
												"body": {
													"nativeSrc": "884:176:15",
													"nodeType": "YulBlock",
													"src": "884:176:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "930:16:15",
																"nodeType": "YulBlock",
																"src": "930:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "939:1:15",
																					"nodeType": "YulLiteral",
																					"src": "939:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "942:1:15",
																					"nodeType": "YulLiteral",
																					"src": "942:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "932:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "932:6:15"
																			},
																			"nativeSrc": "932:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "932:12:15"
																		},
																		"nativeSrc": "932:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "932:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "905:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "905:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "914:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "914:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "901:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:15"
																		},
																		"nativeSrc": "901:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "901:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "926:2:15",
																		"nodeType": "YulLiteral",
																		"src": "926:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "897:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "897:3:15"
																},
																"nativeSrc": "897:32:15",
																"nodeType": "YulFunctionCall",
																"src": "897:32:15"
															},
															"nativeSrc": "894:52:15",
															"nodeType": "YulIf",
															"src": "894:52:15"
														},
														{
															"nativeSrc": "955:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "955:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "981:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:15"
																},
																"nativeSrc": "968:23:15",
																"nodeType": "YulFunctionCall",
																"src": "968:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:15",
																	"nodeType": "YulTypedName",
																	"src": "959:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "1000:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "1000:23:15"
																},
																"nativeSrc": "1000:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1000:30:15"
															},
															"nativeSrc": "1000:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "1000:30:15"
														},
														{
															"nativeSrc": "1039:15:15",
															"nodeType": "YulAssignment",
															"src": "1039:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "1049:5:15",
																"nodeType": "YulIdentifier",
																"src": "1049:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1039:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1039:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "815:245:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "850:9:15",
														"nodeType": "YulTypedName",
														"src": "850:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "861:7:15",
														"nodeType": "YulTypedName",
														"src": "861:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "873:6:15",
														"nodeType": "YulTypedName",
														"src": "873:6:15",
														"type": ""
													}
												],
												"src": "815:245:15"
											},
											{
												"body": {
													"nativeSrc": "1160:92:15",
													"nodeType": "YulBlock",
													"src": "1160:92:15",
													"statements": [
														{
															"nativeSrc": "1170:26:15",
															"nodeType": "YulAssignment",
															"src": "1170:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1182:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1182:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1193:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1193:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1178:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1178:3:15"
																},
																"nativeSrc": "1178:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1178:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1170:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1170:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1212:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1237:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1237:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1230:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "1230:6:15"
																				},
																				"nativeSrc": "1230:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1230:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1223:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1223:6:15"
																		},
																		"nativeSrc": "1223:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1223:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1205:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1205:6:15"
																},
																"nativeSrc": "1205:41:15",
																"nodeType": "YulFunctionCall",
																"src": "1205:41:15"
															},
															"nativeSrc": "1205:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "1205:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1065:187:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1129:9:15",
														"nodeType": "YulTypedName",
														"src": "1129:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1140:6:15",
														"nodeType": "YulTypedName",
														"src": "1140:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1151:4:15",
														"nodeType": "YulTypedName",
														"src": "1151:4:15",
														"type": ""
													}
												],
												"src": "1065:187:15"
											},
											{
												"body": {
													"nativeSrc": "1327:156:15",
													"nodeType": "YulBlock",
													"src": "1327:156:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1373:16:15",
																"nodeType": "YulBlock",
																"src": "1373:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1382:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1382:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1375:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1375:6:15"
																			},
																			"nativeSrc": "1375:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1375:12:15"
																		},
																		"nativeSrc": "1375:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1375:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1348:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1348:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1357:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1357:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1344:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1344:3:15"
																		},
																		"nativeSrc": "1344:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1344:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1369:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1369:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1340:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:15"
																},
																"nativeSrc": "1340:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1340:32:15"
															},
															"nativeSrc": "1337:52:15",
															"nodeType": "YulIf",
															"src": "1337:52:15"
														},
														{
															"nativeSrc": "1398:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1398:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1411:1:15",
																"nodeType": "YulLiteral",
																"src": "1411:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1402:5:15",
																	"nodeType": "YulTypedName",
																	"src": "1402:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1421:32:15",
															"nodeType": "YulAssignment",
															"src": "1421:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1443:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1430:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1430:12:15"
																},
																"nativeSrc": "1430:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1430:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1421:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1421:5:15"
																}
															]
														},
														{
															"nativeSrc": "1462:15:15",
															"nodeType": "YulAssignment",
															"src": "1462:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "1472:5:15",
																"nodeType": "YulIdentifier",
																"src": "1472:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1462:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1462:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1257:226:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1293:9:15",
														"nodeType": "YulTypedName",
														"src": "1293:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1304:7:15",
														"nodeType": "YulTypedName",
														"src": "1304:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1316:6:15",
														"nodeType": "YulTypedName",
														"src": "1316:6:15",
														"type": ""
													}
												],
												"src": "1257:226:15"
											},
											{
												"body": {
													"nativeSrc": "1554:184:15",
													"nodeType": "YulBlock",
													"src": "1554:184:15",
													"statements": [
														{
															"nativeSrc": "1564:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1564:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1573:1:15",
																"nodeType": "YulLiteral",
																"src": "1573:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1568:1:15",
																	"nodeType": "YulTypedName",
																	"src": "1568:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1633:63:15",
																"nodeType": "YulBlock",
																"src": "1633:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1658:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1658:3:15"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1663:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "1663:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1654:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1654:3:15"
																					},
																					"nativeSrc": "1654:11:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1654:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1677:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1677:3:15"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1682:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "1682:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1673:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1673:3:15"
																							},
																							"nativeSrc": "1673:11:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1673:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1667:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1667:5:15"
																					},
																					"nativeSrc": "1667:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1667:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1647:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1647:6:15"
																			},
																			"nativeSrc": "1647:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1647:39:15"
																		},
																		"nativeSrc": "1647:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1647:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1594:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "1594:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1597:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1597:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1591:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1591:2:15"
																},
																"nativeSrc": "1591:13:15",
																"nodeType": "YulFunctionCall",
																"src": "1591:13:15"
															},
															"nativeSrc": "1583:113:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1605:19:15",
																"nodeType": "YulBlock",
																"src": "1605:19:15",
																"statements": [
																	{
																		"nativeSrc": "1607:15:15",
																		"nodeType": "YulAssignment",
																		"src": "1607:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1616:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "1616:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1619:2:15",
																					"nodeType": "YulLiteral",
																					"src": "1619:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1612:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1612:3:15"
																			},
																			"nativeSrc": "1612:10:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1612:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1607:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "1607:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1587:3:15",
																"nodeType": "YulBlock",
																"src": "1587:3:15",
																"statements": []
															},
															"src": "1583:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1716:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1716:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1721:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1721:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1712:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1712:3:15"
																		},
																		"nativeSrc": "1712:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1712:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1730:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1730:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1705:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1705:6:15"
																},
																"nativeSrc": "1705:27:15",
																"nodeType": "YulFunctionCall",
																"src": "1705:27:15"
															},
															"nativeSrc": "1705:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "1705:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1488:250:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1532:3:15",
														"nodeType": "YulTypedName",
														"src": "1532:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1537:3:15",
														"nodeType": "YulTypedName",
														"src": "1537:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1542:6:15",
														"nodeType": "YulTypedName",
														"src": "1542:6:15",
														"type": ""
													}
												],
												"src": "1488:250:15"
											},
											{
												"body": {
													"nativeSrc": "1793:221:15",
													"nodeType": "YulBlock",
													"src": "1793:221:15",
													"statements": [
														{
															"nativeSrc": "1803:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1803:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1823:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1823:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1817:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1817:5:15"
																},
																"nativeSrc": "1817:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1817:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1807:6:15",
																	"nodeType": "YulTypedName",
																	"src": "1807:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1845:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1845:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1850:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1850:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1838:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:15"
																},
																"nativeSrc": "1838:19:15",
																"nodeType": "YulFunctionCall",
																"src": "1838:19:15"
															},
															"nativeSrc": "1838:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "1838:19:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1905:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1905:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1912:4:15",
																				"nodeType": "YulLiteral",
																				"src": "1912:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1901:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1901:3:15"
																		},
																		"nativeSrc": "1901:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1901:16:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1923:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1923:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1928:4:15",
																				"nodeType": "YulLiteral",
																				"src": "1928:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1919:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1919:3:15"
																		},
																		"nativeSrc": "1919:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1919:14:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1935:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1935:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1866:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "1866:34:15"
																},
																"nativeSrc": "1866:76:15",
																"nodeType": "YulFunctionCall",
																"src": "1866:76:15"
															},
															"nativeSrc": "1866:76:15",
															"nodeType": "YulExpressionStatement",
															"src": "1866:76:15"
														},
														{
															"nativeSrc": "1951:57:15",
															"nodeType": "YulAssignment",
															"src": "1951:57:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1966:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1966:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1979:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "1979:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1987:2:15",
																								"nodeType": "YulLiteral",
																								"src": "1987:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1975:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1975:3:15"
																						},
																						"nativeSrc": "1975:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1975:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1996:2:15",
																								"nodeType": "YulLiteral",
																								"src": "1996:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1992:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:15"
																						},
																						"nativeSrc": "1992:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1992:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1971:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1971:3:15"
																				},
																				"nativeSrc": "1971:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1971:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1962:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:15"
																		},
																		"nativeSrc": "1962:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1962:39:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2003:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2003:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1958:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1958:3:15"
																},
																"nativeSrc": "1958:50:15",
																"nodeType": "YulFunctionCall",
																"src": "1958:50:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1951:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1951:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "1743:271:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1770:5:15",
														"nodeType": "YulTypedName",
														"src": "1770:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1777:3:15",
														"nodeType": "YulTypedName",
														"src": "1777:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1785:3:15",
														"nodeType": "YulTypedName",
														"src": "1785:3:15",
														"type": ""
													}
												],
												"src": "1743:271:15"
											},
											{
												"body": {
													"nativeSrc": "2140:99:15",
													"nodeType": "YulBlock",
													"src": "2140:99:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2157:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2157:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2168:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2168:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2150:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2150:6:15"
																},
																"nativeSrc": "2150:21:15",
																"nodeType": "YulFunctionCall",
																"src": "2150:21:15"
															},
															"nativeSrc": "2150:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "2150:21:15"
														},
														{
															"nativeSrc": "2180:53:15",
															"nodeType": "YulAssignment",
															"src": "2180:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2206:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2206:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2218:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2218:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2229:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2229:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2214:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2214:3:15"
																		},
																		"nativeSrc": "2214:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2214:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "2188:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "2188:17:15"
																},
																"nativeSrc": "2188:45:15",
																"nodeType": "YulFunctionCall",
																"src": "2188:45:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2180:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2180:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2019:220:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2109:9:15",
														"nodeType": "YulTypedName",
														"src": "2109:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2120:6:15",
														"nodeType": "YulTypedName",
														"src": "2120:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2131:4:15",
														"nodeType": "YulTypedName",
														"src": "2131:4:15",
														"type": ""
													}
												],
												"src": "2019:220:15"
											},
											{
												"body": {
													"nativeSrc": "2365:374:15",
													"nodeType": "YulBlock",
													"src": "2365:374:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2412:16:15",
																"nodeType": "YulBlock",
																"src": "2412:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2421:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2424:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2424:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2414:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:15"
																			},
																			"nativeSrc": "2414:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2414:12:15"
																		},
																		"nativeSrc": "2414:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2414:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2386:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2386:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2395:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2395:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2382:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2382:3:15"
																		},
																		"nativeSrc": "2382:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2382:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2407:3:15",
																		"nodeType": "YulLiteral",
																		"src": "2407:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2378:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2378:3:15"
																},
																"nativeSrc": "2378:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2378:33:15"
															},
															"nativeSrc": "2375:53:15",
															"nodeType": "YulIf",
															"src": "2375:53:15"
														},
														{
															"nativeSrc": "2437:39:15",
															"nodeType": "YulAssignment",
															"src": "2437:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2466:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2466:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2447:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2447:18:15"
																},
																"nativeSrc": "2447:29:15",
																"nodeType": "YulFunctionCall",
																"src": "2447:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2437:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2437:6:15"
																}
															]
														},
														{
															"nativeSrc": "2485:48:15",
															"nodeType": "YulAssignment",
															"src": "2485:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2518:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2518:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2529:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2529:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2514:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2514:3:15"
																		},
																		"nativeSrc": "2514:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2514:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2495:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2495:18:15"
																},
																"nativeSrc": "2495:38:15",
																"nodeType": "YulFunctionCall",
																"src": "2495:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2485:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2485:6:15"
																}
															]
														},
														{
															"nativeSrc": "2542:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2542:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2555:1:15",
																"nodeType": "YulLiteral",
																"src": "2555:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2546:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2546:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2565:41:15",
															"nodeType": "YulAssignment",
															"src": "2565:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2591:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2591:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2602:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2602:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2587:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2587:3:15"
																		},
																		"nativeSrc": "2587:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2587:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2574:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2574:12:15"
																},
																"nativeSrc": "2574:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2574:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2565:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2565:5:15"
																}
															]
														},
														{
															"nativeSrc": "2615:15:15",
															"nodeType": "YulAssignment",
															"src": "2615:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "2625:5:15",
																"nodeType": "YulIdentifier",
																"src": "2625:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2615:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:15"
																}
															]
														},
														{
															"nativeSrc": "2639:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2639:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2654:1:15",
																"nodeType": "YulLiteral",
																"src": "2654:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2643:7:15",
																	"nodeType": "YulTypedName",
																	"src": "2643:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2664:43:15",
															"nodeType": "YulAssignment",
															"src": "2664:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2692:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2692:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2703:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2703:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2688:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2688:3:15"
																		},
																		"nativeSrc": "2688:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2688:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2675:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2675:12:15"
																},
																"nativeSrc": "2675:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2675:32:15"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2664:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2664:7:15"
																}
															]
														},
														{
															"nativeSrc": "2716:17:15",
															"nodeType": "YulAssignment",
															"src": "2716:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "2726:7:15",
																"nodeType": "YulIdentifier",
																"src": "2726:7:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2716:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
												"nativeSrc": "2244:495:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2307:9:15",
														"nodeType": "YulTypedName",
														"src": "2307:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2318:7:15",
														"nodeType": "YulTypedName",
														"src": "2318:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2330:6:15",
														"nodeType": "YulTypedName",
														"src": "2330:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2338:6:15",
														"nodeType": "YulTypedName",
														"src": "2338:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2346:6:15",
														"nodeType": "YulTypedName",
														"src": "2346:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2354:6:15",
														"nodeType": "YulTypedName",
														"src": "2354:6:15",
														"type": ""
													}
												],
												"src": "2244:495:15"
											},
											{
												"body": {
													"nativeSrc": "2776:95:15",
													"nodeType": "YulBlock",
													"src": "2776:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2793:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2793:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2800:3:15",
																				"nodeType": "YulLiteral",
																				"src": "2800:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2805:10:15",
																				"nodeType": "YulLiteral",
																				"src": "2805:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2796:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2796:3:15"
																		},
																		"nativeSrc": "2796:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2796:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2786:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2786:6:15"
																},
																"nativeSrc": "2786:31:15",
																"nodeType": "YulFunctionCall",
																"src": "2786:31:15"
															},
															"nativeSrc": "2786:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "2786:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2833:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2833:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2836:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2836:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2826:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2826:6:15"
																},
																"nativeSrc": "2826:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2826:15:15"
															},
															"nativeSrc": "2826:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2826:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2857:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2857:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2860:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2860:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2850:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2850:6:15"
																},
																"nativeSrc": "2850:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2850:15:15"
															},
															"nativeSrc": "2850:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "2850:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2744:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "2744:127:15"
											},
											{
												"body": {
													"nativeSrc": "2921:230:15",
													"nodeType": "YulBlock",
													"src": "2921:230:15",
													"statements": [
														{
															"nativeSrc": "2931:19:15",
															"nodeType": "YulAssignment",
															"src": "2931:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2947:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2947:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2941:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2941:5:15"
																},
																"nativeSrc": "2941:9:15",
																"nodeType": "YulFunctionCall",
																"src": "2941:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2931:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:15"
																}
															]
														},
														{
															"nativeSrc": "2959:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2959:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2981:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2981:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "2997:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "2997:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3003:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3003:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2993:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2993:3:15"
																				},
																				"nativeSrc": "2993:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2993:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3012:2:15",
																						"nodeType": "YulLiteral",
																						"src": "3012:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3008:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:15"
																				},
																				"nativeSrc": "3008:7:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:7:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2989:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2989:3:15"
																		},
																		"nativeSrc": "2989:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2989:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2977:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2977:3:15"
																},
																"nativeSrc": "2977:40:15",
																"nodeType": "YulFunctionCall",
																"src": "2977:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2963:10:15",
																	"nodeType": "YulTypedName",
																	"src": "2963:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3092:22:15",
																"nodeType": "YulBlock",
																"src": "3092:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3094:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "3094:16:15"
																			},
																			"nativeSrc": "3094:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3094:18:15"
																		},
																		"nativeSrc": "3094:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3094:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3035:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3035:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3047:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3047:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3032:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3032:2:15"
																		},
																		"nativeSrc": "3032:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3071:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "3071:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3083:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3083:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3068:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3068:2:15"
																		},
																		"nativeSrc": "3068:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3068:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3029:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3029:2:15"
																},
																"nativeSrc": "3029:62:15",
																"nodeType": "YulFunctionCall",
																"src": "3029:62:15"
															},
															"nativeSrc": "3026:88:15",
															"nodeType": "YulIf",
															"src": "3026:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3130:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3130:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3134:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "3134:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3123:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3123:6:15"
																},
																"nativeSrc": "3123:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3123:22:15"
															},
															"nativeSrc": "3123:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "3123:22:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2876:275:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2901:4:15",
														"nodeType": "YulTypedName",
														"src": "2901:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2910:6:15",
														"nodeType": "YulTypedName",
														"src": "2910:6:15",
														"type": ""
													}
												],
												"src": "2876:275:15"
											},
											{
												"body": {
													"nativeSrc": "3225:114:15",
													"nodeType": "YulBlock",
													"src": "3225:114:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3269:22:15",
																"nodeType": "YulBlock",
																"src": "3269:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3271:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "3271:16:15"
																			},
																			"nativeSrc": "3271:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3271:18:15"
																		},
																		"nativeSrc": "3271:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3271:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3241:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3241:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3249:18:15",
																		"nodeType": "YulLiteral",
																		"src": "3249:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3238:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3238:2:15"
																},
																"nativeSrc": "3238:30:15",
																"nodeType": "YulFunctionCall",
																"src": "3238:30:15"
															},
															"nativeSrc": "3235:56:15",
															"nodeType": "YulIf",
															"src": "3235:56:15"
														},
														{
															"nativeSrc": "3300:33:15",
															"nodeType": "YulAssignment",
															"src": "3300:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3316:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3316:1:15",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3319:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3319:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3312:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:15"
																		},
																		"nativeSrc": "3312:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3328:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3308:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3308:3:15"
																},
																"nativeSrc": "3308:25:15",
																"nodeType": "YulFunctionCall",
																"src": "3308:25:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3300:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3300:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nativeSrc": "3156:183:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3205:6:15",
														"nodeType": "YulTypedName",
														"src": "3205:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3216:4:15",
														"nodeType": "YulTypedName",
														"src": "3216:4:15",
														"type": ""
													}
												],
												"src": "3156:183:15"
											},
											{
												"body": {
													"nativeSrc": "3408:659:15",
													"nodeType": "YulBlock",
													"src": "3408:659:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3457:16:15",
																"nodeType": "YulBlock",
																"src": "3457:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3466:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3466:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3469:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3469:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3459:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3459:6:15"
																			},
																			"nativeSrc": "3459:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3459:12:15"
																		},
																		"nativeSrc": "3459:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3459:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3436:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3436:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3444:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3444:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3432:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3432:3:15"
																				},
																				"nativeSrc": "3432:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3432:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3451:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3451:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3428:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3428:3:15"
																		},
																		"nativeSrc": "3428:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3428:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3421:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3421:6:15"
																},
																"nativeSrc": "3421:35:15",
																"nodeType": "YulFunctionCall",
																"src": "3421:35:15"
															},
															"nativeSrc": "3418:55:15",
															"nodeType": "YulIf",
															"src": "3418:55:15"
														},
														{
															"nativeSrc": "3482:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3482:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3509:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3509:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3496:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3496:12:15"
																},
																"nativeSrc": "3496:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3496:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3486:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3486:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3525:75:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3525:75:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3592:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3592:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "3552:39:15",
																			"nodeType": "YulIdentifier",
																			"src": "3552:39:15"
																		},
																		"nativeSrc": "3552:47:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3552:47:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3536:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "3536:15:15"
																},
																"nativeSrc": "3536:64:15",
																"nodeType": "YulFunctionCall",
																"src": "3536:64:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3529:3:15",
																	"nodeType": "YulTypedName",
																	"src": "3529:3:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3609:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3609:18:15",
															"value": {
																"name": "dst",
																"nativeSrc": "3624:3:15",
																"nodeType": "YulIdentifier",
																"src": "3624:3:15"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "3613:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3613:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3643:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3643:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3648:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3648:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3636:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:15"
																},
																"nativeSrc": "3636:19:15",
																"nodeType": "YulFunctionCall",
																"src": "3636:19:15"
															},
															"nativeSrc": "3636:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "3636:19:15"
														},
														{
															"nativeSrc": "3664:21:15",
															"nodeType": "YulAssignment",
															"src": "3664:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3675:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3675:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3680:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3680:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3671:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3671:3:15"
																},
																"nativeSrc": "3671:14:15",
																"nodeType": "YulFunctionCall",
																"src": "3671:14:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "3664:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3664:3:15"
																}
															]
														},
														{
															"nativeSrc": "3694:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3694:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3716:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3716:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3728:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3728:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3731:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3731:6:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3724:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3724:3:15"
																				},
																				"nativeSrc": "3724:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3724:14:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3712:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3712:3:15"
																		},
																		"nativeSrc": "3712:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3712:27:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3741:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3708:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3708:3:15"
																},
																"nativeSrc": "3708:38:15",
																"nodeType": "YulFunctionCall",
																"src": "3708:38:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "3698:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3698:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3774:16:15",
																"nodeType": "YulBlock",
																"src": "3774:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3783:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3783:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3786:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3786:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3776:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3776:6:15"
																			},
																			"nativeSrc": "3776:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3776:12:15"
																		},
																		"nativeSrc": "3776:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3776:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3761:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3761:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3769:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3769:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3758:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3758:2:15"
																},
																"nativeSrc": "3758:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3758:15:15"
															},
															"nativeSrc": "3755:35:15",
															"nodeType": "YulIf",
															"src": "3755:35:15"
														},
														{
															"nativeSrc": "3799:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3799:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3814:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3814:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3822:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3822:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3810:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3810:3:15"
																},
																"nativeSrc": "3810:17:15",
																"nodeType": "YulFunctionCall",
																"src": "3810:17:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "3803:3:15",
																	"nodeType": "YulTypedName",
																	"src": "3803:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3894:142:15",
																"nodeType": "YulBlock",
																"src": "3894:142:15",
																"statements": [
																	{
																		"nativeSrc": "3908:14:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3908:14:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3921:1:15",
																			"nodeType": "YulLiteral",
																			"src": "3921:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "3912:5:15",
																				"nodeType": "YulTypedName",
																				"src": "3912:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3935:26:15",
																		"nodeType": "YulAssignment",
																		"src": "3935:26:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3957:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3957:3:15"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "3944:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "3944:12:15"
																			},
																			"nativeSrc": "3944:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3944:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "3935:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3935:5:15"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3981:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3981:3:15"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "3986:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "3986:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3974:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3974:6:15"
																			},
																			"nativeSrc": "3974:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3974:18:15"
																		},
																		"nativeSrc": "3974:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3974:18:15"
																	},
																	{
																		"nativeSrc": "4005:21:15",
																		"nodeType": "YulAssignment",
																		"src": "4005:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4016:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4016:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4021:4:15",
																					"nodeType": "YulLiteral",
																					"src": "4021:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4012:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4012:3:15"
																			},
																			"nativeSrc": "4012:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4012:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "4005:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4005:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3847:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3847:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3852:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3852:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3844:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3844:2:15"
																},
																"nativeSrc": "3844:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3844:15:15"
															},
															"nativeSrc": "3836:200:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3860:25:15",
																"nodeType": "YulBlock",
																"src": "3860:25:15",
																"statements": [
																	{
																		"nativeSrc": "3862:21:15",
																		"nodeType": "YulAssignment",
																		"src": "3862:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3873:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3873:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3878:4:15",
																					"nodeType": "YulLiteral",
																					"src": "3878:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3869:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3869:3:15"
																			},
																			"nativeSrc": "3869:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3869:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "3862:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3862:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3840:3:15",
																"nodeType": "YulBlock",
																"src": "3840:3:15",
																"statements": []
															},
															"src": "3836:200:15"
														},
														{
															"nativeSrc": "4045:16:15",
															"nodeType": "YulAssignment",
															"src": "4045:16:15",
															"value": {
																"name": "array_1",
																"nativeSrc": "4054:7:15",
																"nodeType": "YulIdentifier",
																"src": "4054:7:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4045:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4045:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nativeSrc": "3344:723:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3382:6:15",
														"nodeType": "YulTypedName",
														"src": "3382:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3390:3:15",
														"nodeType": "YulTypedName",
														"src": "3390:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3398:5:15",
														"nodeType": "YulTypedName",
														"src": "3398:5:15",
														"type": ""
													}
												],
												"src": "3344:723:15"
											},
											{
												"body": {
													"nativeSrc": "4146:375:15",
													"nodeType": "YulBlock",
													"src": "4146:375:15",
													"statements": [
														{
															"nativeSrc": "4156:13:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4156:13:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4168:1:15",
																"nodeType": "YulLiteral",
																"src": "4168:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "4160:4:15",
																	"nodeType": "YulTypedName",
																	"src": "4160:4:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4212:22:15",
																"nodeType": "YulBlock",
																"src": "4212:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4214:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4214:16:15"
																			},
																			"nativeSrc": "4214:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4214:18:15"
																		},
																		"nativeSrc": "4214:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4214:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4184:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4184:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4192:18:15",
																		"nodeType": "YulLiteral",
																		"src": "4192:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4181:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4181:2:15"
																},
																"nativeSrc": "4181:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4181:30:15"
															},
															"nativeSrc": "4178:56:15",
															"nodeType": "YulIf",
															"src": "4178:56:15"
														},
														{
															"nativeSrc": "4243:48:15",
															"nodeType": "YulAssignment",
															"src": "4243:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "4263:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4263:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4271:2:15",
																						"nodeType": "YulLiteral",
																						"src": "4271:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4259:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4259:3:15"
																				},
																				"nativeSrc": "4259:15:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4259:15:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4280:2:15",
																						"nodeType": "YulLiteral",
																						"src": "4280:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4276:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4276:3:15"
																				},
																				"nativeSrc": "4276:7:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4276:7:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4255:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4255:3:15"
																		},
																		"nativeSrc": "4255:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4255:29:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4286:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4286:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4251:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4251:3:15"
																},
																"nativeSrc": "4251:40:15",
																"nodeType": "YulFunctionCall",
																"src": "4251:40:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4243:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4243:4:15"
																}
															]
														},
														{
															"nativeSrc": "4300:30:15",
															"nodeType": "YulAssignment",
															"src": "4300:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4325:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4325:4:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4309:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "4309:15:15"
																},
																"nativeSrc": "4309:21:15",
																"nodeType": "YulFunctionCall",
																"src": "4309:21:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4300:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4300:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4346:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4346:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4353:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4353:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4339:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4339:6:15"
																},
																"nativeSrc": "4339:21:15",
																"nodeType": "YulFunctionCall",
																"src": "4339:21:15"
															},
															"nativeSrc": "4339:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "4339:21:15"
														},
														{
															"body": {
																"nativeSrc": "4398:16:15",
																"nodeType": "YulBlock",
																"src": "4398:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4407:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4407:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4410:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4410:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4400:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4400:6:15"
																			},
																			"nativeSrc": "4400:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4400:12:15"
																		},
																		"nativeSrc": "4400:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4400:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4379:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4379:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4384:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4384:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4375:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4375:3:15"
																		},
																		"nativeSrc": "4375:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4375:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4393:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4393:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4372:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4372:2:15"
																},
																"nativeSrc": "4372:25:15",
																"nodeType": "YulFunctionCall",
																"src": "4372:25:15"
															},
															"nativeSrc": "4369:45:15",
															"nodeType": "YulIf",
															"src": "4369:45:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "4440:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4440:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4447:4:15",
																				"nodeType": "YulLiteral",
																				"src": "4447:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4436:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4436:3:15"
																		},
																		"nativeSrc": "4436:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4436:16:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4454:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4454:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4459:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4459:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4423:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4423:12:15"
																},
																"nativeSrc": "4423:43:15",
																"nodeType": "YulFunctionCall",
																"src": "4423:43:15"
															},
															"nativeSrc": "4423:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "4423:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nativeSrc": "4490:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4490:5:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4497:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4497:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4486:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4486:3:15"
																				},
																				"nativeSrc": "4486:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:18:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4506:4:15",
																				"nodeType": "YulLiteral",
																				"src": "4506:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4482:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4482:3:15"
																		},
																		"nativeSrc": "4482:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4482:29:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4513:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4513:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4475:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4475:6:15"
																},
																"nativeSrc": "4475:40:15",
																"nodeType": "YulFunctionCall",
																"src": "4475:40:15"
															},
															"nativeSrc": "4475:40:15",
															"nodeType": "YulExpressionStatement",
															"src": "4475:40:15"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nativeSrc": "4072:449:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4115:3:15",
														"nodeType": "YulTypedName",
														"src": "4115:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4120:6:15",
														"nodeType": "YulTypedName",
														"src": "4120:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4128:3:15",
														"nodeType": "YulTypedName",
														"src": "4128:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4136:5:15",
														"nodeType": "YulTypedName",
														"src": "4136:5:15",
														"type": ""
													}
												],
												"src": "4072:449:15"
											},
											{
												"body": {
													"nativeSrc": "4578:168:15",
													"nodeType": "YulBlock",
													"src": "4578:168:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4627:16:15",
																"nodeType": "YulBlock",
																"src": "4627:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4636:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4639:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4629:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:15"
																			},
																			"nativeSrc": "4629:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:15"
																		},
																		"nativeSrc": "4629:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4606:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4606:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4614:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4614:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4602:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4602:3:15"
																				},
																				"nativeSrc": "4602:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4602:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4621:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4621:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4598:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4598:3:15"
																		},
																		"nativeSrc": "4598:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4591:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4591:6:15"
																},
																"nativeSrc": "4591:35:15",
																"nodeType": "YulFunctionCall",
																"src": "4591:35:15"
															},
															"nativeSrc": "4588:55:15",
															"nodeType": "YulIf",
															"src": "4588:55:15"
														},
														{
															"nativeSrc": "4652:88:15",
															"nodeType": "YulAssignment",
															"src": "4652:88:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4699:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4699:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4707:4:15",
																				"nodeType": "YulLiteral",
																				"src": "4707:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4695:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4695:3:15"
																		},
																		"nativeSrc": "4695:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4695:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4727:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4727:6:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4714:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "4714:12:15"
																		},
																		"nativeSrc": "4714:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4714:20:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4736:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4736:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nativeSrc": "4661:33:15",
																	"nodeType": "YulIdentifier",
																	"src": "4661:33:15"
																},
																"nativeSrc": "4661:79:15",
																"nodeType": "YulFunctionCall",
																"src": "4661:79:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4652:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4652:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nativeSrc": "4526:220:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4552:6:15",
														"nodeType": "YulTypedName",
														"src": "4552:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4560:3:15",
														"nodeType": "YulTypedName",
														"src": "4560:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4568:5:15",
														"nodeType": "YulTypedName",
														"src": "4568:5:15",
														"type": ""
													}
												],
												"src": "4526:220:15"
											},
											{
												"body": {
													"nativeSrc": "4948:757:15",
													"nodeType": "YulBlock",
													"src": "4948:757:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4995:16:15",
																"nodeType": "YulBlock",
																"src": "4995:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5004:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5004:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5007:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5007:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4997:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4997:6:15"
																			},
																			"nativeSrc": "4997:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4997:12:15"
																		},
																		"nativeSrc": "4997:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4997:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4969:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4969:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4978:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4978:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4965:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4965:3:15"
																		},
																		"nativeSrc": "4965:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4965:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4990:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4990:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4961:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4961:3:15"
																},
																"nativeSrc": "4961:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4961:33:15"
															},
															"nativeSrc": "4958:53:15",
															"nodeType": "YulIf",
															"src": "4958:53:15"
														},
														{
															"nativeSrc": "5020:39:15",
															"nodeType": "YulAssignment",
															"src": "5020:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5049:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5049:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5030:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "5030:18:15"
																},
																"nativeSrc": "5030:29:15",
																"nodeType": "YulFunctionCall",
																"src": "5030:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5020:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:15"
																}
															]
														},
														{
															"nativeSrc": "5068:48:15",
															"nodeType": "YulAssignment",
															"src": "5068:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5101:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5101:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5112:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5112:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5097:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5097:3:15"
																		},
																		"nativeSrc": "5097:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5097:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5078:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "5078:18:15"
																},
																"nativeSrc": "5078:38:15",
																"nodeType": "YulFunctionCall",
																"src": "5078:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5068:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:15"
																}
															]
														},
														{
															"nativeSrc": "5125:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5125:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5156:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5156:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5167:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5167:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5152:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5152:3:15"
																		},
																		"nativeSrc": "5152:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5152:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5139:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5139:12:15"
																},
																"nativeSrc": "5139:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5139:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5129:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5129:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5214:16:15",
																"nodeType": "YulBlock",
																"src": "5214:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5223:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5223:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5226:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5226:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5216:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5216:6:15"
																			},
																			"nativeSrc": "5216:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5216:12:15"
																		},
																		"nativeSrc": "5216:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5216:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5186:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5186:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5194:18:15",
																		"nodeType": "YulLiteral",
																		"src": "5194:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5183:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5183:2:15"
																},
																"nativeSrc": "5183:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5183:30:15"
															},
															"nativeSrc": "5180:50:15",
															"nodeType": "YulIf",
															"src": "5180:50:15"
														},
														{
															"nativeSrc": "5239:71:15",
															"nodeType": "YulAssignment",
															"src": "5239:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5282:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5282:9:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5293:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5293:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5278:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5278:3:15"
																		},
																		"nativeSrc": "5278:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5278:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5302:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "5302:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "5249:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "5249:28:15"
																},
																"nativeSrc": "5249:61:15",
																"nodeType": "YulFunctionCall",
																"src": "5249:61:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5239:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5239:6:15"
																}
															]
														},
														{
															"nativeSrc": "5319:48:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5319:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5352:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5352:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5363:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5363:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5348:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5348:3:15"
																		},
																		"nativeSrc": "5348:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5348:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5335:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5335:12:15"
																},
																"nativeSrc": "5335:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5335:32:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "5323:8:15",
																	"nodeType": "YulTypedName",
																	"src": "5323:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5412:16:15",
																"nodeType": "YulBlock",
																"src": "5412:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5421:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5421:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5424:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5424:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5414:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5414:6:15"
																			},
																			"nativeSrc": "5414:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5414:12:15"
																		},
																		"nativeSrc": "5414:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5414:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "5382:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "5382:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5392:18:15",
																		"nodeType": "YulLiteral",
																		"src": "5392:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5379:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5379:2:15"
																},
																"nativeSrc": "5379:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5379:32:15"
															},
															"nativeSrc": "5376:52:15",
															"nodeType": "YulIf",
															"src": "5376:52:15"
														},
														{
															"nativeSrc": "5437:73:15",
															"nodeType": "YulAssignment",
															"src": "5437:73:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5480:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5480:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "5491:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "5491:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5476:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5476:3:15"
																		},
																		"nativeSrc": "5476:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5476:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5502:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "5502:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "5447:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "5447:28:15"
																},
																"nativeSrc": "5447:63:15",
																"nodeType": "YulFunctionCall",
																"src": "5447:63:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5437:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5437:6:15"
																}
															]
														},
														{
															"nativeSrc": "5519:49:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5519:49:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5552:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5552:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5563:3:15",
																				"nodeType": "YulLiteral",
																				"src": "5563:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5548:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5548:3:15"
																		},
																		"nativeSrc": "5548:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5548:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5535:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5535:12:15"
																},
																"nativeSrc": "5535:33:15",
																"nodeType": "YulFunctionCall",
																"src": "5535:33:15"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "5523:8:15",
																	"nodeType": "YulTypedName",
																	"src": "5523:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5613:16:15",
																"nodeType": "YulBlock",
																"src": "5613:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5622:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5622:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5625:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5625:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5615:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5615:6:15"
																			},
																			"nativeSrc": "5615:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5615:12:15"
																		},
																		"nativeSrc": "5615:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5615:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "5583:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "5583:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5593:18:15",
																		"nodeType": "YulLiteral",
																		"src": "5593:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5580:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5580:2:15"
																},
																"nativeSrc": "5580:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5580:32:15"
															},
															"nativeSrc": "5577:52:15",
															"nodeType": "YulIf",
															"src": "5577:52:15"
														},
														{
															"nativeSrc": "5638:61:15",
															"nodeType": "YulAssignment",
															"src": "5638:61:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5669:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5669:9:15"
																			},
																			{
																				"name": "offset_2",
																				"nativeSrc": "5680:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "5680:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5665:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5665:3:15"
																		},
																		"nativeSrc": "5665:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5665:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5691:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "5691:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "5648:16:15",
																	"nodeType": "YulIdentifier",
																	"src": "5648:16:15"
																},
																"nativeSrc": "5648:51:15",
																"nodeType": "YulFunctionCall",
																"src": "5648:51:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "5638:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5638:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "4751:954:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4882:9:15",
														"nodeType": "YulTypedName",
														"src": "4882:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4893:7:15",
														"nodeType": "YulTypedName",
														"src": "4893:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4905:6:15",
														"nodeType": "YulTypedName",
														"src": "4905:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4913:6:15",
														"nodeType": "YulTypedName",
														"src": "4913:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4921:6:15",
														"nodeType": "YulTypedName",
														"src": "4921:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4929:6:15",
														"nodeType": "YulTypedName",
														"src": "4929:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4937:6:15",
														"nodeType": "YulTypedName",
														"src": "4937:6:15",
														"type": ""
													}
												],
												"src": "4751:954:15"
											},
											{
												"body": {
													"nativeSrc": "5847:1009:15",
													"nodeType": "YulBlock",
													"src": "5847:1009:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5893:16:15",
																"nodeType": "YulBlock",
																"src": "5893:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5902:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5902:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5905:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5905:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5895:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5895:6:15"
																			},
																			"nativeSrc": "5895:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5895:12:15"
																		},
																		"nativeSrc": "5895:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5895:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5868:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5868:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5877:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5877:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5864:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5864:3:15"
																		},
																		"nativeSrc": "5864:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5864:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5889:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5889:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5860:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5860:3:15"
																},
																"nativeSrc": "5860:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5860:32:15"
															},
															"nativeSrc": "5857:52:15",
															"nodeType": "YulIf",
															"src": "5857:52:15"
														},
														{
															"nativeSrc": "5918:37:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5918:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5945:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5945:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5932:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5932:12:15"
																},
																"nativeSrc": "5932:23:15",
																"nodeType": "YulFunctionCall",
																"src": "5932:23:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5922:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5922:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5998:16:15",
																"nodeType": "YulBlock",
																"src": "5998:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6007:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6007:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6010:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6010:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6000:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6000:6:15"
																			},
																			"nativeSrc": "6000:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6000:12:15"
																		},
																		"nativeSrc": "6000:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6000:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5970:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5970:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:18:15",
																		"nodeType": "YulLiteral",
																		"src": "5978:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5967:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5967:2:15"
																},
																"nativeSrc": "5967:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5967:30:15"
															},
															"nativeSrc": "5964:50:15",
															"nodeType": "YulIf",
															"src": "5964:50:15"
														},
														{
															"nativeSrc": "6023:32:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6023:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6037:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6037:9:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6048:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6048:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6033:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6033:3:15"
																},
																"nativeSrc": "6033:22:15",
																"nodeType": "YulFunctionCall",
																"src": "6033:22:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6027:2:15",
																	"nodeType": "YulTypedName",
																	"src": "6027:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6103:16:15",
																"nodeType": "YulBlock",
																"src": "6103:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6112:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6112:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6115:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6115:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6105:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6105:6:15"
																			},
																			"nativeSrc": "6105:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6105:12:15"
																		},
																		"nativeSrc": "6105:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6105:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "6082:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "6082:2:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6086:4:15",
																						"nodeType": "YulLiteral",
																						"src": "6086:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6078:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6078:3:15"
																				},
																				"nativeSrc": "6078:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6078:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6093:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6093:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6074:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:15"
																		},
																		"nativeSrc": "6074:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6074:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6067:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6067:6:15"
																},
																"nativeSrc": "6067:35:15",
																"nodeType": "YulFunctionCall",
																"src": "6067:35:15"
															},
															"nativeSrc": "6064:55:15",
															"nodeType": "YulIf",
															"src": "6064:55:15"
														},
														{
															"nativeSrc": "6128:30:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6128:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6155:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "6155:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6142:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6142:12:15"
																},
																"nativeSrc": "6142:16:15",
																"nodeType": "YulFunctionCall",
																"src": "6142:16:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6132:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6132:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6167:75:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6167:75:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6234:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6234:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "6194:39:15",
																			"nodeType": "YulIdentifier",
																			"src": "6194:39:15"
																		},
																		"nativeSrc": "6194:47:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6194:47:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6178:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "6178:15:15"
																},
																"nativeSrc": "6178:64:15",
																"nodeType": "YulFunctionCall",
																"src": "6178:64:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6171:3:15",
																	"nodeType": "YulTypedName",
																	"src": "6171:3:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6251:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6251:16:15",
															"value": {
																"name": "dst",
																"nativeSrc": "6264:3:15",
																"nodeType": "YulIdentifier",
																"src": "6264:3:15"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "6255:5:15",
																	"nodeType": "YulTypedName",
																	"src": "6255:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6283:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6283:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6288:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6288:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6276:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6276:6:15"
																},
																"nativeSrc": "6276:19:15",
																"nodeType": "YulFunctionCall",
																"src": "6276:19:15"
															},
															"nativeSrc": "6276:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "6276:19:15"
														},
														{
															"nativeSrc": "6304:21:15",
															"nodeType": "YulAssignment",
															"src": "6304:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6315:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6315:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6320:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6320:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6311:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6311:3:15"
																},
																"nativeSrc": "6311:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6311:14:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6304:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6304:3:15"
																}
															]
														},
														{
															"nativeSrc": "6334:48:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6334:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6356:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6356:2:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6364:1:15",
																						"nodeType": "YulLiteral",
																						"src": "6364:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "6367:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6367:6:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "6360:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6360:3:15"
																				},
																				"nativeSrc": "6360:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6360:14:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6352:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6352:3:15"
																		},
																		"nativeSrc": "6352:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6352:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6377:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6377:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6348:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6348:3:15"
																},
																"nativeSrc": "6348:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6348:34:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6338:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6338:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6414:16:15",
																"nodeType": "YulBlock",
																"src": "6414:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6423:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6423:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6426:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6426:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6416:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6416:6:15"
																			},
																			"nativeSrc": "6416:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6416:12:15"
																		},
																		"nativeSrc": "6416:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6416:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6397:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6397:6:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6405:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6405:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6394:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6394:2:15"
																},
																"nativeSrc": "6394:19:15",
																"nodeType": "YulFunctionCall",
																"src": "6394:19:15"
															},
															"nativeSrc": "6391:39:15",
															"nodeType": "YulIf",
															"src": "6391:39:15"
														},
														{
															"nativeSrc": "6439:24:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6439:24:15",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6454:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "6454:2:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6458:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6458:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6450:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6450:3:15"
																},
																"nativeSrc": "6450:13:15",
																"nodeType": "YulFunctionCall",
																"src": "6450:13:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "6443:3:15",
																	"nodeType": "YulTypedName",
																	"src": "6443:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6530:94:15",
																"nodeType": "YulBlock",
																"src": "6530:94:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6551:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6551:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "6575:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6575:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "6556:18:15",
																						"nodeType": "YulIdentifier",
																						"src": "6556:18:15"
																					},
																					"nativeSrc": "6556:23:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6556:23:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6544:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6544:6:15"
																			},
																			"nativeSrc": "6544:36:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6544:36:15"
																		},
																		"nativeSrc": "6544:36:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6544:36:15"
																	},
																	{
																		"nativeSrc": "6593:21:15",
																		"nodeType": "YulAssignment",
																		"src": "6593:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6604:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6604:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6609:4:15",
																					"nodeType": "YulLiteral",
																					"src": "6609:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6600:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6600:3:15"
																			},
																			"nativeSrc": "6600:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6600:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6593:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6593:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6483:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6483:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6488:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6488:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6480:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6480:2:15"
																},
																"nativeSrc": "6480:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6480:15:15"
															},
															"nativeSrc": "6472:152:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6496:25:15",
																"nodeType": "YulBlock",
																"src": "6496:25:15",
																"statements": [
																	{
																		"nativeSrc": "6498:21:15",
																		"nodeType": "YulAssignment",
																		"src": "6498:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6509:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6509:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6514:4:15",
																					"nodeType": "YulLiteral",
																					"src": "6514:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6505:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6505:3:15"
																			},
																			"nativeSrc": "6505:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6505:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6498:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6498:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6476:3:15",
																"nodeType": "YulBlock",
																"src": "6476:3:15",
																"statements": []
															},
															"src": "6472:152:15"
														},
														{
															"nativeSrc": "6633:15:15",
															"nodeType": "YulAssignment",
															"src": "6633:15:15",
															"value": {
																"name": "array",
																"nativeSrc": "6643:5:15",
																"nodeType": "YulIdentifier",
																"src": "6643:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6633:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6633:6:15"
																}
															]
														},
														{
															"nativeSrc": "6657:50:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6657:50:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6690:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6690:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:4:15",
																				"nodeType": "YulLiteral",
																				"src": "6701:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6686:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6686:3:15"
																		},
																		"nativeSrc": "6686:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6686:20:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6673:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6673:12:15"
																},
																"nativeSrc": "6673:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6673:34:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "6661:8:15",
																	"nodeType": "YulTypedName",
																	"src": "6661:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6752:16:15",
																"nodeType": "YulBlock",
																"src": "6752:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6761:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6761:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6764:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6764:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6754:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6754:6:15"
																			},
																			"nativeSrc": "6754:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6754:12:15"
																		},
																		"nativeSrc": "6754:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6754:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "6722:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "6722:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6732:18:15",
																		"nodeType": "YulLiteral",
																		"src": "6732:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6719:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6719:2:15"
																},
																"nativeSrc": "6719:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6719:32:15"
															},
															"nativeSrc": "6716:52:15",
															"nodeType": "YulIf",
															"src": "6716:52:15"
														},
														{
															"nativeSrc": "6777:73:15",
															"nodeType": "YulAssignment",
															"src": "6777:73:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6820:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6820:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "6831:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "6831:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6816:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6816:3:15"
																		},
																		"nativeSrc": "6816:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6816:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6842:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6842:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nativeSrc": "6787:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "6787:28:15"
																},
																"nativeSrc": "6787:63:15",
																"nodeType": "YulFunctionCall",
																"src": "6787:63:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6777:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6777:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5710:1146:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5805:9:15",
														"nodeType": "YulTypedName",
														"src": "5805:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5816:7:15",
														"nodeType": "YulTypedName",
														"src": "5816:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5828:6:15",
														"nodeType": "YulTypedName",
														"src": "5828:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5836:6:15",
														"nodeType": "YulTypedName",
														"src": "5836:6:15",
														"type": ""
													}
												],
												"src": "5710:1146:15"
											},
											{
												"body": {
													"nativeSrc": "6922:359:15",
													"nodeType": "YulBlock",
													"src": "6922:359:15",
													"statements": [
														{
															"nativeSrc": "6932:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6932:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6952:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6952:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6946:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6946:5:15"
																},
																"nativeSrc": "6946:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6946:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6936:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6936:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6974:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6974:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6979:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6979:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6967:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6967:6:15"
																},
																"nativeSrc": "6967:19:15",
																"nodeType": "YulFunctionCall",
																"src": "6967:19:15"
															},
															"nativeSrc": "6967:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "6967:19:15"
														},
														{
															"nativeSrc": "6995:21:15",
															"nodeType": "YulAssignment",
															"src": "6995:21:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7006:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7006:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7011:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7011:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7002:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7002:3:15"
																},
																"nativeSrc": "7002:14:15",
																"nodeType": "YulFunctionCall",
																"src": "7002:14:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6995:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:15"
																}
															]
														},
														{
															"nativeSrc": "7025:30:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7025:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7043:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7043:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7050:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7050:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7039:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7039:3:15"
																},
																"nativeSrc": "7039:16:15",
																"nodeType": "YulFunctionCall",
																"src": "7039:16:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7029:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7029:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7064:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7064:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "7073:1:15",
																"nodeType": "YulLiteral",
																"src": "7073:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "7068:1:15",
																	"nodeType": "YulTypedName",
																	"src": "7068:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7132:124:15",
																"nodeType": "YulBlock",
																"src": "7132:124:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "7153:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7153:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "7164:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "7164:6:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7158:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7158:5:15"
																					},
																					"nativeSrc": "7158:13:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7158:13:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7146:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7146:6:15"
																			},
																			"nativeSrc": "7146:26:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7146:26:15"
																		},
																		"nativeSrc": "7146:26:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7146:26:15"
																	},
																	{
																		"nativeSrc": "7185:21:15",
																		"nodeType": "YulAssignment",
																		"src": "7185:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "7196:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7196:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7201:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7201:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7192:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7192:3:15"
																			},
																			"nativeSrc": "7192:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7192:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7185:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7185:3:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7219:27:15",
																		"nodeType": "YulAssignment",
																		"src": "7219:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7233:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7233:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7241:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7241:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7229:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7229:3:15"
																			},
																			"nativeSrc": "7229:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7229:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7219:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7219:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7094:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7094:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7097:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7097:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7091:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7091:2:15"
																},
																"nativeSrc": "7091:13:15",
																"nodeType": "YulFunctionCall",
																"src": "7091:13:15"
															},
															"nativeSrc": "7083:173:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7105:18:15",
																"nodeType": "YulBlock",
																"src": "7105:18:15",
																"statements": [
																	{
																		"nativeSrc": "7107:14:15",
																		"nodeType": "YulAssignment",
																		"src": "7107:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7116:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "7116:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7119:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7119:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7112:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7112:3:15"
																			},
																			"nativeSrc": "7112:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7112:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7107:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "7107:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7087:3:15",
																"nodeType": "YulBlock",
																"src": "7087:3:15",
																"statements": []
															},
															"src": "7083:173:15"
														},
														{
															"nativeSrc": "7265:10:15",
															"nodeType": "YulAssignment",
															"src": "7265:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "7272:3:15",
																"nodeType": "YulIdentifier",
																"src": "7272:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7265:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7265:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nativeSrc": "6861:420:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6899:5:15",
														"nodeType": "YulTypedName",
														"src": "6899:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6906:3:15",
														"nodeType": "YulTypedName",
														"src": "6906:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6914:3:15",
														"nodeType": "YulTypedName",
														"src": "6914:3:15",
														"type": ""
													}
												],
												"src": "6861:420:15"
											},
											{
												"body": {
													"nativeSrc": "7437:110:15",
													"nodeType": "YulBlock",
													"src": "7437:110:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7454:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7454:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7465:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7465:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7447:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7447:6:15"
																},
																"nativeSrc": "7447:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7447:21:15"
															},
															"nativeSrc": "7447:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "7447:21:15"
														},
														{
															"nativeSrc": "7477:64:15",
															"nodeType": "YulAssignment",
															"src": "7477:64:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7514:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7514:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7526:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7526:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7537:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7537:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7522:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7522:3:15"
																		},
																		"nativeSrc": "7522:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7522:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "7485:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "7485:28:15"
																},
																"nativeSrc": "7485:56:15",
																"nodeType": "YulFunctionCall",
																"src": "7485:56:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7477:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7477:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7286:261:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7406:9:15",
														"nodeType": "YulTypedName",
														"src": "7406:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7417:6:15",
														"nodeType": "YulTypedName",
														"src": "7417:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7428:4:15",
														"nodeType": "YulTypedName",
														"src": "7428:4:15",
														"type": ""
													}
												],
												"src": "7286:261:15"
											},
											{
												"body": {
													"nativeSrc": "7636:263:15",
													"nodeType": "YulBlock",
													"src": "7636:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7682:16:15",
																"nodeType": "YulBlock",
																"src": "7682:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7691:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7691:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7694:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7694:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7684:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7684:6:15"
																			},
																			"nativeSrc": "7684:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7684:12:15"
																		},
																		"nativeSrc": "7684:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7684:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7657:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7657:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7666:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7666:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7653:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7653:3:15"
																		},
																		"nativeSrc": "7653:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7653:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7678:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7678:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7649:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7649:3:15"
																},
																"nativeSrc": "7649:32:15",
																"nodeType": "YulFunctionCall",
																"src": "7649:32:15"
															},
															"nativeSrc": "7646:52:15",
															"nodeType": "YulIf",
															"src": "7646:52:15"
														},
														{
															"nativeSrc": "7707:39:15",
															"nodeType": "YulAssignment",
															"src": "7707:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7736:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7736:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7717:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:15"
																},
																"nativeSrc": "7717:29:15",
																"nodeType": "YulFunctionCall",
																"src": "7717:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7707:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:15"
																}
															]
														},
														{
															"nativeSrc": "7755:45:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7755:45:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7785:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7785:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7796:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7796:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7781:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7781:3:15"
																		},
																		"nativeSrc": "7781:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7781:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7768:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "7768:12:15"
																},
																"nativeSrc": "7768:32:15",
																"nodeType": "YulFunctionCall",
																"src": "7768:32:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7759:5:15",
																	"nodeType": "YulTypedName",
																	"src": "7759:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7853:16:15",
																"nodeType": "YulBlock",
																"src": "7853:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7862:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7862:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7865:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7865:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7855:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7855:6:15"
																			},
																			"nativeSrc": "7855:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7855:12:15"
																		},
																		"nativeSrc": "7855:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7855:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7822:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7822:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7843:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "7843:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7836:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "7836:6:15"
																						},
																						"nativeSrc": "7836:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "7836:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7829:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "7829:6:15"
																				},
																				"nativeSrc": "7829:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7829:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7819:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7819:2:15"
																		},
																		"nativeSrc": "7819:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7819:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7812:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7812:6:15"
																},
																"nativeSrc": "7812:40:15",
																"nodeType": "YulFunctionCall",
																"src": "7812:40:15"
															},
															"nativeSrc": "7809:60:15",
															"nodeType": "YulIf",
															"src": "7809:60:15"
														},
														{
															"nativeSrc": "7878:15:15",
															"nodeType": "YulAssignment",
															"src": "7878:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "7888:5:15",
																"nodeType": "YulIdentifier",
																"src": "7888:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7878:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7878:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7552:347:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7594:9:15",
														"nodeType": "YulTypedName",
														"src": "7594:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7605:7:15",
														"nodeType": "YulTypedName",
														"src": "7605:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7617:6:15",
														"nodeType": "YulTypedName",
														"src": "7617:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7625:6:15",
														"nodeType": "YulTypedName",
														"src": "7625:6:15",
														"type": ""
													}
												],
												"src": "7552:347:15"
											},
											{
												"body": {
													"nativeSrc": "8018:524:15",
													"nodeType": "YulBlock",
													"src": "8018:524:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8064:16:15",
																"nodeType": "YulBlock",
																"src": "8064:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8073:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8073:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8076:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8076:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8066:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8066:6:15"
																			},
																			"nativeSrc": "8066:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8066:12:15"
																		},
																		"nativeSrc": "8066:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8066:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8039:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8039:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8048:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8048:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8035:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8035:3:15"
																		},
																		"nativeSrc": "8035:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8035:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8060:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8060:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8031:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8031:3:15"
																},
																"nativeSrc": "8031:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8031:32:15"
															},
															"nativeSrc": "8028:52:15",
															"nodeType": "YulIf",
															"src": "8028:52:15"
														},
														{
															"nativeSrc": "8089:39:15",
															"nodeType": "YulAssignment",
															"src": "8089:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8118:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8118:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8099:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "8099:18:15"
																},
																"nativeSrc": "8099:29:15",
																"nodeType": "YulFunctionCall",
																"src": "8099:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8089:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8089:6:15"
																}
															]
														},
														{
															"nativeSrc": "8137:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8137:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "8150:1:15",
																"nodeType": "YulLiteral",
																"src": "8150:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8141:5:15",
																	"nodeType": "YulTypedName",
																	"src": "8141:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8160:41:15",
															"nodeType": "YulAssignment",
															"src": "8160:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8186:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8186:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8197:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8197:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8182:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8182:3:15"
																		},
																		"nativeSrc": "8182:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8182:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8169:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8169:12:15"
																},
																"nativeSrc": "8169:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8169:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8160:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8160:5:15"
																}
															]
														},
														{
															"nativeSrc": "8210:15:15",
															"nodeType": "YulAssignment",
															"src": "8210:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "8220:5:15",
																"nodeType": "YulIdentifier",
																"src": "8220:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8210:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8210:6:15"
																}
															]
														},
														{
															"nativeSrc": "8234:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8234:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8265:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8265:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8276:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8276:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8261:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8261:3:15"
																		},
																		"nativeSrc": "8261:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8261:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8248:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8248:12:15"
																},
																"nativeSrc": "8248:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8248:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "8238:6:15",
																	"nodeType": "YulTypedName",
																	"src": "8238:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8323:16:15",
																"nodeType": "YulBlock",
																"src": "8323:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8332:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8332:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8335:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8335:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8325:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8325:6:15"
																			},
																			"nativeSrc": "8325:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8325:12:15"
																		},
																		"nativeSrc": "8325:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8325:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8295:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8295:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8303:18:15",
																		"nodeType": "YulLiteral",
																		"src": "8303:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8292:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8292:2:15"
																},
																"nativeSrc": "8292:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8292:30:15"
															},
															"nativeSrc": "8289:50:15",
															"nodeType": "YulIf",
															"src": "8289:50:15"
														},
														{
															"nativeSrc": "8348:32:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8348:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8362:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8362:9:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "8373:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8373:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8358:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8358:3:15"
																},
																"nativeSrc": "8358:22:15",
																"nodeType": "YulFunctionCall",
																"src": "8358:22:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8352:2:15",
																	"nodeType": "YulTypedName",
																	"src": "8352:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8428:16:15",
																"nodeType": "YulBlock",
																"src": "8428:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8437:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8437:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8440:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8440:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8430:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8430:6:15"
																			},
																			"nativeSrc": "8430:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8430:12:15"
																		},
																		"nativeSrc": "8430:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8430:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "8407:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "8407:2:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8411:4:15",
																						"nodeType": "YulLiteral",
																						"src": "8411:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8403:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8403:3:15"
																				},
																				"nativeSrc": "8403:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8403:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8418:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8418:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8399:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:15"
																		},
																		"nativeSrc": "8399:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8392:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8392:6:15"
																},
																"nativeSrc": "8392:35:15",
																"nodeType": "YulFunctionCall",
																"src": "8392:35:15"
															},
															"nativeSrc": "8389:55:15",
															"nodeType": "YulIf",
															"src": "8389:55:15"
														},
														{
															"nativeSrc": "8453:83:15",
															"nodeType": "YulAssignment",
															"src": "8453:83:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8501:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "8501:2:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8505:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8505:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8497:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8497:3:15"
																		},
																		"nativeSrc": "8497:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8497:11:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "8523:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "8523:2:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8510:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "8510:12:15"
																		},
																		"nativeSrc": "8510:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8510:16:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "8528:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "8528:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nativeSrc": "8463:33:15",
																	"nodeType": "YulIdentifier",
																	"src": "8463:33:15"
																},
																"nativeSrc": "8463:73:15",
																"nodeType": "YulFunctionCall",
																"src": "8463:73:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "8453:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8453:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptr",
												"nativeSrc": "7904:638:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7968:9:15",
														"nodeType": "YulTypedName",
														"src": "7968:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7979:7:15",
														"nodeType": "YulTypedName",
														"src": "7979:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7991:6:15",
														"nodeType": "YulTypedName",
														"src": "7991:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7999:6:15",
														"nodeType": "YulTypedName",
														"src": "7999:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8007:6:15",
														"nodeType": "YulTypedName",
														"src": "8007:6:15",
														"type": ""
													}
												],
												"src": "7904:638:15"
											},
											{
												"body": {
													"nativeSrc": "8634:173:15",
													"nodeType": "YulBlock",
													"src": "8634:173:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8680:16:15",
																"nodeType": "YulBlock",
																"src": "8680:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8689:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8689:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8692:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8692:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8682:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8682:6:15"
																			},
																			"nativeSrc": "8682:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8682:12:15"
																		},
																		"nativeSrc": "8682:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8682:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8655:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8655:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8664:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8664:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8651:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8651:3:15"
																		},
																		"nativeSrc": "8651:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8651:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8676:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8676:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8647:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8647:3:15"
																},
																"nativeSrc": "8647:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8647:32:15"
															},
															"nativeSrc": "8644:52:15",
															"nodeType": "YulIf",
															"src": "8644:52:15"
														},
														{
															"nativeSrc": "8705:39:15",
															"nodeType": "YulAssignment",
															"src": "8705:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8734:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8734:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8715:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "8715:18:15"
																},
																"nativeSrc": "8715:29:15",
																"nodeType": "YulFunctionCall",
																"src": "8715:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8705:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8705:6:15"
																}
															]
														},
														{
															"nativeSrc": "8753:48:15",
															"nodeType": "YulAssignment",
															"src": "8753:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8786:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8786:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8797:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8797:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8782:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8782:3:15"
																		},
																		"nativeSrc": "8782:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8782:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8763:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "8763:18:15"
																},
																"nativeSrc": "8763:38:15",
																"nodeType": "YulFunctionCall",
																"src": "8763:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8753:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8753:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8547:260:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8592:9:15",
														"nodeType": "YulTypedName",
														"src": "8592:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8603:7:15",
														"nodeType": "YulTypedName",
														"src": "8603:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8615:6:15",
														"nodeType": "YulTypedName",
														"src": "8615:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8623:6:15",
														"nodeType": "YulTypedName",
														"src": "8623:6:15",
														"type": ""
													}
												],
												"src": "8547:260:15"
											},
											{
												"body": {
													"nativeSrc": "8959:557:15",
													"nodeType": "YulBlock",
													"src": "8959:557:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9006:16:15",
																"nodeType": "YulBlock",
																"src": "9006:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9015:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9015:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9018:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9018:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9008:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9008:6:15"
																			},
																			"nativeSrc": "9008:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9008:12:15"
																		},
																		"nativeSrc": "9008:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9008:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8980:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8980:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8989:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8989:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8976:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8976:3:15"
																		},
																		"nativeSrc": "8976:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8976:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9001:3:15",
																		"nodeType": "YulLiteral",
																		"src": "9001:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8972:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8972:3:15"
																},
																"nativeSrc": "8972:33:15",
																"nodeType": "YulFunctionCall",
																"src": "8972:33:15"
															},
															"nativeSrc": "8969:53:15",
															"nodeType": "YulIf",
															"src": "8969:53:15"
														},
														{
															"nativeSrc": "9031:39:15",
															"nodeType": "YulAssignment",
															"src": "9031:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9060:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9060:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "9041:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "9041:18:15"
																},
																"nativeSrc": "9041:29:15",
																"nodeType": "YulFunctionCall",
																"src": "9041:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9031:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:15"
																}
															]
														},
														{
															"nativeSrc": "9079:48:15",
															"nodeType": "YulAssignment",
															"src": "9079:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9112:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9112:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9123:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9123:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9108:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9108:3:15"
																		},
																		"nativeSrc": "9108:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9108:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "9089:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "9089:18:15"
																},
																"nativeSrc": "9089:38:15",
																"nodeType": "YulFunctionCall",
																"src": "9089:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "9079:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9079:6:15"
																}
															]
														},
														{
															"nativeSrc": "9136:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9136:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "9149:1:15",
																"nodeType": "YulLiteral",
																"src": "9149:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9140:5:15",
																	"nodeType": "YulTypedName",
																	"src": "9140:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9159:41:15",
															"nodeType": "YulAssignment",
															"src": "9159:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9185:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9185:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9196:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9196:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9181:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9181:3:15"
																		},
																		"nativeSrc": "9181:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9181:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9168:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9168:12:15"
																},
																"nativeSrc": "9168:32:15",
																"nodeType": "YulFunctionCall",
																"src": "9168:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9159:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9159:5:15"
																}
															]
														},
														{
															"nativeSrc": "9209:15:15",
															"nodeType": "YulAssignment",
															"src": "9209:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "9219:5:15",
																"nodeType": "YulIdentifier",
																"src": "9219:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "9209:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9209:6:15"
																}
															]
														},
														{
															"nativeSrc": "9233:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9233:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "9248:1:15",
																"nodeType": "YulLiteral",
																"src": "9248:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "9237:7:15",
																	"nodeType": "YulTypedName",
																	"src": "9237:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9258:43:15",
															"nodeType": "YulAssignment",
															"src": "9258:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9286:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9286:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9297:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9297:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9282:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9282:3:15"
																		},
																		"nativeSrc": "9282:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9282:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9269:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9269:12:15"
																},
																"nativeSrc": "9269:32:15",
																"nodeType": "YulFunctionCall",
																"src": "9269:32:15"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "9258:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "9258:7:15"
																}
															]
														},
														{
															"nativeSrc": "9310:17:15",
															"nodeType": "YulAssignment",
															"src": "9310:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "9320:7:15",
																"nodeType": "YulIdentifier",
																"src": "9320:7:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "9310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9310:6:15"
																}
															]
														},
														{
															"nativeSrc": "9336:47:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9336:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9367:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9367:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9378:3:15",
																				"nodeType": "YulLiteral",
																				"src": "9378:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9363:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9363:3:15"
																		},
																		"nativeSrc": "9363:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9363:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9350:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9350:12:15"
																},
																"nativeSrc": "9350:33:15",
																"nodeType": "YulFunctionCall",
																"src": "9350:33:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "9340:6:15",
																	"nodeType": "YulTypedName",
																	"src": "9340:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9426:16:15",
																"nodeType": "YulBlock",
																"src": "9426:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9435:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9435:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9438:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9438:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9428:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9428:6:15"
																			},
																			"nativeSrc": "9428:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9428:12:15"
																		},
																		"nativeSrc": "9428:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9428:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9398:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9398:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9406:18:15",
																		"nodeType": "YulLiteral",
																		"src": "9406:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9395:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9395:2:15"
																},
																"nativeSrc": "9395:30:15",
																"nodeType": "YulFunctionCall",
																"src": "9395:30:15"
															},
															"nativeSrc": "9392:50:15",
															"nodeType": "YulIf",
															"src": "9392:50:15"
														},
														{
															"nativeSrc": "9451:59:15",
															"nodeType": "YulAssignment",
															"src": "9451:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9482:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9482:9:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "9493:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9493:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9478:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9478:3:15"
																		},
																		"nativeSrc": "9478:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9478:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "9502:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "9502:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "9461:16:15",
																	"nodeType": "YulIdentifier",
																	"src": "9461:16:15"
																},
																"nativeSrc": "9461:49:15",
																"nodeType": "YulFunctionCall",
																"src": "9461:49:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "9451:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9451:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "8812:704:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8893:9:15",
														"nodeType": "YulTypedName",
														"src": "8893:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8904:7:15",
														"nodeType": "YulTypedName",
														"src": "8904:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8916:6:15",
														"nodeType": "YulTypedName",
														"src": "8916:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8924:6:15",
														"nodeType": "YulTypedName",
														"src": "8924:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8932:6:15",
														"nodeType": "YulTypedName",
														"src": "8932:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8940:6:15",
														"nodeType": "YulTypedName",
														"src": "8940:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8948:6:15",
														"nodeType": "YulTypedName",
														"src": "8948:6:15",
														"type": ""
													}
												],
												"src": "8812:704:15"
											},
											{
												"body": {
													"nativeSrc": "9576:325:15",
													"nodeType": "YulBlock",
													"src": "9576:325:15",
													"statements": [
														{
															"nativeSrc": "9586:22:15",
															"nodeType": "YulAssignment",
															"src": "9586:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9600:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9600:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "9603:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9603:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9596:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9596:3:15"
																},
																"nativeSrc": "9596:12:15",
																"nodeType": "YulFunctionCall",
																"src": "9596:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9586:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9586:6:15"
																}
															]
														},
														{
															"nativeSrc": "9617:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "9617:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9647:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9647:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9653:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9653:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9643:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9643:3:15"
																},
																"nativeSrc": "9643:12:15",
																"nodeType": "YulFunctionCall",
																"src": "9643:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9621:18:15",
																	"nodeType": "YulTypedName",
																	"src": "9621:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9694:31:15",
																"nodeType": "YulBlock",
																"src": "9694:31:15",
																"statements": [
																	{
																		"nativeSrc": "9696:27:15",
																		"nodeType": "YulAssignment",
																		"src": "9696:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9710:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "9710:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9718:4:15",
																					"nodeType": "YulLiteral",
																					"src": "9718:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9706:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "9706:3:15"
																			},
																			"nativeSrc": "9706:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9706:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9696:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9696:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9674:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "9674:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9667:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9667:6:15"
																},
																"nativeSrc": "9667:26:15",
																"nodeType": "YulFunctionCall",
																"src": "9667:26:15"
															},
															"nativeSrc": "9664:61:15",
															"nodeType": "YulIf",
															"src": "9664:61:15"
														},
														{
															"body": {
																"nativeSrc": "9784:111:15",
																"nodeType": "YulBlock",
																"src": "9784:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9805:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9805:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9812:3:15",
																							"nodeType": "YulLiteral",
																							"src": "9812:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9817:10:15",
																							"nodeType": "YulLiteral",
																							"src": "9817:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9808:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "9808:3:15"
																					},
																					"nativeSrc": "9808:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9808:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9798:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9798:6:15"
																			},
																			"nativeSrc": "9798:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9798:31:15"
																		},
																		"nativeSrc": "9798:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9798:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9849:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9849:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9852:4:15",
																					"nodeType": "YulLiteral",
																					"src": "9852:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9842:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9842:6:15"
																			},
																			"nativeSrc": "9842:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9842:15:15"
																		},
																		"nativeSrc": "9842:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9842:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9877:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9877:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9880:4:15",
																					"nodeType": "YulLiteral",
																					"src": "9880:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9870:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9870:6:15"
																			},
																			"nativeSrc": "9870:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9870:15:15"
																		},
																		"nativeSrc": "9870:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9870:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9740:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "9740:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9763:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9763:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9771:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9771:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9760:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9760:2:15"
																		},
																		"nativeSrc": "9760:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9760:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9737:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9737:2:15"
																},
																"nativeSrc": "9737:38:15",
																"nodeType": "YulFunctionCall",
																"src": "9737:38:15"
															},
															"nativeSrc": "9734:161:15",
															"nodeType": "YulIf",
															"src": "9734:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9521:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9556:4:15",
														"nodeType": "YulTypedName",
														"src": "9556:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9565:6:15",
														"nodeType": "YulTypedName",
														"src": "9565:6:15",
														"type": ""
													}
												],
												"src": "9521:380:15"
											},
											{
												"body": {
													"nativeSrc": "9962:65:15",
													"nodeType": "YulBlock",
													"src": "9962:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9979:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9979:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "9982:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9982:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9972:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9972:6:15"
																},
																"nativeSrc": "9972:14:15",
																"nodeType": "YulFunctionCall",
																"src": "9972:14:15"
															},
															"nativeSrc": "9972:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "9972:14:15"
														},
														{
															"nativeSrc": "9995:26:15",
															"nodeType": "YulAssignment",
															"src": "9995:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10013:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10013:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10016:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10016:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "10003:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "10003:9:15"
																},
																"nativeSrc": "10003:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10003:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9995:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9995:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "9906:121:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9945:3:15",
														"nodeType": "YulTypedName",
														"src": "9945:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9953:4:15",
														"nodeType": "YulTypedName",
														"src": "9953:4:15",
														"type": ""
													}
												],
												"src": "9906:121:15"
											},
											{
												"body": {
													"nativeSrc": "10216:791:15",
													"nodeType": "YulBlock",
													"src": "10216:791:15",
													"statements": [
														{
															"nativeSrc": "10226:12:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10226:12:15",
															"value": {
																"kind": "number",
																"nativeSrc": "10237:1:15",
																"nodeType": "YulLiteral",
																"src": "10237:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nativeSrc": "10230:3:15",
																	"nodeType": "YulTypedName",
																	"src": "10230:3:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10247:30:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10247:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10270:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10270:6:15"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "10264:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10264:5:15"
																},
																"nativeSrc": "10264:13:15",
																"nodeType": "YulFunctionCall",
																"src": "10264:13:15"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "10251:9:15",
																	"nodeType": "YulTypedName",
																	"src": "10251:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10286:50:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10286:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "10326:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10326:9:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "10300:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "10300:25:15"
																},
																"nativeSrc": "10300:36:15",
																"nodeType": "YulFunctionCall",
																"src": "10300:36:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10290:6:15",
																	"nodeType": "YulTypedName",
																	"src": "10290:6:15",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10385:126:15",
																		"nodeType": "YulBlock",
																		"src": "10385:126:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "10406:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "10406:3:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "10415:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "10415:9:15"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10430:3:15",
																											"nodeType": "YulLiteral",
																											"src": "10430:3:15",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "10426:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "10426:3:15"
																									},
																									"nativeSrc": "10426:8:15",
																									"nodeType": "YulFunctionCall",
																									"src": "10426:8:15"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "10411:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "10411:3:15"
																							},
																							"nativeSrc": "10411:24:15",
																							"nodeType": "YulFunctionCall",
																							"src": "10411:24:15"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "10399:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10399:6:15"
																					},
																					"nativeSrc": "10399:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10399:37:15"
																				},
																				"nativeSrc": "10399:37:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "10399:37:15"
																			},
																			{
																				"nativeSrc": "10449:52:15",
																				"nodeType": "YulAssignment",
																				"src": "10449:52:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "10460:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "10460:3:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "10469:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "10469:6:15"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "10491:6:15",
																													"nodeType": "YulIdentifier",
																													"src": "10491:6:15"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "10484:6:15",
																												"nodeType": "YulIdentifier",
																												"src": "10484:6:15"
																											},
																											"nativeSrc": "10484:14:15",
																											"nodeType": "YulFunctionCall",
																											"src": "10484:14:15"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "10477:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "10477:6:15"
																									},
																									"nativeSrc": "10477:22:15",
																									"nodeType": "YulFunctionCall",
																									"src": "10477:22:15"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "10465:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "10465:3:15"
																							},
																							"nativeSrc": "10465:35:15",
																							"nodeType": "YulFunctionCall",
																							"src": "10465:35:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10456:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "10456:3:15"
																					},
																					"nativeSrc": "10456:45:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10456:45:15"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "10449:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "10449:3:15"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "10378:133:15",
																	"nodeType": "YulCase",
																	"src": "10378:133:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10383:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10383:1:15",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10527:325:15",
																		"nodeType": "YulBlock",
																		"src": "10527:325:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10548:1:15",
																							"nodeType": "YulLiteral",
																							"src": "10548:1:15",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value0",
																							"nativeSrc": "10551:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "10551:6:15"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "10541:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10541:6:15"
																					},
																					"nativeSrc": "10541:17:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10541:17:15"
																				},
																				"nativeSrc": "10541:17:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "10541:17:15"
																			},
																			{
																				"nativeSrc": "10571:33:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10571:33:15",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10596:1:15",
																							"nodeType": "YulLiteral",
																							"src": "10596:1:15",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10599:4:15",
																							"nodeType": "YulLiteral",
																							"src": "10599:4:15",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nativeSrc": "10586:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10586:9:15"
																					},
																					"nativeSrc": "10586:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10586:18:15"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "10575:7:15",
																						"nodeType": "YulTypedName",
																						"src": "10575:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10617:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10617:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10626:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10626:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "10621:1:15",
																						"nodeType": "YulTypedName",
																						"src": "10621:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10696:110:15",
																					"nodeType": "YulBlock",
																					"src": "10696:110:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "10725:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "10725:3:15"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "10730:1:15",
																												"nodeType": "YulIdentifier",
																												"src": "10730:1:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10721:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "10721:3:15"
																										},
																										"nativeSrc": "10721:11:15",
																										"nodeType": "YulFunctionCall",
																										"src": "10721:11:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "10740:7:15",
																												"nodeType": "YulIdentifier",
																												"src": "10740:7:15"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "10734:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "10734:5:15"
																										},
																										"nativeSrc": "10734:14:15",
																										"nodeType": "YulFunctionCall",
																										"src": "10734:14:15"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "10714:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "10714:6:15"
																								},
																								"nativeSrc": "10714:35:15",
																								"nodeType": "YulFunctionCall",
																								"src": "10714:35:15"
																							},
																							"nativeSrc": "10714:35:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "10714:35:15"
																						},
																						{
																							"nativeSrc": "10766:26:15",
																							"nodeType": "YulAssignment",
																							"src": "10766:26:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "10781:7:15",
																										"nodeType": "YulIdentifier",
																										"src": "10781:7:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10790:1:15",
																										"nodeType": "YulLiteral",
																										"src": "10790:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10777:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "10777:3:15"
																								},
																								"nativeSrc": "10777:15:15",
																								"nodeType": "YulFunctionCall",
																								"src": "10777:15:15"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "10766:7:15",
																									"nodeType": "YulIdentifier",
																									"src": "10766:7:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "10651:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "10651:1:15"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "10654:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "10654:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10648:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "10648:2:15"
																					},
																					"nativeSrc": "10648:13:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10648:13:15"
																				},
																				"nativeSrc": "10640:166:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "10662:21:15",
																					"nodeType": "YulBlock",
																					"src": "10662:21:15",
																					"statements": [
																						{
																							"nativeSrc": "10664:17:15",
																							"nodeType": "YulAssignment",
																							"src": "10664:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "10673:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "10673:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10676:4:15",
																										"nodeType": "YulLiteral",
																										"src": "10676:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10669:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "10669:3:15"
																								},
																								"nativeSrc": "10669:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "10669:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "10664:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "10664:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "10644:3:15",
																					"nodeType": "YulBlock",
																					"src": "10644:3:15",
																					"statements": []
																				},
																				"src": "10640:166:15"
																			},
																			{
																				"nativeSrc": "10819:23:15",
																				"nodeType": "YulAssignment",
																				"src": "10819:23:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "10830:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "10830:3:15"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "10835:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "10835:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10826:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "10826:3:15"
																					},
																					"nativeSrc": "10826:16:15",
																					"nodeType": "YulFunctionCall",
																					"src": "10826:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "10819:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "10819:3:15"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "10520:332:15",
																	"nodeType": "YulCase",
																	"src": "10520:332:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10525:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10525:1:15",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "10356:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10356:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10367:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10367:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10352:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10352:3:15"
																},
																"nativeSrc": "10352:17:15",
																"nodeType": "YulFunctionCall",
																"src": "10352:17:15"
															},
															"nativeSrc": "10345:507:15",
															"nodeType": "YulSwitch",
															"src": "10345:507:15"
														},
														{
															"nativeSrc": "10861:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10861:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10883:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10883:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10877:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10877:5:15"
																},
																"nativeSrc": "10877:13:15",
																"nodeType": "YulFunctionCall",
																"src": "10877:13:15"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "10865:8:15",
																	"nodeType": "YulTypedName",
																	"src": "10865:8:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10938:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10938:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10946:4:15",
																				"nodeType": "YulLiteral",
																				"src": "10946:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10934:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10934:3:15"
																		},
																		"nativeSrc": "10934:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10934:17:15"
																	},
																	{
																		"name": "ret",
																		"nativeSrc": "10953:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10953:3:15"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "10958:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "10958:8:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10899:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "10899:34:15"
																},
																"nativeSrc": "10899:68:15",
																"nodeType": "YulFunctionCall",
																"src": "10899:68:15"
															},
															"nativeSrc": "10899:68:15",
															"nodeType": "YulExpressionStatement",
															"src": "10899:68:15"
														},
														{
															"nativeSrc": "10976:25:15",
															"nodeType": "YulAssignment",
															"src": "10976:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nativeSrc": "10987:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10987:3:15"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "10992:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "10992:8:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10983:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10983:3:15"
																},
																"nativeSrc": "10983:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10983:18:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10976:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10976:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10032:975:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10184:3:15",
														"nodeType": "YulTypedName",
														"src": "10184:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10189:6:15",
														"nodeType": "YulTypedName",
														"src": "10189:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10197:6:15",
														"nodeType": "YulTypedName",
														"src": "10197:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10208:3:15",
														"nodeType": "YulTypedName",
														"src": "10208:3:15",
														"type": ""
													}
												],
												"src": "10032:975:15"
											},
											{
												"body": {
													"nativeSrc": "11141:171:15",
													"nodeType": "YulBlock",
													"src": "11141:171:15",
													"statements": [
														{
															"nativeSrc": "11151:26:15",
															"nodeType": "YulAssignment",
															"src": "11151:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11163:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11163:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11174:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11174:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11159:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11159:3:15"
																},
																"nativeSrc": "11159:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11159:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11151:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11151:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11193:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11193:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11208:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11208:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11224:3:15",
																								"nodeType": "YulLiteral",
																								"src": "11224:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11229:1:15",
																								"nodeType": "YulLiteral",
																								"src": "11229:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11220:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "11220:3:15"
																						},
																						"nativeSrc": "11220:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "11220:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11233:1:15",
																						"nodeType": "YulLiteral",
																						"src": "11233:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11216:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11216:3:15"
																				},
																				"nativeSrc": "11216:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11216:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11204:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11204:3:15"
																		},
																		"nativeSrc": "11204:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11204:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11186:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11186:6:15"
																},
																"nativeSrc": "11186:51:15",
																"nodeType": "YulFunctionCall",
																"src": "11186:51:15"
															},
															"nativeSrc": "11186:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "11186:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11257:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11257:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11268:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11268:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11253:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11253:3:15"
																		},
																		"nativeSrc": "11253:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11253:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11277:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11277:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11293:3:15",
																								"nodeType": "YulLiteral",
																								"src": "11293:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11298:1:15",
																								"nodeType": "YulLiteral",
																								"src": "11298:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11289:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "11289:3:15"
																						},
																						"nativeSrc": "11289:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "11289:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11302:1:15",
																						"nodeType": "YulLiteral",
																						"src": "11302:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11285:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "11285:3:15"
																				},
																				"nativeSrc": "11285:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11285:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11273:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11273:3:15"
																		},
																		"nativeSrc": "11273:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11273:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11246:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11246:6:15"
																},
																"nativeSrc": "11246:60:15",
																"nodeType": "YulFunctionCall",
																"src": "11246:60:15"
															},
															"nativeSrc": "11246:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "11246:60:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "11012:300:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11102:9:15",
														"nodeType": "YulTypedName",
														"src": "11102:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11113:6:15",
														"nodeType": "YulTypedName",
														"src": "11113:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11121:6:15",
														"nodeType": "YulTypedName",
														"src": "11121:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11132:4:15",
														"nodeType": "YulTypedName",
														"src": "11132:4:15",
														"type": ""
													}
												],
												"src": "11012:300:15"
											},
											{
												"body": {
													"nativeSrc": "11446:119:15",
													"nodeType": "YulBlock",
													"src": "11446:119:15",
													"statements": [
														{
															"nativeSrc": "11456:26:15",
															"nodeType": "YulAssignment",
															"src": "11456:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11468:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11468:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11479:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11479:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11464:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11464:3:15"
																},
																"nativeSrc": "11464:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11464:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11456:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11456:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11498:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11498:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11509:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11509:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11491:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11491:6:15"
																},
																"nativeSrc": "11491:25:15",
																"nodeType": "YulFunctionCall",
																"src": "11491:25:15"
															},
															"nativeSrc": "11491:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "11491:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11536:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11547:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11532:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:15"
																		},
																		"nativeSrc": "11532:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11552:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11552:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11525:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:15"
																},
																"nativeSrc": "11525:34:15",
																"nodeType": "YulFunctionCall",
																"src": "11525:34:15"
															},
															"nativeSrc": "11525:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "11525:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11317:248:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11407:9:15",
														"nodeType": "YulTypedName",
														"src": "11407:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11418:6:15",
														"nodeType": "YulTypedName",
														"src": "11418:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11426:6:15",
														"nodeType": "YulTypedName",
														"src": "11426:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11437:4:15",
														"nodeType": "YulTypedName",
														"src": "11437:4:15",
														"type": ""
													}
												],
												"src": "11317:248:15"
											},
											{
												"body": {
													"nativeSrc": "11602:95:15",
													"nodeType": "YulBlock",
													"src": "11602:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11619:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11619:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11626:3:15",
																				"nodeType": "YulLiteral",
																				"src": "11626:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11631:10:15",
																				"nodeType": "YulLiteral",
																				"src": "11631:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11622:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11622:3:15"
																		},
																		"nativeSrc": "11622:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11622:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11612:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11612:6:15"
																},
																"nativeSrc": "11612:31:15",
																"nodeType": "YulFunctionCall",
																"src": "11612:31:15"
															},
															"nativeSrc": "11612:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "11612:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11659:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11659:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11662:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11662:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11652:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11652:6:15"
																},
																"nativeSrc": "11652:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11652:15:15"
															},
															"nativeSrc": "11652:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11652:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11683:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11683:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11686:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11686:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11676:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11676:6:15"
																},
																"nativeSrc": "11676:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11676:15:15"
															},
															"nativeSrc": "11676:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11676:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "11570:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11570:127:15"
											},
											{
												"body": {
													"nativeSrc": "11734:95:15",
													"nodeType": "YulBlock",
													"src": "11734:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11751:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11751:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11758:3:15",
																				"nodeType": "YulLiteral",
																				"src": "11758:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11763:10:15",
																				"nodeType": "YulLiteral",
																				"src": "11763:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11754:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11754:3:15"
																		},
																		"nativeSrc": "11754:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11754:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11744:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11744:6:15"
																},
																"nativeSrc": "11744:31:15",
																"nodeType": "YulFunctionCall",
																"src": "11744:31:15"
															},
															"nativeSrc": "11744:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "11744:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11791:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11791:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11794:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11794:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11784:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11784:6:15"
																},
																"nativeSrc": "11784:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11784:15:15"
															},
															"nativeSrc": "11784:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11784:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11815:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11815:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11818:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11818:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11808:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11808:6:15"
																},
																"nativeSrc": "11808:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11808:15:15"
															},
															"nativeSrc": "11808:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11808:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11702:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11702:127:15"
											},
											{
												"body": {
													"nativeSrc": "11881:88:15",
													"nodeType": "YulBlock",
													"src": "11881:88:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11912:22:15",
																"nodeType": "YulBlock",
																"src": "11912:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11914:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "11914:16:15"
																			},
																			"nativeSrc": "11914:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11914:18:15"
																		},
																		"nativeSrc": "11914:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11914:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11897:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11897:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11908:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11908:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11904:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11904:3:15"
																		},
																		"nativeSrc": "11904:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11904:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11894:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "11894:2:15"
																},
																"nativeSrc": "11894:17:15",
																"nodeType": "YulFunctionCall",
																"src": "11894:17:15"
															},
															"nativeSrc": "11891:43:15",
															"nodeType": "YulIf",
															"src": "11891:43:15"
														},
														{
															"nativeSrc": "11943:20:15",
															"nodeType": "YulAssignment",
															"src": "11943:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11954:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11954:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11961:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11961:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11950:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11950:3:15"
																},
																"nativeSrc": "11950:13:15",
																"nodeType": "YulFunctionCall",
																"src": "11950:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11943:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11943:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11834:135:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11863:5:15",
														"nodeType": "YulTypedName",
														"src": "11863:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11873:3:15",
														"nodeType": "YulTypedName",
														"src": "11873:3:15",
														"type": ""
													}
												],
												"src": "11834:135:15"
											},
											{
												"body": {
													"nativeSrc": "12075:102:15",
													"nodeType": "YulBlock",
													"src": "12075:102:15",
													"statements": [
														{
															"nativeSrc": "12085:26:15",
															"nodeType": "YulAssignment",
															"src": "12085:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12097:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12097:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12108:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12108:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12093:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12093:3:15"
																},
																"nativeSrc": "12093:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12093:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12085:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12085:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12127:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12127:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12142:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12142:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12158:3:15",
																								"nodeType": "YulLiteral",
																								"src": "12158:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12163:1:15",
																								"nodeType": "YulLiteral",
																								"src": "12163:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12154:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "12154:3:15"
																						},
																						"nativeSrc": "12154:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "12154:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12167:1:15",
																						"nodeType": "YulLiteral",
																						"src": "12167:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12150:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12150:3:15"
																				},
																				"nativeSrc": "12150:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12150:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12138:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12138:3:15"
																		},
																		"nativeSrc": "12138:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12138:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12120:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12120:6:15"
																},
																"nativeSrc": "12120:51:15",
																"nodeType": "YulFunctionCall",
																"src": "12120:51:15"
															},
															"nativeSrc": "12120:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "12120:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11974:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12044:9:15",
														"nodeType": "YulTypedName",
														"src": "12044:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12055:6:15",
														"nodeType": "YulTypedName",
														"src": "12055:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12066:4:15",
														"nodeType": "YulTypedName",
														"src": "12066:4:15",
														"type": ""
													}
												],
												"src": "11974:203:15"
											},
											{
												"body": {
													"nativeSrc": "12263:437:15",
													"nodeType": "YulBlock",
													"src": "12263:437:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12296:398:15",
																"nodeType": "YulBlock",
																"src": "12296:398:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12317:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12317:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "12320:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "12320:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12310:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12310:6:15"
																			},
																			"nativeSrc": "12310:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12310:16:15"
																		},
																		"nativeSrc": "12310:16:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12310:16:15"
																	},
																	{
																		"nativeSrc": "12339:30:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12339:30:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12361:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12361:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12364:4:15",
																					"nodeType": "YulLiteral",
																					"src": "12364:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "12351:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12351:9:15"
																			},
																			"nativeSrc": "12351:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12351:18:15"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "12343:4:15",
																				"nodeType": "YulTypedName",
																				"src": "12343:4:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12382:57:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12382:57:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "12405:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "12405:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12415:1:15",
																							"nodeType": "YulLiteral",
																							"src": "12415:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "12422:10:15",
																									"nodeType": "YulIdentifier",
																									"src": "12422:10:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12434:2:15",
																									"nodeType": "YulLiteral",
																									"src": "12434:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12418:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "12418:3:15"
																							},
																							"nativeSrc": "12418:19:15",
																							"nodeType": "YulFunctionCall",
																							"src": "12418:19:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "12411:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "12411:3:15"
																					},
																					"nativeSrc": "12411:27:15",
																					"nodeType": "YulFunctionCall",
																					"src": "12411:27:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12401:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "12401:3:15"
																			},
																			"nativeSrc": "12401:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12401:38:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "12386:11:15",
																				"nodeType": "YulTypedName",
																				"src": "12386:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12476:23:15",
																			"nodeType": "YulBlock",
																			"src": "12476:23:15",
																			"statements": [
																				{
																					"nativeSrc": "12478:19:15",
																					"nodeType": "YulAssignment",
																					"src": "12478:19:15",
																					"value": {
																						"name": "data",
																						"nativeSrc": "12493:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "12493:4:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "12478:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "12478:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "12458:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "12458:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12470:4:15",
																					"nodeType": "YulLiteral",
																					"src": "12470:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "12455:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "12455:2:15"
																			},
																			"nativeSrc": "12455:20:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12455:20:15"
																		},
																		"nativeSrc": "12452:47:15",
																		"nodeType": "YulIf",
																		"src": "12452:47:15"
																	},
																	{
																		"nativeSrc": "12512:41:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12512:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "12526:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "12526:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12536:1:15",
																							"nodeType": "YulLiteral",
																							"src": "12536:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "12543:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "12543:3:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12548:2:15",
																									"nodeType": "YulLiteral",
																									"src": "12548:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12539:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "12539:3:15"
																							},
																							"nativeSrc": "12539:12:15",
																							"nodeType": "YulFunctionCall",
																							"src": "12539:12:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "12532:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "12532:3:15"
																					},
																					"nativeSrc": "12532:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "12532:20:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12522:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "12522:3:15"
																			},
																			"nativeSrc": "12522:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12522:31:15"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "12516:2:15",
																				"nodeType": "YulTypedName",
																				"src": "12516:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12566:24:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12566:24:15",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "12579:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "12579:11:15"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "12570:5:15",
																				"nodeType": "YulTypedName",
																				"src": "12570:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12664:20:15",
																			"nodeType": "YulBlock",
																			"src": "12664:20:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12673:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "12673:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12680:1:15",
																								"nodeType": "YulLiteral",
																								"src": "12680:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "12666:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "12666:6:15"
																						},
																						"nativeSrc": "12666:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "12666:16:15"
																					},
																					"nativeSrc": "12666:16:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "12666:16:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12614:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "12614:5:15"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "12621:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "12621:2:15"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "12611:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "12611:2:15"
																			},
																			"nativeSrc": "12611:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12611:13:15"
																		},
																		"nativeSrc": "12603:81:15",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "12625:26:15",
																			"nodeType": "YulBlock",
																			"src": "12625:26:15",
																			"statements": [
																				{
																					"nativeSrc": "12627:22:15",
																					"nodeType": "YulAssignment",
																					"src": "12627:22:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12640:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "12640:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12647:1:15",
																								"nodeType": "YulLiteral",
																								"src": "12647:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "12636:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "12636:3:15"
																						},
																						"nativeSrc": "12636:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "12636:13:15"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "12627:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "12627:5:15"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "12607:3:15",
																			"nodeType": "YulBlock",
																			"src": "12607:3:15",
																			"statements": []
																		},
																		"src": "12603:81:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "12279:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12279:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12284:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12284:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12276:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "12276:2:15"
																},
																"nativeSrc": "12276:11:15",
																"nodeType": "YulFunctionCall",
																"src": "12276:11:15"
															},
															"nativeSrc": "12273:421:15",
															"nodeType": "YulIf",
															"src": "12273:421:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "12182:518:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "12235:5:15",
														"nodeType": "YulTypedName",
														"src": "12235:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12242:3:15",
														"nodeType": "YulTypedName",
														"src": "12242:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "12247:10:15",
														"nodeType": "YulTypedName",
														"src": "12247:10:15",
														"type": ""
													}
												],
												"src": "12182:518:15"
											},
											{
												"body": {
													"nativeSrc": "12790:81:15",
													"nodeType": "YulBlock",
													"src": "12790:81:15",
													"statements": [
														{
															"nativeSrc": "12800:65:15",
															"nodeType": "YulAssignment",
															"src": "12800:65:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "12815:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "12815:4:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12833:1:15",
																										"nodeType": "YulLiteral",
																										"src": "12833:1:15",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "12836:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "12836:3:15"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "12829:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "12829:3:15"
																								},
																								"nativeSrc": "12829:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "12829:11:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12846:1:15",
																										"nodeType": "YulLiteral",
																										"src": "12846:1:15",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "12842:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "12842:3:15"
																								},
																								"nativeSrc": "12842:6:15",
																								"nodeType": "YulFunctionCall",
																								"src": "12842:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "12825:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "12825:3:15"
																						},
																						"nativeSrc": "12825:24:15",
																						"nodeType": "YulFunctionCall",
																						"src": "12825:24:15"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12821:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12821:3:15"
																				},
																				"nativeSrc": "12821:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12821:29:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12811:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12811:3:15"
																		},
																		"nativeSrc": "12811:40:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12811:40:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12857:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12857:1:15",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12860:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "12860:3:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12853:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12853:3:15"
																		},
																		"nativeSrc": "12853:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12853:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12808:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "12808:2:15"
																},
																"nativeSrc": "12808:57:15",
																"nodeType": "YulFunctionCall",
																"src": "12808:57:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12800:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12800:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12705:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12767:4:15",
														"nodeType": "YulTypedName",
														"src": "12767:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12773:3:15",
														"nodeType": "YulTypedName",
														"src": "12773:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12781:4:15",
														"nodeType": "YulTypedName",
														"src": "12781:4:15",
														"type": ""
													}
												],
												"src": "12705:166:15"
											},
											{
												"body": {
													"nativeSrc": "12972:1203:15",
													"nodeType": "YulBlock",
													"src": "12972:1203:15",
													"statements": [
														{
															"nativeSrc": "12982:24:15",
															"nodeType": "YulVariableDeclaration",
															"src": "12982:24:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13002:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13002:3:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12996:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12996:5:15"
																},
																"nativeSrc": "12996:10:15",
																"nodeType": "YulFunctionCall",
																"src": "12996:10:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12986:6:15",
																	"nodeType": "YulTypedName",
																	"src": "12986:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13049:22:15",
																"nodeType": "YulBlock",
																"src": "13049:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "13051:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "13051:16:15"
																			},
																			"nativeSrc": "13051:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13051:18:15"
																		},
																		"nativeSrc": "13051:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13051:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "13021:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13021:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13029:18:15",
																		"nodeType": "YulLiteral",
																		"src": "13029:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13018:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13018:2:15"
																},
																"nativeSrc": "13018:30:15",
																"nodeType": "YulFunctionCall",
																"src": "13018:30:15"
															},
															"nativeSrc": "13015:56:15",
															"nodeType": "YulIf",
															"src": "13015:56:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13124:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "13124:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "13162:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "13162:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "13156:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "13156:5:15"
																				},
																				"nativeSrc": "13156:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13156:11:15"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "13130:25:15",
																			"nodeType": "YulIdentifier",
																			"src": "13130:25:15"
																		},
																		"nativeSrc": "13130:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13130:38:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "13170:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13170:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "13080:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13080:43:15"
																},
																"nativeSrc": "13080:97:15",
																"nodeType": "YulFunctionCall",
																"src": "13080:97:15"
															},
															"nativeSrc": "13080:97:15",
															"nodeType": "YulExpressionStatement",
															"src": "13080:97:15"
														},
														{
															"nativeSrc": "13186:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "13186:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "13203:1:15",
																"nodeType": "YulLiteral",
																"src": "13203:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13190:9:15",
																	"nodeType": "YulTypedName",
																	"src": "13190:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13213:17:15",
															"nodeType": "YulAssignment",
															"src": "13213:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "13226:4:15",
																"nodeType": "YulLiteral",
																"src": "13226:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13213:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "13213:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "13276:642:15",
																		"nodeType": "YulBlock",
																		"src": "13276:642:15",
																		"statements": [
																			{
																				"nativeSrc": "13290:35:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13290:35:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "13309:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "13309:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13321:2:15",
																									"nodeType": "YulLiteral",
																									"src": "13321:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "13317:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "13317:3:15"
																							},
																							"nativeSrc": "13317:7:15",
																							"nodeType": "YulFunctionCall",
																							"src": "13317:7:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "13305:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "13305:3:15"
																					},
																					"nativeSrc": "13305:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "13305:20:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "13294:7:15",
																						"nodeType": "YulTypedName",
																						"src": "13294:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13338:49:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13338:49:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13382:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "13382:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "13352:29:15",
																						"nodeType": "YulIdentifier",
																						"src": "13352:29:15"
																					},
																					"nativeSrc": "13352:35:15",
																					"nodeType": "YulFunctionCall",
																					"src": "13352:35:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "13342:6:15",
																						"nodeType": "YulTypedName",
																						"src": "13342:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13400:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13400:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13409:1:15",
																					"nodeType": "YulLiteral",
																					"src": "13409:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13404:1:15",
																						"nodeType": "YulTypedName",
																						"src": "13404:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13480:165:15",
																					"nodeType": "YulBlock",
																					"src": "13480:165:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13505:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "13505:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "13523:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "13523:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "13528:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "13528:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "13519:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "13519:3:15"
																												},
																												"nativeSrc": "13519:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "13519:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "13513:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "13513:5:15"
																										},
																										"nativeSrc": "13513:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "13513:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13498:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "13498:6:15"
																								},
																								"nativeSrc": "13498:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "13498:42:15"
																							},
																							"nativeSrc": "13498:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "13498:42:15"
																						},
																						{
																							"nativeSrc": "13557:24:15",
																							"nodeType": "YulAssignment",
																							"src": "13557:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13571:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "13571:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13579:1:15",
																										"nodeType": "YulLiteral",
																										"src": "13579:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13567:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "13567:3:15"
																								},
																								"nativeSrc": "13567:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "13567:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "13557:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "13557:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "13598:33:15",
																							"nodeType": "YulAssignment",
																							"src": "13598:33:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "13615:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "13615:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13626:4:15",
																										"nodeType": "YulLiteral",
																										"src": "13626:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13611:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "13611:3:15"
																								},
																								"nativeSrc": "13611:20:15",
																								"nodeType": "YulFunctionCall",
																								"src": "13611:20:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "13598:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "13598:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13434:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "13434:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13437:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "13437:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13431:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "13431:2:15"
																					},
																					"nativeSrc": "13431:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "13431:14:15"
																				},
																				"nativeSrc": "13423:222:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "13446:21:15",
																					"nodeType": "YulBlock",
																					"src": "13446:21:15",
																					"statements": [
																						{
																							"nativeSrc": "13448:17:15",
																							"nodeType": "YulAssignment",
																							"src": "13448:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "13457:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "13457:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13460:4:15",
																										"nodeType": "YulLiteral",
																										"src": "13460:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13453:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "13453:3:15"
																								},
																								"nativeSrc": "13453:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "13453:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "13448:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "13448:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13427:3:15",
																					"nodeType": "YulBlock",
																					"src": "13427:3:15",
																					"statements": []
																				},
																				"src": "13423:222:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "13693:166:15",
																					"nodeType": "YulBlock",
																					"src": "13693:166:15",
																					"statements": [
																						{
																							"nativeSrc": "13711:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13711:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13738:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "13738:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13743:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "13743:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13734:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "13734:3:15"
																										},
																										"nativeSrc": "13734:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "13734:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13728:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "13728:5:15"
																								},
																								"nativeSrc": "13728:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "13728:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13715:9:15",
																									"nodeType": "YulTypedName",
																									"src": "13715:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13778:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "13778:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13790:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "13790:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "13817:1:15",
																																				"nodeType": "YulLiteral",
																																				"src": "13817:1:15",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "13820:6:15",
																																				"nodeType": "YulIdentifier",
																																				"src": "13820:6:15"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "13813:3:15",
																																			"nodeType": "YulIdentifier",
																																			"src": "13813:3:15"
																																		},
																																		"nativeSrc": "13813:14:15",
																																		"nodeType": "YulFunctionCall",
																																		"src": "13813:14:15"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13829:3:15",
																																		"nodeType": "YulLiteral",
																																		"src": "13829:3:15",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "13809:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "13809:3:15"
																																},
																																"nativeSrc": "13809:24:15",
																																"nodeType": "YulFunctionCall",
																																"src": "13809:24:15"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13839:1:15",
																																		"nodeType": "YulLiteral",
																																		"src": "13839:1:15",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "13835:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "13835:3:15"
																																},
																																"nativeSrc": "13835:6:15",
																																"nodeType": "YulFunctionCall",
																																"src": "13835:6:15"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "13805:3:15",
																															"nodeType": "YulIdentifier",
																															"src": "13805:3:15"
																														},
																														"nativeSrc": "13805:37:15",
																														"nodeType": "YulFunctionCall",
																														"src": "13805:37:15"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "13801:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "13801:3:15"
																												},
																												"nativeSrc": "13801:42:15",
																												"nodeType": "YulFunctionCall",
																												"src": "13801:42:15"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "13786:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "13786:3:15"
																										},
																										"nativeSrc": "13786:58:15",
																										"nodeType": "YulFunctionCall",
																										"src": "13786:58:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13771:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "13771:6:15"
																								},
																								"nativeSrc": "13771:74:15",
																								"nodeType": "YulFunctionCall",
																								"src": "13771:74:15"
																							},
																							"nativeSrc": "13771:74:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "13771:74:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13664:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "13664:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13673:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "13673:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13661:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "13661:2:15"
																					},
																					"nativeSrc": "13661:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "13661:19:15"
																				},
																				"nativeSrc": "13658:201:15",
																				"nodeType": "YulIf",
																				"src": "13658:201:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13879:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "13879:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "13893:1:15",
																											"nodeType": "YulLiteral",
																											"src": "13893:1:15",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "13896:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "13896:6:15"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "13889:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "13889:3:15"
																									},
																									"nativeSrc": "13889:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "13889:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13905:1:15",
																									"nodeType": "YulLiteral",
																									"src": "13905:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13885:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "13885:3:15"
																							},
																							"nativeSrc": "13885:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "13885:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13872:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13872:6:15"
																					},
																					"nativeSrc": "13872:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "13872:36:15"
																				},
																				"nativeSrc": "13872:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "13872:36:15"
																			}
																		]
																	},
																	"nativeSrc": "13269:649:15",
																	"nodeType": "YulCase",
																	"src": "13269:649:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13274:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13274:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13935:234:15",
																		"nodeType": "YulBlock",
																		"src": "13935:234:15",
																		"statements": [
																			{
																				"nativeSrc": "13949:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13949:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13962:1:15",
																					"nodeType": "YulLiteral",
																					"src": "13962:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13953:5:15",
																						"nodeType": "YulTypedName",
																						"src": "13953:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13998:67:15",
																					"nodeType": "YulBlock",
																					"src": "13998:67:15",
																					"statements": [
																						{
																							"nativeSrc": "14016:35:15",
																							"nodeType": "YulAssignment",
																							"src": "14016:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "14035:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "14035:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "14040:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "14040:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14031:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "14031:3:15"
																										},
																										"nativeSrc": "14031:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "14031:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14025:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "14025:5:15"
																								},
																								"nativeSrc": "14025:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "14025:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "14016:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "14016:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13979:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "13979:6:15"
																				},
																				"nativeSrc": "13976:89:15",
																				"nodeType": "YulIf",
																				"src": "13976:89:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14085:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "14085:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "14144:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "14144:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "14151:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "14151:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "14091:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "14091:52:15"
																							},
																							"nativeSrc": "14091:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "14091:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "14078:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "14078:6:15"
																					},
																					"nativeSrc": "14078:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "14078:81:15"
																				},
																				"nativeSrc": "14078:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "14078:81:15"
																			}
																		]
																	},
																	"nativeSrc": "13927:242:15",
																	"nodeType": "YulCase",
																	"src": "13927:242:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "13249:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13249:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13257:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13257:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13246:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13246:2:15"
																},
																"nativeSrc": "13246:14:15",
																"nodeType": "YulFunctionCall",
																"src": "13246:14:15"
															},
															"nativeSrc": "13239:930:15",
															"nodeType": "YulSwitch",
															"src": "13239:930:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12876:1299:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12957:4:15",
														"nodeType": "YulTypedName",
														"src": "12957:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12963:3:15",
														"nodeType": "YulTypedName",
														"src": "12963:3:15",
														"type": ""
													}
												],
												"src": "12876:1299:15"
											},
											{
												"body": {
													"nativeSrc": "14365:232:15",
													"nodeType": "YulBlock",
													"src": "14365:232:15",
													"statements": [
														{
															"nativeSrc": "14375:27:15",
															"nodeType": "YulAssignment",
															"src": "14375:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14387:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14387:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14398:3:15",
																		"nodeType": "YulLiteral",
																		"src": "14398:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14383:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14383:3:15"
																},
																"nativeSrc": "14383:19:15",
																"nodeType": "YulFunctionCall",
																"src": "14383:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14375:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14375:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14418:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14418:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14433:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14433:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14449:3:15",
																								"nodeType": "YulLiteral",
																								"src": "14449:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14454:1:15",
																								"nodeType": "YulLiteral",
																								"src": "14454:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14445:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "14445:3:15"
																						},
																						"nativeSrc": "14445:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "14445:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14458:1:15",
																						"nodeType": "YulLiteral",
																						"src": "14458:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14441:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "14441:3:15"
																				},
																				"nativeSrc": "14441:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14441:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14429:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14429:3:15"
																		},
																		"nativeSrc": "14429:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14429:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14411:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14411:6:15"
																},
																"nativeSrc": "14411:51:15",
																"nodeType": "YulFunctionCall",
																"src": "14411:51:15"
															},
															"nativeSrc": "14411:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "14411:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14482:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14482:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14493:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14493:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14478:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14478:3:15"
																		},
																		"nativeSrc": "14478:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14478:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14498:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14498:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14471:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14471:6:15"
																},
																"nativeSrc": "14471:34:15",
																"nodeType": "YulFunctionCall",
																"src": "14471:34:15"
															},
															"nativeSrc": "14471:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "14471:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14525:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14525:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14536:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14536:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14521:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14521:3:15"
																		},
																		"nativeSrc": "14521:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14521:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "14541:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14541:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14514:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14514:6:15"
																},
																"nativeSrc": "14514:34:15",
																"nodeType": "YulFunctionCall",
																"src": "14514:34:15"
															},
															"nativeSrc": "14514:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "14514:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14568:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14568:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14579:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14579:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14564:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14564:3:15"
																		},
																		"nativeSrc": "14564:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14564:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "14584:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14584:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14557:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14557:6:15"
																},
																"nativeSrc": "14557:34:15",
																"nodeType": "YulFunctionCall",
																"src": "14557:34:15"
															},
															"nativeSrc": "14557:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "14557:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14180:417:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14310:9:15",
														"nodeType": "YulTypedName",
														"src": "14310:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14321:6:15",
														"nodeType": "YulTypedName",
														"src": "14321:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14329:6:15",
														"nodeType": "YulTypedName",
														"src": "14329:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14337:6:15",
														"nodeType": "YulTypedName",
														"src": "14337:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14345:6:15",
														"nodeType": "YulTypedName",
														"src": "14345:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14356:4:15",
														"nodeType": "YulTypedName",
														"src": "14356:4:15",
														"type": ""
													}
												],
												"src": "14180:417:15"
											},
											{
												"body": {
													"nativeSrc": "14650:77:15",
													"nodeType": "YulBlock",
													"src": "14650:77:15",
													"statements": [
														{
															"nativeSrc": "14660:16:15",
															"nodeType": "YulAssignment",
															"src": "14660:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14671:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14671:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14674:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14674:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14667:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14667:3:15"
																},
																"nativeSrc": "14667:9:15",
																"nodeType": "YulFunctionCall",
																"src": "14667:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14660:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14660:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14699:22:15",
																"nodeType": "YulBlock",
																"src": "14699:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14701:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "14701:16:15"
																			},
																			"nativeSrc": "14701:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14701:18:15"
																		},
																		"nativeSrc": "14701:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14701:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14691:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14691:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14694:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14694:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14688:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "14688:2:15"
																},
																"nativeSrc": "14688:10:15",
																"nodeType": "YulFunctionCall",
																"src": "14688:10:15"
															},
															"nativeSrc": "14685:36:15",
															"nodeType": "YulIf",
															"src": "14685:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14602:125:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14633:1:15",
														"nodeType": "YulTypedName",
														"src": "14633:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14636:1:15",
														"nodeType": "YulTypedName",
														"src": "14636:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14642:3:15",
														"nodeType": "YulTypedName",
														"src": "14642:3:15",
														"type": ""
													}
												],
												"src": "14602:125:15"
											},
											{
												"body": {
													"nativeSrc": "14961:236:15",
													"nodeType": "YulBlock",
													"src": "14961:236:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14978:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "14978:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14989:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14989:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14971:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14971:6:15"
																},
																"nativeSrc": "14971:21:15",
																"nodeType": "YulFunctionCall",
																"src": "14971:21:15"
															},
															"nativeSrc": "14971:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "14971:21:15"
														},
														{
															"nativeSrc": "15001:70:15",
															"nodeType": "YulVariableDeclaration",
															"src": "15001:70:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15044:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15044:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15056:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15056:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15067:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15067:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15052:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15052:3:15"
																		},
																		"nativeSrc": "15052:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15052:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "15015:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "15015:28:15"
																},
																"nativeSrc": "15015:56:15",
																"nodeType": "YulFunctionCall",
																"src": "15015:56:15"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "15005:6:15",
																	"nodeType": "YulTypedName",
																	"src": "15005:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15091:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15091:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15102:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15102:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15087:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15087:3:15"
																		},
																		"nativeSrc": "15087:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15087:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "15111:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15111:6:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15119:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15119:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15107:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15107:3:15"
																		},
																		"nativeSrc": "15107:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15107:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15080:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15080:6:15"
																},
																"nativeSrc": "15080:50:15",
																"nodeType": "YulFunctionCall",
																"src": "15080:50:15"
															},
															"nativeSrc": "15080:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "15080:50:15"
														},
														{
															"nativeSrc": "15139:52:15",
															"nodeType": "YulAssignment",
															"src": "15139:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15176:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15176:6:15"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "15184:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15184:6:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "15147:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "15147:28:15"
																},
																"nativeSrc": "15147:44:15",
																"nodeType": "YulFunctionCall",
																"src": "15147:44:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15139:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15139:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "14732:465:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14922:9:15",
														"nodeType": "YulTypedName",
														"src": "14922:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14933:6:15",
														"nodeType": "YulTypedName",
														"src": "14933:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14941:6:15",
														"nodeType": "YulTypedName",
														"src": "14941:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14952:4:15",
														"nodeType": "YulTypedName",
														"src": "14952:4:15",
														"type": ""
													}
												],
												"src": "14732:465:15"
											},
											{
												"body": {
													"nativeSrc": "15433:326:15",
													"nodeType": "YulBlock",
													"src": "15433:326:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15450:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15450:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15465:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15465:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15481:3:15",
																								"nodeType": "YulLiteral",
																								"src": "15481:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15486:1:15",
																								"nodeType": "YulLiteral",
																								"src": "15486:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15477:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "15477:3:15"
																						},
																						"nativeSrc": "15477:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "15477:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15490:1:15",
																						"nodeType": "YulLiteral",
																						"src": "15490:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15473:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15473:3:15"
																				},
																				"nativeSrc": "15473:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15473:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15461:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15461:3:15"
																		},
																		"nativeSrc": "15461:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15461:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15443:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15443:6:15"
																},
																"nativeSrc": "15443:51:15",
																"nodeType": "YulFunctionCall",
																"src": "15443:51:15"
															},
															"nativeSrc": "15443:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "15443:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15514:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15514:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15525:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15525:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15510:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15510:3:15"
																		},
																		"nativeSrc": "15510:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15510:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "15534:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15534:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15550:3:15",
																								"nodeType": "YulLiteral",
																								"src": "15550:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15555:1:15",
																								"nodeType": "YulLiteral",
																								"src": "15555:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15546:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "15546:3:15"
																						},
																						"nativeSrc": "15546:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "15546:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15559:1:15",
																						"nodeType": "YulLiteral",
																						"src": "15559:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15542:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15542:3:15"
																				},
																				"nativeSrc": "15542:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15542:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15530:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15530:3:15"
																		},
																		"nativeSrc": "15530:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15530:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15503:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15503:6:15"
																},
																"nativeSrc": "15503:60:15",
																"nodeType": "YulFunctionCall",
																"src": "15503:60:15"
															},
															"nativeSrc": "15503:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "15503:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15583:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15583:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15594:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15594:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15579:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15579:3:15"
																		},
																		"nativeSrc": "15579:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15579:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "15599:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15599:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15572:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15572:6:15"
																},
																"nativeSrc": "15572:34:15",
																"nodeType": "YulFunctionCall",
																"src": "15572:34:15"
															},
															"nativeSrc": "15572:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "15572:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15626:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15626:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15637:2:15",
																				"nodeType": "YulLiteral",
																				"src": "15637:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15622:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15622:3:15"
																		},
																		"nativeSrc": "15622:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15622:18:15"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "15642:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15642:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15615:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15615:6:15"
																},
																"nativeSrc": "15615:34:15",
																"nodeType": "YulFunctionCall",
																"src": "15615:34:15"
															},
															"nativeSrc": "15615:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "15615:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15669:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15669:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15680:3:15",
																				"nodeType": "YulLiteral",
																				"src": "15680:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15665:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15665:3:15"
																		},
																		"nativeSrc": "15665:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15665:19:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15686:3:15",
																		"nodeType": "YulLiteral",
																		"src": "15686:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15658:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15658:6:15"
																},
																"nativeSrc": "15658:32:15",
																"nodeType": "YulFunctionCall",
																"src": "15658:32:15"
															},
															"nativeSrc": "15658:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "15658:32:15"
														},
														{
															"nativeSrc": "15699:54:15",
															"nodeType": "YulAssignment",
															"src": "15699:54:15",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "15725:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15725:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15737:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15737:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15748:3:15",
																				"nodeType": "YulLiteral",
																				"src": "15748:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15733:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15733:3:15"
																		},
																		"nativeSrc": "15733:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15733:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "15707:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "15707:17:15"
																},
																"nativeSrc": "15707:46:15",
																"nodeType": "YulFunctionCall",
																"src": "15707:46:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15699:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15699:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "15202:557:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15370:9:15",
														"nodeType": "YulTypedName",
														"src": "15370:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15381:6:15",
														"nodeType": "YulTypedName",
														"src": "15381:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15389:6:15",
														"nodeType": "YulTypedName",
														"src": "15389:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15397:6:15",
														"nodeType": "YulTypedName",
														"src": "15397:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15405:6:15",
														"nodeType": "YulTypedName",
														"src": "15405:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15413:6:15",
														"nodeType": "YulTypedName",
														"src": "15413:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15424:4:15",
														"nodeType": "YulTypedName",
														"src": "15424:4:15",
														"type": ""
													}
												],
												"src": "15202:557:15"
											},
											{
												"body": {
													"nativeSrc": "15844:169:15",
													"nodeType": "YulBlock",
													"src": "15844:169:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "15890:16:15",
																"nodeType": "YulBlock",
																"src": "15890:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15899:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15899:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15902:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15902:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15892:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15892:6:15"
																			},
																			"nativeSrc": "15892:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15892:12:15"
																		},
																		"nativeSrc": "15892:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15892:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15865:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "15865:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15874:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15874:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15861:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15861:3:15"
																		},
																		"nativeSrc": "15861:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15861:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15886:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15886:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15857:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15857:3:15"
																},
																"nativeSrc": "15857:32:15",
																"nodeType": "YulFunctionCall",
																"src": "15857:32:15"
															},
															"nativeSrc": "15854:52:15",
															"nodeType": "YulIf",
															"src": "15854:52:15"
														},
														{
															"nativeSrc": "15915:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "15915:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15934:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15934:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15928:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15928:5:15"
																},
																"nativeSrc": "15928:16:15",
																"nodeType": "YulFunctionCall",
																"src": "15928:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "15919:5:15",
																	"nodeType": "YulTypedName",
																	"src": "15919:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15977:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15977:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "15953:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "15953:23:15"
																},
																"nativeSrc": "15953:30:15",
																"nodeType": "YulFunctionCall",
																"src": "15953:30:15"
															},
															"nativeSrc": "15953:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "15953:30:15"
														},
														{
															"nativeSrc": "15992:15:15",
															"nodeType": "YulAssignment",
															"src": "15992:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "16002:5:15",
																"nodeType": "YulIdentifier",
																"src": "16002:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "15992:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15992:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "15764:249:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15810:9:15",
														"nodeType": "YulTypedName",
														"src": "15810:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15821:7:15",
														"nodeType": "YulTypedName",
														"src": "15821:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15833:6:15",
														"nodeType": "YulTypedName",
														"src": "15833:6:15",
														"type": ""
													}
												],
												"src": "15764:249:15"
											},
											{
												"body": {
													"nativeSrc": "16349:492:15",
													"nodeType": "YulBlock",
													"src": "16349:492:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16366:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16366:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "16381:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16381:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "16397:3:15",
																								"nodeType": "YulLiteral",
																								"src": "16397:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "16402:1:15",
																								"nodeType": "YulLiteral",
																								"src": "16402:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "16393:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "16393:3:15"
																						},
																						"nativeSrc": "16393:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "16393:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16406:1:15",
																						"nodeType": "YulLiteral",
																						"src": "16406:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "16389:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16389:3:15"
																				},
																				"nativeSrc": "16389:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16389:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16377:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16377:3:15"
																		},
																		"nativeSrc": "16377:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16377:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16359:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16359:6:15"
																},
																"nativeSrc": "16359:51:15",
																"nodeType": "YulFunctionCall",
																"src": "16359:51:15"
															},
															"nativeSrc": "16359:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "16359:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16430:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16430:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16441:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16441:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16426:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16426:3:15"
																		},
																		"nativeSrc": "16426:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16426:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "16450:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16450:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "16466:3:15",
																								"nodeType": "YulLiteral",
																								"src": "16466:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "16471:1:15",
																								"nodeType": "YulLiteral",
																								"src": "16471:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "16462:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "16462:3:15"
																						},
																						"nativeSrc": "16462:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "16462:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16475:1:15",
																						"nodeType": "YulLiteral",
																						"src": "16475:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "16458:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16458:3:15"
																				},
																				"nativeSrc": "16458:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16458:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16446:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16446:3:15"
																		},
																		"nativeSrc": "16446:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16446:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16419:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16419:6:15"
																},
																"nativeSrc": "16419:60:15",
																"nodeType": "YulFunctionCall",
																"src": "16419:60:15"
															},
															"nativeSrc": "16419:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "16419:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16499:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16499:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16510:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16510:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16495:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16495:3:15"
																		},
																		"nativeSrc": "16495:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16495:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16515:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16515:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16488:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16488:6:15"
																},
																"nativeSrc": "16488:31:15",
																"nodeType": "YulFunctionCall",
																"src": "16488:31:15"
															},
															"nativeSrc": "16488:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "16488:31:15"
														},
														{
															"nativeSrc": "16528:71:15",
															"nodeType": "YulVariableDeclaration",
															"src": "16528:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16571:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16571:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16583:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16583:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16594:3:15",
																				"nodeType": "YulLiteral",
																				"src": "16594:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16579:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16579:3:15"
																		},
																		"nativeSrc": "16579:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16579:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "16542:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "16542:28:15"
																},
																"nativeSrc": "16542:57:15",
																"nodeType": "YulFunctionCall",
																"src": "16542:57:15"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "16532:6:15",
																	"nodeType": "YulTypedName",
																	"src": "16532:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16619:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16619:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16630:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16630:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16615:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16615:3:15"
																		},
																		"nativeSrc": "16615:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16615:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "16639:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16639:6:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16647:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16647:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16635:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16635:3:15"
																		},
																		"nativeSrc": "16635:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16635:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16608:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16608:6:15"
																},
																"nativeSrc": "16608:50:15",
																"nodeType": "YulFunctionCall",
																"src": "16608:50:15"
															},
															"nativeSrc": "16608:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "16608:50:15"
														},
														{
															"nativeSrc": "16667:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "16667:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16710:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16710:6:15"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "16718:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16718:6:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "16681:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "16681:28:15"
																},
																"nativeSrc": "16681:44:15",
																"nodeType": "YulFunctionCall",
																"src": "16681:44:15"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "16671:6:15",
																	"nodeType": "YulTypedName",
																	"src": "16671:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16745:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16745:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16756:3:15",
																				"nodeType": "YulLiteral",
																				"src": "16756:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16741:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16741:3:15"
																		},
																		"nativeSrc": "16741:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16741:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "16766:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "16766:6:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16774:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16774:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16762:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16762:3:15"
																		},
																		"nativeSrc": "16762:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16762:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16734:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16734:6:15"
																},
																"nativeSrc": "16734:51:15",
																"nodeType": "YulFunctionCall",
																"src": "16734:51:15"
															},
															"nativeSrc": "16734:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "16734:51:15"
														},
														{
															"nativeSrc": "16794:41:15",
															"nodeType": "YulAssignment",
															"src": "16794:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "16820:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16820:6:15"
																	},
																	{
																		"name": "tail_2",
																		"nativeSrc": "16828:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16828:6:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "16802:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "16802:17:15"
																},
																"nativeSrc": "16802:33:15",
																"nodeType": "YulFunctionCall",
																"src": "16802:33:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16794:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16794:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "16018:823:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16286:9:15",
														"nodeType": "YulTypedName",
														"src": "16286:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "16297:6:15",
														"nodeType": "YulTypedName",
														"src": "16297:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16305:6:15",
														"nodeType": "YulTypedName",
														"src": "16305:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16313:6:15",
														"nodeType": "YulTypedName",
														"src": "16313:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16321:6:15",
														"nodeType": "YulTypedName",
														"src": "16321:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16329:6:15",
														"nodeType": "YulTypedName",
														"src": "16329:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16340:4:15",
														"nodeType": "YulTypedName",
														"src": "16340:4:15",
														"type": ""
													}
												],
												"src": "16018:823:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(length))\n        let array_1 := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, length)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 0x20)\n        }\n        array := array_1\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n        array := allocate_memory(size)\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(length))\n        let array := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(_1, shl(5, length)), 0x20)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, 0x20)\n        }\n        value0 := array\n        let offset_1 := calldataload(add(headStart, 0x20))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value2 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        end := add(ret, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a85760003560e01c80632eb2c2d6116100715780632eb2c2d6146101345780634e1273f414610147578063a22cb46514610167578063d3fc98641461017a578063e985e9c51461018d578063f242432a146101a057600080fd5b8062fdd58e146100ad57806301ffc9a7146100d35780630e89341c146100f65780630febdd49146101165780631c75cfb41461012b575b600080fd5b6100c06100bb366004610cae565b6101b3565b6040519081526020015b60405180910390f35b6100e66100e1366004610cf1565b6101db565b60405190151581526020016100ca565b610109610104366004610d0e565b61022b565b6040516100ca9190610d77565b610129610124366004610d8a565b61030b565b005b6100c060055481565b610129610142366004610f20565b61032d565b61015a610155366004610fd6565b610399565b6040516100ca91906110db565b6101296101753660046110ee565b610466565b61012961018836600461112a565b610475565b6100e661019b366004611195565b6104b8565b6101296101ae3660046111c8565b6104e6565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061020c57506001600160e01b031982166303a24d0760e21b145b806101d557506301ffc9a760e01b6001600160e01b03198316146101d5565b60008181526004602052604081208054606092919061024990611221565b80601f016020809104026020016040519081016040528092919081815260200182805461027590611221565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905060008151116102e0576102db83610545565b610304565b6003816040516020016102f492919061125b565b6040516020818303038152906040525b9392505050565b61032784848484604051806020016040528060008152506104e6565b50505050565b336001600160a01b038616811480159061034e575061034c86826104b8565b155b156103845760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b61039186868686866105d9565b505050505050565b606081518351146103ca5781518351604051635b05999160e01b81526004810192909252602482015260440161037b565b6000835167ffffffffffffffff8111156103e6576103e6610dcc565b60405190808252806020026020018201604052801561040f578160200160208202803683370190505b50905060005b845181101561045e57602080820286010151610439906020808402870101516101b3565b82828151811061044b5761044b6112e1565b6020908102919091010152600101610415565b509392505050565b610471338383610640565b5050565b6104928360055484604051806020016040528060008152506106d6565b61049e60055482610733565b600580549060006104ae8361130d565b9190505550505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b0386168114801590610507575061050586826104b8565b155b156105385760405163711bec9160e11b81526001600160a01b0380831660048301528716602482015260440161037b565b6103918686868686610790565b60606002805461055490611221565b80601f016020809104026020016040519081016040528092919081815260200182805461058090611221565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b50505050509050919050565b6001600160a01b03841661060357604051632bfa23e760e11b81526000600482015260240161037b565b6001600160a01b03851661062c57604051626a0d4560e21b81526000600482015260240161037b565b610639858585858561081e565b5050505050565b6001600160a01b0382166106695760405162ced3e160e81b81526000600482015260240161037b565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661070057604051632bfa23e760e11b81526000600482015260240161037b565b6040805160018082526020820186905281830190815260608201859052608082019092529061039160008784848761081e565b600082815260046020526040902061074b8282611372565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b6107778461022b565b6040516107849190610d77565b60405180910390a25050565b6001600160a01b0384166107ba57604051632bfa23e760e11b81526000600482015260240161037b565b6001600160a01b0385166107e357604051626a0d4560e21b81526000600482015260240161037b565b60408051600180825260208201869052818301908152606082018590526080820190925290610815878784848761081e565b50505050505050565b61082a85858585610871565b6001600160a01b038416156106395782513390600103610863576020848101519084015161085c838989858589610a85565b5050610391565b610391818787878787610ba9565b80518251146108a05781518151604051635b05999160e01b81526004810192909252602482015260440161037b565b3360005b83518110156109a6576020818102858101820151908501909101516001600160a01b03881615610957576000828152602081815260408083206001600160a01b038c16845290915290205481811015610930576040516303dee4c560e01b81526001600160a01b038a16600482015260248101829052604481018390526064810184905260840161037b565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b0387161561099c576000828152602081815260408083206001600160a01b038b16845290915281208054839290610996908490611431565b90915550505b50506001016108a4565b508251600103610a275760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610a18929190918252602082015260400190565b60405180910390a45050610639565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610a76929190611444565b60405180910390a45050505050565b6001600160a01b0384163b156103915760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ac99089908990889088908890600401611472565b6020604051808303816000875af1925050508015610b04575060408051601f3d908101601f19168201909252610b01918101906114b7565b60015b610b6d573d808015610b32576040519150601f19603f3d011682016040523d82523d6000602084013e610b37565b606091505b508051600003610b6557604051632bfa23e760e11b81526001600160a01b038616600482015260240161037b565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b1461081557604051632bfa23e760e11b81526001600160a01b038616600482015260240161037b565b6001600160a01b0384163b156103915760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610bed90899089908890889088906004016114d4565b6020604051808303816000875af1925050508015610c28575060408051601f3d908101601f19168201909252610c25918101906114b7565b60015b610c56573d808015610b32576040519150601f19603f3d011682016040523d82523d6000602084013e610b37565b6001600160e01b0319811663bc197c8160e01b1461081557604051632bfa23e760e11b81526001600160a01b038616600482015260240161037b565b80356001600160a01b0381168114610ca957600080fd5b919050565b60008060408385031215610cc157600080fd5b610cca83610c92565b946020939093013593505050565b6001600160e01b031981168114610cee57600080fd5b50565b600060208284031215610d0357600080fd5b813561030481610cd8565b600060208284031215610d2057600080fd5b5035919050565b60005b83811015610d42578181015183820152602001610d2a565b50506000910152565b60008151808452610d63816020860160208601610d27565b601f01601f19169290920160200192915050565b6020815260006103046020830184610d4b565b60008060008060808587031215610da057600080fd5b610da985610c92565b9350610db760208601610c92565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e0b57610e0b610dcc565b604052919050565b600067ffffffffffffffff821115610e2d57610e2d610dcc565b5060051b60200190565b600082601f830112610e4857600080fd5b8135610e5b610e5682610e13565b610de2565b8082825260208201915060208360051b860101925085831115610e7d57600080fd5b602085015b83811015610e9a578035835260209283019201610e82565b5095945050505050565b60008067ffffffffffffffff841115610ebf57610ebf610dcc565b50601f8301601f1916602001610ed481610de2565b915050828152838383011115610ee957600080fd5b828260208301376000602084830101529392505050565b600082601f830112610f1157600080fd5b61030483833560208501610ea4565b600080600080600060a08688031215610f3857600080fd5b610f4186610c92565b9450610f4f60208701610c92565b9350604086013567ffffffffffffffff811115610f6b57600080fd5b610f7788828901610e37565b935050606086013567ffffffffffffffff811115610f9457600080fd5b610fa088828901610e37565b925050608086013567ffffffffffffffff811115610fbd57600080fd5b610fc988828901610f00565b9150509295509295909350565b60008060408385031215610fe957600080fd5b823567ffffffffffffffff81111561100057600080fd5b8301601f8101851361101157600080fd5b803561101f610e5682610e13565b8082825260208201915060208360051b85010192508783111561104157600080fd5b6020840193505b8284101561106a5761105984610c92565b825260209384019390910190611048565b9450505050602083013567ffffffffffffffff81111561108957600080fd5b61109585828601610e37565b9150509250929050565b600081518084526020840193506020830160005b828110156110d15781518652602095860195909101906001016110b3565b5093949350505050565b602081526000610304602083018461109f565b6000806040838503121561110157600080fd5b61110a83610c92565b91506020830135801515811461111f57600080fd5b809150509250929050565b60008060006060848603121561113f57600080fd5b61114884610c92565b925060208401359150604084013567ffffffffffffffff81111561116b57600080fd5b8401601f8101861361117c57600080fd5b61118b86823560208401610ea4565b9150509250925092565b600080604083850312156111a857600080fd5b6111b183610c92565b91506111bf60208401610c92565b90509250929050565b600080600080600060a086880312156111e057600080fd5b6111e986610c92565b94506111f760208701610c92565b93506040860135925060608601359150608086013567ffffffffffffffff811115610fbd57600080fd5b600181811c9082168061123557607f821691505b60208210810361125557634e487b7160e01b600052602260045260246000fd5b50919050565b600080845461126981611221565b6001821680156112805760018114611295576112c5565b60ff19831686528115158202860193506112c5565b87600052602060002060005b838110156112bd578154888201526001909101906020016112a1565b505081860193505b50505083516112d8818360208801610d27565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161131f5761131f6112f7565b5060010190565b601f82111561136d57806000526020600020601f840160051c8101602085101561134d5750805b601f840160051c820191505b818110156106395760008155600101611359565b505050565b815167ffffffffffffffff81111561138c5761138c610dcc565b6113a08161139a8454611221565b84611326565b6020601f8211600181146113d457600083156113bc5750848201515b600019600385901b1c1916600184901b178455610639565b600084815260208120601f198516915b8281101561140457878501518255602094850194600190920191016113e4565b50848210156114225786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156101d5576101d56112f7565b604081526000611457604083018561109f565b8281036020840152611469818561109f565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906114ac90830184610d4b565b979650505050505050565b6000602082840312156114c957600080fd5b815161030481610cd8565b6001600160a01b0386811682528516602082015260a0604082018190526000906115009083018661109f565b8281036060840152611512818661109f565b905082810360808401526115268185610d4b565b9897505050505050505056fea264697066735822122052fdafcd2ee8d69b5154f76ad2b24e5306494a4397c10692db7c0eb57ef6069b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xD3FC9864 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xFEBDD49 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x1C75CFB4 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x129 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x112A JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x20C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x1D5 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x249 SWAP1 PUSH2 0x1221 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x275 SWAP1 PUSH2 0x1221 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x297 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2E0 JUMPI PUSH2 0x2DB DUP4 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x304 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F4 SWAP3 SWAP2 SWAP1 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x327 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4E6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x34E JUMPI POP PUSH2 0x34C DUP7 DUP3 PUSH2 0x4B8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x391 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x5D9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3CA JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E6 PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x45E JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x439 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x1B3 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x44B JUMPI PUSH2 0x44B PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x415 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x471 CALLER DUP4 DUP4 PUSH2 0x640 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x492 DUP4 PUSH1 0x5 SLOAD DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x49E PUSH1 0x5 SLOAD DUP3 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x4AE DUP4 PUSH2 0x130D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x507 JUMPI POP PUSH2 0x505 DUP7 DUP3 PUSH2 0x4B8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x37B JUMP JUMPDEST PUSH2 0x391 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x554 SWAP1 PUSH2 0x1221 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x580 SWAP1 PUSH2 0x1221 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH2 0x639 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x391 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x74B DUP3 DUP3 PUSH2 0x1372 JUMP JUMPDEST POP DUP2 PUSH32 0x6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B PUSH2 0x777 DUP5 PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x815 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x81E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x82A DUP6 DUP6 DUP6 DUP6 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x639 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x863 JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x85C DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xA85 JUMP JUMPDEST POP POP PUSH2 0x391 JUMP JUMPDEST PUSH2 0x391 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xBA9 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x8A0 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x37B JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x957 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x996 SWAP1 DUP5 SWAP1 PUSH2 0x1431 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x8A4 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0xA27 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA18 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x639 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA76 SWAP3 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAC9 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1472 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB04 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB01 SWAP2 DUP2 ADD SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB6D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB32 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB65 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xBED SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC28 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC25 SWAP2 DUP2 ADD SWAP1 PUSH2 0x14B7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC56 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB32 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x815 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x37B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCA DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x304 DUP2 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD42 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD2A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD63 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x304 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA9 DUP6 PUSH2 0xC92 JUMP JUMPDEST SWAP4 POP PUSH2 0xDB7 PUSH1 0x20 DUP7 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE0B JUMPI PUSH2 0xE0B PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE2D JUMPI PUSH2 0xE2D PUSH2 0xDCC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE5B PUSH2 0xE56 DUP3 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE9A JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xE82 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBF PUSH2 0xDCC JUMP JUMPDEST POP PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xED4 DUP2 PUSH2 0xDE2 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0xEE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x304 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF41 DUP7 PUSH2 0xC92 JUMP JUMPDEST SWAP5 POP PUSH2 0xF4F PUSH1 0x20 DUP8 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF77 DUP9 DUP3 DUP10 ADD PUSH2 0xE37 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA0 DUP9 DUP3 DUP10 ADD PUSH2 0xE37 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC9 DUP9 DUP3 DUP10 ADD PUSH2 0xF00 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1011 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x101F PUSH2 0xE56 DUP3 PUSH2 0xE13 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 DUP4 GT ISZERO PUSH2 0x1041 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x106A JUMPI PUSH2 0x1059 DUP5 PUSH2 0xC92 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1048 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1089 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1095 DUP6 DUP3 DUP7 ADD PUSH2 0xE37 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x10D1 JUMPI DUP2 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10B3 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x304 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x110A DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x111F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x113F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1148 DUP5 PUSH2 0xC92 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x116B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x117C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118B DUP7 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xEA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B1 DUP4 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH2 0x11BF PUSH1 0x20 DUP5 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E9 DUP7 PUSH2 0xC92 JUMP JUMPDEST SWAP5 POP PUSH2 0x11F7 PUSH1 0x20 DUP8 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1235 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1255 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x1269 DUP2 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 DUP3 AND DUP1 ISZERO PUSH2 0x1280 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1295 JUMPI PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x12C5 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12BD JUMPI DUP2 SLOAD DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x12A1 JUMP JUMPDEST POP POP DUP2 DUP7 ADD SWAP4 POP JUMPDEST POP POP POP DUP4 MLOAD PUSH2 0x12D8 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD27 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x131F JUMPI PUSH2 0x131F PUSH2 0x12F7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x136D JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x134D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1359 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x138C JUMPI PUSH2 0x138C PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x13A0 DUP2 PUSH2 0x139A DUP5 SLOAD PUSH2 0x1221 JUMP JUMPDEST DUP5 PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x13BC JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1404 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x13E4 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1422 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1D5 JUMPI PUSH2 0x1D5 PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1457 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x109F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1469 DUP2 DUP6 PUSH2 0x109F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14AC SWAP1 DUP4 ADD DUP5 PUSH2 0xD4B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x304 DUP2 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1500 SWAP1 DUP4 ADD DUP7 PUSH2 0x109F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1512 DUP2 DUP7 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1526 DUP2 DUP6 PUSH2 0xD4B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE REVERT 0xAF 0xCD 0x2E 0xE8 0xD6 SWAP12 MLOAD SLOAD 0xF7 PUSH11 0xD2B24E5306494A4397C106 SWAP3 0xDB PUSH29 0xEB57EF6069B64736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "249:475:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:1;;;;;;:::i;:::-;;:::i;:::-;;;643:25:15;;;631:2;616:18;2247:132:1;;;;;;;;1380:305;;;;;;:::i;:::-;;:::i;:::-;;;1230:14:15;;1223:22;1205:41;;1193:2;1178:18;1380:305:1;1065:187:15;1331:332:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;566:156:14:-;;;;;;:::i;:::-;;:::i;:::-;;326:24;;;;;;4014:429:1;;;;;;:::i;:::-;;:::i;2536:552::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3156:144::-;;;;;;:::i;:::-;;:::i;357:203:14:-;;;;;;:::i;:::-;;:::i;3367:157:1:-;;;;;;:::i;:::-;;:::i;3591:351::-;;;;;;:::i;:::-;;:::i;2247:132::-;2324:7;2350:13;;;;;;;;;;;-1:-1:-1;;;;;2350:22:1;;;;;;;;;;2247:132;;;;;:::o;1380:305::-;1482:4;-1:-1:-1;;;;;;1517:41:1;;-1:-1:-1;;;1517:41:1;;:109;;-1:-1:-1;;;;;;;1574:52:1;;-1:-1:-1;;;1574:52:1;1517:109;:161;;;-1:-1:-1;;;;;;;;;;861:40:10;;;1642:36:1;762:146:10;1331:332:4;1424:22;1449:19;;;:10;:19;;;;;1424:44;;1399:13;;1424:22;1449:19;1424:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1598:1;1579:8;1573:22;:26;:83;;1638:18;1648:7;1638:9;:18::i;:::-;1573:83;;;1616:8;1626;1602:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1573:83;1566:90;1331:332;-1:-1:-1;;;1331:332:4:o;566:156:14:-;665:50;688:4;695:2;700;705:5;665:50;;;;;;;;;;;;:22;:50::i;:::-;566:156;;;;:::o;4014:429:1:-;735:10:7;-1:-1:-1;;;;;4251:14:1;;;;;;;:49;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4323:42;;-1:-1:-1;;;4323:42:1;;-1:-1:-1;;;;;11204:32:15;;;4323:42:1;;;11186:51:15;11273:32;;11253:18;;;11246:60;11159:18;;4323:42:1;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:10;;2782:15;;2744:54;;-1:-1:-1;;;2744:54:1;;;;;11491:25:15;;;;11532:18;;;11525:34;11464:18;;2744:54:1;11317:248:15;2688:121:1;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2852:30:1;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;4777:4:6;4768:14;;;4748:35;;;4742:42;2972:68:1;;4777:4:6;4768:14;;;4748:35;;;4742:42;2247:132:1;:::i;2972:68::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2934:3;;2893:158;;;-1:-1:-1;3068:13:1;2536:552;-1:-1:-1;;;2536:552:1:o;3156:144::-;3241:52;735:10:7;3274:8:1;3284;3241:18;:52::i;:::-;3156:144;;:::o;357:203:14:-;467:32;473:2;477:9;;488:6;467:32;;;;;;;;;;;;:5;:32::i;:::-;509:23;517:9;;528:3;509:7;:23::i;:::-;542:9;:11;;;:9;:11;;;:::i;:::-;;;;;;357:203;;;:::o;3367:157:1:-;-1:-1:-1;;;;;3480:27:1;;;3457:4;3480:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3367:157::o;3591:351::-;735:10:7;-1:-1:-1;;;;;3757:14:1;;;;;;;:49;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3829:42;;-1:-1:-1;;;3829:42:1;;-1:-1:-1;;;;;11204:32:15;;;3829:42:1;;;11186:51:15;11273:32;;11253:18;;;11246:60;11159:18;;3829:42:1;11012:300:15;3753:129:1;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;2084:103::-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;9015:445::-;-1:-1:-1;;;;;9208:16:1;;9204:88;;9247:34;;-1:-1:-1;;;9247:34:1;;9278:1;9247:34;;;12120:51:15;12093:18;;9247:34:1;11974:203:15;9204:88:1;-1:-1:-1;;;;;9305:18:1;;9301:88;;9346:32;;-1:-1:-1;;;9346:32:1;;9375:1;9346:32;;;12120:51:15;12093:18;;9346:32:1;11974:203:15;9301:88:1;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;13268:315::-;-1:-1:-1;;;;;13375:22:1;;13371:94;;13420:34;;-1:-1:-1;;;13420:34:1;;13451:1;13420:34;;;12120:51:15;12093:18;;13420:34:1;11974:203:15;13371:94:1;-1:-1:-1;;;;;13474:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13474:46:1;;;;;;;;;;13535:41;;1205::15;;;13535::1;;1178:18:15;13535:41:1;;;;;;;13268:315;;;:::o;10746:346::-;-1:-1:-1;;;;;10842:16:1;;10838:88;;10881:34;;-1:-1:-1;;;10881:34:1;;10912:1;10881:34;;;12120:51:15;12093:18;;10881:34:1;11974:203:15;10838:88:1;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;16895:17;;;16882:31;;;16368:11;11024:61;-1:-1:-1;11063:2:1;16368:11;16692:17;11080:4;11024:26;:61::i;1743:163:4:-;1828:19;;;;:10;:19;;;;;:30;1850:8;1828:19;:30;:::i;:::-;;1891:7;1873:26;1877:12;1881:7;1877:3;:12::i;:::-;1873:26;;;;;;:::i;:::-;;;;;;;;1743:163;;:::o;8151:463:1:-;-1:-1:-1;;;;;8273:16:1;;8269:88;;8312:34;;-1:-1:-1;;;8312:34:1;;8343:1;8312:34;;;12120:51:15;12093:18;;8312:34:1;11974:203:15;8269:88:1;-1:-1:-1;;;;;8370:18:1;;8366:88;;8411:32;;-1:-1:-1;;;8411:32:1;;8440:1;8411:32;;;12120:51:15;12093:18;;8411:32:1;11974:203:15;8366:88:1;16374:4;16368:11;;16444:1;16429:17;;;16575:4;16563:17;;16556:35;;;16692:17;;;16722;;;16188:23;16759:17;;16752:35;;;16895:17;;;16882:31;;;16368:11;8552:55;8579:4;8585:2;16368:11;16692:17;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;-1:-1:-1;;;;;7249:16:1;;;7245:443;;7330:10;;735::7;;7344:1:1;7330:15;7326:352;;4777:4:6;4748:35;;;4742:42;4748:35;;;4742:42;7483:67:1;7514:8;7524:4;7530:2;4742:42:6;;7545:4:1;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:10;;5353:13;;5315:52;;-1:-1:-1;;;5315:52:1;;;;;11491:25:15;;;;11532:18;;;11525:34;11464:18;;5315:52:1;11317:248:15;5261:117:1;735:10:7;5388:16:1;5430:691;5454:3;:10;5450:1;:14;5430:691;;;4777:4:6;4768:14;;;4748:35;;;;;4742:42;4748:35;;;;;;4742:42;-1:-1:-1;;;;;5600:18:1;;;5596:420;;5638:19;5660:13;;;;;;;;;;;-1:-1:-1;;;;;5660:19:1;;;;;;;;;;5701;;;5697:129;;;5751:56;;-1:-1:-1;;;5751:56:1;;-1:-1:-1;;;;;14429:32:15;;5751:56:1;;;14411:51:15;14478:18;;;14471:34;;;14521:18;;;14514:34;;;14564:18;;;14557:34;;;14383:19;;5751:56:1;14180:417:15;5697:129:1;5942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5942:19:1;;;;;;;;;5964;;;;5942:41;;5596:420;-1:-1:-1;;;;;6034:16:1;;;6030:81;;6070:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6070:17:1;;;;;;;;;:26;;6091:5;;6070:9;:26;;6091:5;;6070:26;:::i;:::-;;;;-1:-1:-1;;6030:81:1;-1:-1:-1;;5466:3:1;;5430:691;;;;6135:3;:10;6149:1;6135:15;6131:288;;4777:4:6;4748:35;;4742:42;6166:10:1;;4777:4:6;4748:35;;4742:42;6166:38:1;;-1:-1:-1;6312:2:1;-1:-1:-1;;;;;6281:45:1;6306:4;-1:-1:-1;;;;;6281:45:1;6296:8;-1:-1:-1;;;;;6281:45:1;;6316:2;6320:5;6281:45;;;;;;11491:25:15;;;11547:2;11532:18;;11525:34;11479:2;11464:18;;11317:248;6281:45:1;;;;;;;;6152:185;;6131:288;;;6392:2;-1:-1:-1;;;;;6362:46:1;6386:4;-1:-1:-1;;;;;6362:46:1;6376:8;-1:-1:-1;;;;;6362:46:1;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;5251:1174;5144:1281;;;;:::o;13761:974::-;-1:-1:-1;;;;;13967:14:1;;;:18;13963:766;;14005:71;;-1:-1:-1;;;14005:71:1;;-1:-1:-1;;;;;14005:38:1;;;;;:71;;14044:8;;14054:4;;14060:2;;14064:5;;14071:4;;14005:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14005:71:1;;;;;;;;-1:-1:-1;;14005:71:1;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14360:6;:13;14377:1;14360:18;14356:349;;14464:26;;-1:-1:-1;;;14464:26:1;;-1:-1:-1;;;;;12138:32:15;;14464:26:1;;;12120:51:15;12093:18;;14464:26:1;11974:203:15;14356:349:1;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;-1:-1:-1;;;;;;14125:55:1;;-1:-1:-1;;;14125:55:1;14121:174;;14250:26;;-1:-1:-1;;;14250:26:1;;-1:-1:-1;;;;;12138:32:15;;14250:26:1;;;12120:51:15;12093:18;;14250:26:1;11974:203:15;14923:1041:1;-1:-1:-1;;;;;15154:14:1;;;:18;15150:808;;15192:78;;-1:-1:-1;;;15192:78:1;;-1:-1:-1;;;;;15192:43:1;;;;;:78;;15236:8;;15246:4;;15252:3;;15257:6;;15265:4;;15192:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15192:78:1;;;;;;;;-1:-1:-1;;15192:78:1;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15349:60:1;;-1:-1:-1;;;15349:60:1;15345:179;;15479:26;;-1:-1:-1;;;15479:26:1;;-1:-1:-1;;;;;12138:32:15;;15479:26:1;;;12120:51:15;12093:18;;15479:26:1;11974:203:15;14:173;82:20;;-1:-1:-1;;;;;131:31:15;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:300::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;458:2;443:18;;;;430:32;;-1:-1:-1;;;192:300:15:o;679:131::-;-1:-1:-1;;;;;;753:32:15;;743:43;;733:71;;800:1;797;790:12;733:71;679:131;:::o;815:245::-;873:6;926:2;914:9;905:7;901:23;897:32;894:52;;;942:1;939;932:12;894:52;981:9;968:23;1000:30;1024:5;1000:30;:::i;1257:226::-;1316:6;1369:2;1357:9;1348:7;1344:23;1340:32;1337:52;;;1385:1;1382;1375:12;1337:52;-1:-1:-1;1430:23:15;;1257:226;-1:-1:-1;1257:226:15:o;1488:250::-;1573:1;1583:113;1597:6;1594:1;1591:13;1583:113;;;1673:11;;;1667:18;1654:11;;;1647:39;1619:2;1612:10;1583:113;;;-1:-1:-1;;1730:1:15;1712:16;;1705:27;1488:250::o;1743:271::-;1785:3;1823:5;1817:12;1850:6;1845:3;1838:19;1866:76;1935:6;1928:4;1923:3;1919:14;1912:4;1905:5;1901:16;1866:76;:::i;:::-;1996:2;1975:15;-1:-1:-1;;1971:29:15;1962:39;;;;2003:4;1958:50;;1743:271;-1:-1:-1;;1743:271:15:o;2019:220::-;2168:2;2157:9;2150:21;2131:4;2188:45;2229:2;2218:9;2214:18;2206:6;2188:45;:::i;2244:495::-;2330:6;2338;2346;2354;2407:3;2395:9;2386:7;2382:23;2378:33;2375:53;;;2424:1;2421;2414:12;2375:53;2447:29;2466:9;2447:29;:::i;:::-;2437:39;;2495:38;2529:2;2518:9;2514:18;2495:38;:::i;:::-;2244:495;;2485:48;;-1:-1:-1;;;;2602:2:15;2587:18;;2574:32;;2703:2;2688:18;2675:32;;2244:495::o;2744:127::-;2805:10;2800:3;2796:20;2793:1;2786:31;2836:4;2833:1;2826:15;2860:4;2857:1;2850:15;2876:275;2947:2;2941:9;3012:2;2993:13;;-1:-1:-1;;2989:27:15;2977:40;;3047:18;3032:34;;3068:22;;;3029:62;3026:88;;;3094:18;;:::i;:::-;3130:2;3123:22;2876:275;;-1:-1:-1;2876:275:15:o;3156:183::-;3216:4;3249:18;3241:6;3238:30;3235:56;;;3271:18;;:::i;:::-;-1:-1:-1;3316:1:15;3312:14;3328:4;3308:25;;3156:183::o;3344:723::-;3398:5;3451:3;3444:4;3436:6;3432:17;3428:27;3418:55;;3469:1;3466;3459:12;3418:55;3509:6;3496:20;3536:64;3552:47;3592:6;3552:47;:::i;:::-;3536:64;:::i;:::-;3624:3;3648:6;3643:3;3636:19;3680:4;3675:3;3671:14;3664:21;;3741:4;3731:6;3728:1;3724:14;3716:6;3712:27;3708:38;3694:52;;3769:3;3761:6;3758:15;3755:35;;;3786:1;3783;3776:12;3755:35;3822:4;3814:6;3810:17;3836:200;3852:6;3847:3;3844:15;3836:200;;;3944:17;;3974:18;;4021:4;4012:14;;;;3869;3836:200;;;-1:-1:-1;4054:7:15;3344:723;-1:-1:-1;;;;;3344:723:15:o;4072:449::-;4136:5;4168:1;4192:18;4184:6;4181:30;4178:56;;;4214:18;;:::i;:::-;-1:-1:-1;4280:2:15;4259:15;;-1:-1:-1;;4255:29:15;4286:4;4251:40;4309:21;4251:40;4309:21;:::i;:::-;4300:30;;;4353:6;4346:5;4339:21;4393:3;4384:6;4379:3;4375:16;4372:25;4369:45;;;4410:1;4407;4400:12;4369:45;4459:6;4454:3;4447:4;4440:5;4436:16;4423:43;4513:1;4506:4;4497:6;4490:5;4486:18;4482:29;4475:40;4072:449;;;;;:::o;4526:220::-;4568:5;4621:3;4614:4;4606:6;4602:17;4598:27;4588:55;;4639:1;4636;4629:12;4588:55;4661:79;4736:3;4727:6;4714:20;4707:4;4699:6;4695:17;4661:79;:::i;4751:954::-;4905:6;4913;4921;4929;4937;4990:3;4978:9;4969:7;4965:23;4961:33;4958:53;;;5007:1;5004;4997:12;4958:53;5030:29;5049:9;5030:29;:::i;:::-;5020:39;;5078:38;5112:2;5101:9;5097:18;5078:38;:::i;:::-;5068:48;;5167:2;5156:9;5152:18;5139:32;5194:18;5186:6;5183:30;5180:50;;;5226:1;5223;5216:12;5180:50;5249:61;5302:7;5293:6;5282:9;5278:22;5249:61;:::i;:::-;5239:71;;;5363:2;5352:9;5348:18;5335:32;5392:18;5382:8;5379:32;5376:52;;;5424:1;5421;5414:12;5376:52;5447:63;5502:7;5491:8;5480:9;5476:24;5447:63;:::i;:::-;5437:73;;;5563:3;5552:9;5548:19;5535:33;5593:18;5583:8;5580:32;5577:52;;;5625:1;5622;5615:12;5577:52;5648:51;5691:7;5680:8;5669:9;5665:24;5648:51;:::i;:::-;5638:61;;;4751:954;;;;;;;;:::o;5710:1146::-;5828:6;5836;5889:2;5877:9;5868:7;5864:23;5860:32;5857:52;;;5905:1;5902;5895:12;5857:52;5945:9;5932:23;5978:18;5970:6;5967:30;5964:50;;;6010:1;6007;6000:12;5964:50;6033:22;;6086:4;6078:13;;6074:27;-1:-1:-1;6064:55:15;;6115:1;6112;6105:12;6064:55;6155:2;6142:16;6178:64;6194:47;6234:6;6194:47;:::i;6178:64::-;6264:3;6288:6;6283:3;6276:19;6320:4;6315:3;6311:14;6304:21;;6377:4;6367:6;6364:1;6360:14;6356:2;6352:23;6348:34;6334:48;;6405:7;6397:6;6394:19;6391:39;;;6426:1;6423;6416:12;6391:39;6458:4;6454:2;6450:13;6439:24;;6472:152;6488:6;6483:3;6480:15;6472:152;;;6556:23;6575:3;6556:23;:::i;:::-;6544:36;;6609:4;6505:14;;;;6600;;;;6472:152;;;6643:5;-1:-1:-1;;;;6701:4:15;6686:20;;6673:34;6732:18;6719:32;;6716:52;;;6764:1;6761;6754:12;6716:52;6787:63;6842:7;6831:8;6820:9;6816:24;6787:63;:::i;:::-;6777:73;;;5710:1146;;;;;:::o;6861:420::-;6914:3;6952:5;6946:12;6979:6;6974:3;6967:19;7011:4;7006:3;7002:14;6995:21;;7050:4;7043:5;7039:16;7073:1;7083:173;7097:6;7094:1;7091:13;7083:173;;;7158:13;;7146:26;;7201:4;7192:14;;;;7229:17;;;;7119:1;7112:9;7083:173;;;-1:-1:-1;7272:3:15;;6861:420;-1:-1:-1;;;;6861:420:15:o;7286:261::-;7465:2;7454:9;7447:21;7428:4;7485:56;7537:2;7526:9;7522:18;7514:6;7485:56;:::i;7552:347::-;7617:6;7625;7678:2;7666:9;7657:7;7653:23;7649:32;7646:52;;;7694:1;7691;7684:12;7646:52;7717:29;7736:9;7717:29;:::i;:::-;7707:39;;7796:2;7785:9;7781:18;7768:32;7843:5;7836:13;7829:21;7822:5;7819:32;7809:60;;7865:1;7862;7855:12;7809:60;7888:5;7878:15;;;7552:347;;;;;:::o;7904:638::-;7991:6;7999;8007;8060:2;8048:9;8039:7;8035:23;8031:32;8028:52;;;8076:1;8073;8066:12;8028:52;8099:29;8118:9;8099:29;:::i;:::-;8089:39;-1:-1:-1;8197:2:15;8182:18;;8169:32;;-1:-1:-1;8276:2:15;8261:18;;8248:32;8303:18;8292:30;;8289:50;;;8335:1;8332;8325:12;8289:50;8358:22;;8411:4;8403:13;;8399:27;-1:-1:-1;8389:55:15;;8440:1;8437;8430:12;8389:55;8463:73;8528:7;8523:2;8510:16;8505:2;8501;8497:11;8463:73;:::i;:::-;8453:83;;;7904:638;;;;;:::o;8547:260::-;8615:6;8623;8676:2;8664:9;8655:7;8651:23;8647:32;8644:52;;;8692:1;8689;8682:12;8644:52;8715:29;8734:9;8715:29;:::i;:::-;8705:39;;8763:38;8797:2;8786:9;8782:18;8763:38;:::i;:::-;8753:48;;8547:260;;;;;:::o;8812:704::-;8916:6;8924;8932;8940;8948;9001:3;8989:9;8980:7;8976:23;8972:33;8969:53;;;9018:1;9015;9008:12;8969:53;9041:29;9060:9;9041:29;:::i;:::-;9031:39;;9089:38;9123:2;9112:9;9108:18;9089:38;:::i;:::-;9079:48;-1:-1:-1;9196:2:15;9181:18;;9168:32;;-1:-1:-1;9297:2:15;9282:18;;9269:32;;-1:-1:-1;9378:3:15;9363:19;;9350:33;9406:18;9395:30;;9392:50;;;9438:1;9435;9428:12;9521:380;9600:1;9596:12;;;;9643;;;9664:61;;9718:4;9710:6;9706:17;9696:27;;9664:61;9771:2;9763:6;9760:14;9740:18;9737:38;9734:161;;9817:10;9812:3;9808:20;9805:1;9798:31;9852:4;9849:1;9842:15;9880:4;9877:1;9870:15;9734:161;;9521:380;;;:::o;10032:975::-;10208:3;10237:1;10270:6;10264:13;10300:36;10326:9;10300:36;:::i;:::-;10367:1;10352:17;;10378:133;;;;10525:1;10520:332;;;;10345:507;;10378:133;-1:-1:-1;;10411:24:15;;10399:37;;10484:14;;10477:22;10465:35;;10456:45;;;-1:-1:-1;10378:133:15;;10520:332;10551:6;10548:1;10541:17;10599:4;10596:1;10586:18;10626:1;10640:166;10654:6;10651:1;10648:13;10640:166;;;10734:14;;10721:11;;;10714:35;10790:1;10777:15;;;;10676:4;10669:12;10640:166;;;10644:3;;10835:6;10830:3;10826:16;10819:23;;10345:507;;;;10883:6;10877:13;10899:68;10958:8;10953:3;10946:4;10938:6;10934:17;10899:68;:::i;:::-;10983:18;;10032:975;-1:-1:-1;;;;10032:975:15:o;11570:127::-;11631:10;11626:3;11622:20;11619:1;11612:31;11662:4;11659:1;11652:15;11686:4;11683:1;11676:15;11702:127;11763:10;11758:3;11754:20;11751:1;11744:31;11794:4;11791:1;11784:15;11818:4;11815:1;11808:15;11834:135;11873:3;11894:17;;;11891:43;;11914:18;;:::i;:::-;-1:-1:-1;11961:1:15;11950:13;;11834:135::o;12182:518::-;12284:2;12279:3;12276:11;12273:421;;;12320:5;12317:1;12310:16;12364:4;12361:1;12351:18;12434:2;12422:10;12418:19;12415:1;12411:27;12405:4;12401:38;12470:4;12458:10;12455:20;12452:47;;;-1:-1:-1;12493:4:15;12452:47;12548:2;12543:3;12539:12;12536:1;12532:20;12526:4;12522:31;12512:41;;12603:81;12621:2;12614:5;12611:13;12603:81;;;12680:1;12666:16;;12647:1;12636:13;12603:81;;12273:421;12182:518;;;:::o;12876:1299::-;13002:3;12996:10;13029:18;13021:6;13018:30;13015:56;;;13051:18;;:::i;:::-;13080:97;13170:6;13130:38;13162:4;13156:11;13130:38;:::i;:::-;13124:4;13080:97;:::i;:::-;13226:4;13257:2;13246:14;;13274:1;13269:649;;;;13962:1;13979:6;13976:89;;;-1:-1:-1;14031:19:15;;;14025:26;13976:89;-1:-1:-1;;12833:1:15;12829:11;;;12825:24;12821:29;12811:40;12857:1;12853:11;;;12808:57;14078:81;;13239:930;;13269:649;9979:1;9972:14;;;10016:4;10003:18;;-1:-1:-1;;13305:20:15;;;13423:222;13437:7;13434:1;13431:14;13423:222;;;13519:19;;;13513:26;13498:42;;13626:4;13611:20;;;;13579:1;13567:14;;;;13453:12;13423:222;;;13427:3;13673:6;13664:7;13661:19;13658:201;;;13734:19;;;13728:26;-1:-1:-1;;13817:1:15;13813:14;;;13829:3;13809:24;13805:37;13801:42;13786:58;13771:74;;13658:201;-1:-1:-1;;;;13905:1:15;13889:14;;;13885:22;13872:36;;-1:-1:-1;12876:1299:15:o;14602:125::-;14667:9;;;14688:10;;;14685:36;;;14701:18;;:::i;14732:465::-;14989:2;14978:9;14971:21;14952:4;15015:56;15067:2;15056:9;15052:18;15044:6;15015:56;:::i;:::-;15119:9;15111:6;15107:22;15102:2;15091:9;15087:18;15080:50;15147:44;15184:6;15176;15147:44;:::i;:::-;15139:52;14732:465;-1:-1:-1;;;;;14732:465:15:o;15202:557::-;-1:-1:-1;;;;;15461:32:15;;;15443:51;;15530:32;;15525:2;15510:18;;15503:60;15594:2;15579:18;;15572:34;;;15637:2;15622:18;;15615:34;;;15481:3;15680;15665:19;;15658:32;;;-1:-1:-1;;15707:46:15;;15733:19;;15725:6;15707:46;:::i;:::-;15699:54;15202:557;-1:-1:-1;;;;;;;15202:557:15:o;15764:249::-;15833:6;15886:2;15874:9;15865:7;15861:23;15857:32;15854:52;;;15902:1;15899;15892:12;15854:52;15934:9;15928:16;15953:30;15977:5;15953:30;:::i;16018:823::-;-1:-1:-1;;;;;16377:32:15;;;16359:51;;16446:32;;16441:2;16426:18;;16419:60;16397:3;16510:2;16495:18;;16488:31;;;-1:-1:-1;;16542:57:15;;16579:19;;16571:6;16542:57;:::i;:::-;16647:9;16639:6;16635:22;16630:2;16619:9;16615:18;16608:50;16681:44;16718:6;16710;16681:44;:::i;:::-;16667:58;;16774:9;16766:6;16762:22;16756:3;16745:9;16741:19;16734:51;16802:33;16828:6;16820;16802:33;:::i;:::-;16794:41;16018:823;-1:-1:-1;;;;;;;;16018:823:15:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1096000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2637",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"currentID()": "2373",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,string)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26703",
								"supportsInterface(bytes4)": "555",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 249,
									"end": 724,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 724,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 476,
									"end": 504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 504,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 476,
									"end": 504,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 293,
									"end": 320,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 293,
									"end": 320,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 320,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 293,
									"end": 320,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 293,
									"end": 320,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 249,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 249,
									"end": 724,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 15,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 249,
									"end": 724,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 724,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 249,
									"end": 724,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 724,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 724,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 249,
									"end": 724,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 724,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052fdafcd2ee8d69b5154f76ad2b24e5306494a4397c10692db7c0eb57ef6069b64736f6c634300081a0033",
									".code": [
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "2EB2C2D6"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "2EB2C2D6"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "4E1273F4"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "D3FC9864"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "F242432A"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "FDD58E"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "E89341C"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "FEBDD49"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "1C75CFB4"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 724,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 249,
											"end": 724,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 643,
											"end": 668,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1205,
											"end": 1246,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1205,
											"end": 1246,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1193,
											"end": 1195,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1178,
											"end": 1196,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1065,
											"end": 1252,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1331,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1331,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1331,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 566,
											"end": 722,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 566,
											"end": 722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 566,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 566,
											"end": 722,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 566,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 566,
											"end": 722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 566,
											"end": 722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 326,
											"end": 350,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 326,
											"end": 350,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 560,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 560,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 357,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 357,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 357,
											"end": 560,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 357,
											"end": 560,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 357,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 357,
											"end": 560,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 357,
											"end": 560,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 357,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 357,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1459,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1424,
											"end": 1468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1424,
											"end": 1468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1599,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1648,
											"end": 1655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1624,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1626,
											"end": 1634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1602,
											"end": 1635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1635,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1573,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1656,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1663,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1331,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 566,
											"end": 722,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 665,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 688,
											"end": 692,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 695,
											"end": 697,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 700,
											"end": 702,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 705,
											"end": 710,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 665,
											"end": 715,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 715,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 665,
											"end": 715,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 665,
											"end": 715,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 715,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 665,
											"end": 715,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 715,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 665,
											"end": 715,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 665,
											"end": 715,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 715,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 665,
											"end": 715,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 665,
											"end": 715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 665,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 665,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 665,
											"end": 715,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 665,
											"end": 715,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 566,
											"end": 722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "711BEC91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11204,
											"end": 11236,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11204,
											"end": 11236,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11204,
											"end": 11236,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11186,
											"end": 11237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11273,
											"end": 11305,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11273,
											"end": 11305,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11253,
											"end": 11271,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11253,
											"end": 11271,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11253,
											"end": 11271,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11246,
											"end": 11306,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B059991"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11525,
											"end": 11559,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11317,
											"end": 11565,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 560,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 357,
											"end": 560,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 467,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 473,
											"end": 475,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 477,
											"end": 486,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 488,
											"end": 494,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 467,
											"end": 499,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 499,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 467,
											"end": 499,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 499,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 467,
											"end": 499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 467,
											"end": 499,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 467,
											"end": 499,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 467,
											"end": 499,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 499,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 467,
											"end": 499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 467,
											"end": 499,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 467,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 467,
											"end": 499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 467,
											"end": 499,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 467,
											"end": 499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 509,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 517,
											"end": 526,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 517,
											"end": 526,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 528,
											"end": 531,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 509,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 509,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 509,
											"end": 532,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 509,
											"end": 532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 542,
											"end": 551,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 542,
											"end": 553,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 542,
											"end": 553,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 542,
											"end": 553,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 542,
											"end": 551,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 542,
											"end": 553,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 542,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 542,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 542,
											"end": 553,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 542,
											"end": 553,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 542,
											"end": 553,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 542,
											"end": 553,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 542,
											"end": 553,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 542,
											"end": 553,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 542,
											"end": 553,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 357,
											"end": 560,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 357,
											"end": 560,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 357,
											"end": 560,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 357,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "711BEC91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11204,
											"end": 11236,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11204,
											"end": 11236,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11204,
											"end": 11236,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11186,
											"end": 11237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11273,
											"end": 11305,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 11273,
											"end": 11305,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11253,
											"end": 11271,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11253,
											"end": 11271,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11253,
											"end": 11271,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11246,
											"end": 11306,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11012,
											"end": 11312,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11974,
											"end": 12177,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11974,
											"end": 12177,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CED3E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11974,
											"end": 12177,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1246,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1205,
											"end": 1246,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1205,
											"end": 1246,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1178,
											"end": 1196,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11974,
											"end": 12177,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1906,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1743,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1838,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1850,
											"end": 1858,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1847,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1828,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "6BB7FF708619BA0610CBA295A58592E0451DEE2622938C8755667688DAF3529B"
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1877,
											"end": 1889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1873,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1899,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11974,
											"end": 12177,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A0D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11974,
											"end": 12177,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B059991"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11525,
											"end": 11559,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11317,
											"end": 11565,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DEE4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14429,
											"end": 14461,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 14429,
											"end": 14461,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14411,
											"end": 14462,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14478,
											"end": 14496,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14478,
											"end": 14496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14478,
											"end": 14496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14471,
											"end": 14505,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14471,
											"end": 14505,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14471,
											"end": 14505,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14521,
											"end": 14539,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14521,
											"end": 14539,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14521,
											"end": 14539,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14514,
											"end": 14548,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14514,
											"end": 14548,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14514,
											"end": 14548,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14564,
											"end": 14582,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14564,
											"end": 14582,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14564,
											"end": 14582,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14557,
											"end": 14591,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14557,
											"end": 14591,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14557,
											"end": 14591,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14383,
											"end": 14402,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 14383,
											"end": 14402,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 14180,
											"end": 14597,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11491,
											"end": 11516,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11547,
											"end": 11549,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11525,
											"end": 11559,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11479,
											"end": 11481,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11317,
											"end": 11565,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12138,
											"end": 12170,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12138,
											"end": 12170,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11974,
											"end": 12177,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12138,
											"end": 12170,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12138,
											"end": 12170,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11974,
											"end": 12177,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BFA23E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12138,
											"end": 12170,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12138,
											"end": 12170,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11974,
											"end": 12177,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 492,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 492,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 458,
											"end": 460,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 443,
											"end": 461,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 443,
											"end": 461,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 443,
											"end": 461,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 443,
											"end": 461,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 430,
											"end": 462,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 430,
											"end": 462,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 679,
											"end": 810,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 679,
											"end": 810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 753,
											"end": 785,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 753,
											"end": 785,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 743,
											"end": 786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 743,
											"end": 786,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 733,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 733,
											"end": 804,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 800,
											"end": 801,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 798,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 790,
											"end": 802,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 733,
											"end": 804,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 733,
											"end": 804,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 679,
											"end": 810,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 679,
											"end": 810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 815,
											"end": 1060,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 815,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 873,
											"end": 879,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 928,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 923,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 905,
											"end": 912,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 901,
											"end": 924,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 897,
											"end": 929,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 894,
											"end": 946,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 894,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 894,
											"end": 946,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 942,
											"end": 943,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 940,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 932,
											"end": 944,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 894,
											"end": 946,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 894,
											"end": 946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 968,
											"end": 991,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 1000,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1257,
											"end": 1483,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 1257,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1371,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1348,
											"end": 1355,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1344,
											"end": 1367,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1340,
											"end": 1372,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1337,
											"end": 1389,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1337,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 1337,
											"end": 1389,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1375,
											"end": 1387,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1337,
											"end": 1389,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 1337,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1257,
											"end": 1483,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1488,
											"end": 1738,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 1488,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1696,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 1583,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1583,
											"end": 1696,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1583,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 1583,
											"end": 1696,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1684,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1684,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1673,
											"end": 1684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1667,
											"end": 1685,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1654,
											"end": 1665,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1654,
											"end": 1665,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1654,
											"end": 1665,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1647,
											"end": 1686,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1619,
											"end": 1621,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1622,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1583,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 1583,
											"end": 1696,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1583,
											"end": 1696,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 1583,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1731,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1712,
											"end": 1728,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1705,
											"end": 1732,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1488,
											"end": 1738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1743,
											"end": 2014,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 1743,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1785,
											"end": 1788,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1828,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1817,
											"end": 1829,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1845,
											"end": 1848,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1838,
											"end": 1857,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1935,
											"end": 1941,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 1932,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1926,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1919,
											"end": 1933,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1912,
											"end": 1916,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1910,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1901,
											"end": 1917,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1942,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1866,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1996,
											"end": 1998,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1962,
											"end": 2001,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1962,
											"end": 2001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1962,
											"end": 2001,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1962,
											"end": 2001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2003,
											"end": 2007,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 2008,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1958,
											"end": 2008,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1743,
											"end": 2014,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1743,
											"end": 2014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2239,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 2019,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2168,
											"end": 2170,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2166,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2131,
											"end": 2135,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 2229,
											"end": 2231,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2214,
											"end": 2232,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2212,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 2188,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2244,
											"end": 2739,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 2244,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2344,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2346,
											"end": 2352,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2407,
											"end": 2410,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2386,
											"end": 2393,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2382,
											"end": 2405,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2378,
											"end": 2411,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2426,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 2375,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 2447,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2476,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 2447,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2437,
											"end": 2476,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2437,
											"end": 2476,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2495,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 2529,
											"end": 2531,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2518,
											"end": 2527,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2514,
											"end": 2532,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2495,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 2495,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2495,
											"end": 2533,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 2495,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2244,
											"end": 2739,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2244,
											"end": 2739,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 2485,
											"end": 2533,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2485,
											"end": 2533,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2602,
											"end": 2604,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2703,
											"end": 2705,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2675,
											"end": 2707,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2675,
											"end": 2707,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2244,
											"end": 2739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2744,
											"end": 2871,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2744,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2805,
											"end": 2815,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 2796,
											"end": 2816,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2817,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2840,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 2833,
											"end": 2834,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2841,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2860,
											"end": 2864,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2865,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2876,
											"end": 3151,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 2876,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2947,
											"end": 2949,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 2950,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3012,
											"end": 3014,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2993,
											"end": 3006,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2993,
											"end": 3006,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3016,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 3017,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2977,
											"end": 3017,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3047,
											"end": 3065,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3032,
											"end": 3066,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3032,
											"end": 3066,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3068,
											"end": 3090,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3068,
											"end": 3090,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3068,
											"end": 3090,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3029,
											"end": 3091,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3026,
											"end": 3114,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3026,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3026,
											"end": 3114,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3094,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3130,
											"end": 3132,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3123,
											"end": 3145,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2876,
											"end": 3151,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2876,
											"end": 3151,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2876,
											"end": 3151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3339,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 3156,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3220,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3267,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3238,
											"end": 3268,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3235,
											"end": 3291,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3235,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 3235,
											"end": 3291,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3271,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 3271,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3271,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3271,
											"end": 3289,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 3271,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 3312,
											"end": 3326,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3308,
											"end": 3333,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3308,
											"end": 3333,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3344,
											"end": 4067,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 3344,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3398,
											"end": 3403,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3454,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3444,
											"end": 3448,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3432,
											"end": 3449,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3428,
											"end": 3455,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 3418,
											"end": 3473,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3467,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3473,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 3418,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3496,
											"end": 3516,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 3552,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 3592,
											"end": 3598,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3552,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 3552,
											"end": 3599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3552,
											"end": 3599,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 3552,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 3536,
											"end": 3600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3600,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 3536,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3627,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3654,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3643,
											"end": 3646,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3636,
											"end": 3655,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3675,
											"end": 3678,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3671,
											"end": 3685,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3664,
											"end": 3685,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3664,
											"end": 3685,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3741,
											"end": 3745,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3731,
											"end": 3737,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3728,
											"end": 3729,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 3724,
											"end": 3738,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3716,
											"end": 3722,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3712,
											"end": 3739,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3708,
											"end": 3746,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3694,
											"end": 3746,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3694,
											"end": 3746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3761,
											"end": 3767,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3758,
											"end": 3773,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3755,
											"end": 3790,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3755,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 3755,
											"end": 3790,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3786,
											"end": 3787,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3784,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3776,
											"end": 3788,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3755,
											"end": 3790,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 3755,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3810,
											"end": 3827,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 4036,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 3836,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3852,
											"end": 3858,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3847,
											"end": 3850,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3844,
											"end": 3859,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 4036,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 3836,
											"end": 4036,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3974,
											"end": 3992,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3974,
											"end": 3992,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4021,
											"end": 4025,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4012,
											"end": 4026,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4012,
											"end": 4026,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4012,
											"end": 4026,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4012,
											"end": 4026,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3869,
											"end": 3883,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 3836,
											"end": 4036,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3836,
											"end": 4036,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 3836,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4054,
											"end": 4061,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3344,
											"end": 4067,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3344,
											"end": 4067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4072,
											"end": 4521,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 4072,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4136,
											"end": 4141,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4192,
											"end": 4210,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4184,
											"end": 4190,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4181,
											"end": 4211,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4178,
											"end": 4234,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4178,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4178,
											"end": 4234,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 4214,
											"end": 4232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4280,
											"end": 4282,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4259,
											"end": 4274,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4259,
											"end": 4274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4284,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4286,
											"end": 4290,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4251,
											"end": 4291,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4309,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 4251,
											"end": 4291,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4309,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 4309,
											"end": 4330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4309,
											"end": 4330,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 4309,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4353,
											"end": 4359,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 4351,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4339,
											"end": 4360,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4393,
											"end": 4396,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4384,
											"end": 4390,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4379,
											"end": 4382,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4375,
											"end": 4391,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4372,
											"end": 4397,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4369,
											"end": 4414,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4369,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 4369,
											"end": 4414,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4411,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4407,
											"end": 4408,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4400,
											"end": 4412,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4369,
											"end": 4414,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 4369,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4454,
											"end": 4457,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4447,
											"end": 4451,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4436,
											"end": 4452,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4423,
											"end": 4466,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4510,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4495,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4486,
											"end": 4504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4482,
											"end": 4511,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4475,
											"end": 4515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4072,
											"end": 4521,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4072,
											"end": 4521,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4072,
											"end": 4521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4072,
											"end": 4521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4072,
											"end": 4521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4072,
											"end": 4521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4746,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 4526,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4568,
											"end": 4573,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4621,
											"end": 4624,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4614,
											"end": 4618,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4602,
											"end": 4619,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4598,
											"end": 4625,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4588,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 4588,
											"end": 4643,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4588,
											"end": 4643,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 4588,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 4736,
											"end": 4739,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4727,
											"end": 4733,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4714,
											"end": 4734,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4707,
											"end": 4711,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4699,
											"end": 4705,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4695,
											"end": 4712,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 4661,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 5705,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 4751,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4913,
											"end": 4919,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4921,
											"end": 4927,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 4935,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4937,
											"end": 4943,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4993,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4978,
											"end": 4987,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4969,
											"end": 4976,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4965,
											"end": 4988,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4961,
											"end": 4994,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4958,
											"end": 5011,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4958,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 4958,
											"end": 5011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5007,
											"end": 5008,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5005,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4997,
											"end": 5009,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4958,
											"end": 5011,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 4958,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 5049,
											"end": 5058,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 5030,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5059,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 5030,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5020,
											"end": 5059,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5020,
											"end": 5059,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5078,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 5112,
											"end": 5114,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5097,
											"end": 5115,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5078,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 5078,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5078,
											"end": 5116,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 5078,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5068,
											"end": 5116,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5068,
											"end": 5116,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5167,
											"end": 5169,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5139,
											"end": 5171,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5194,
											"end": 5212,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5186,
											"end": 5192,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5183,
											"end": 5213,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5180,
											"end": 5230,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5180,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 5180,
											"end": 5230,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5224,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5216,
											"end": 5228,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5180,
											"end": 5230,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 5180,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5249,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 5302,
											"end": 5309,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5293,
											"end": 5299,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5278,
											"end": 5300,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5249,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 5249,
											"end": 5310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5249,
											"end": 5310,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 5249,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5239,
											"end": 5310,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5239,
											"end": 5310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5239,
											"end": 5310,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5352,
											"end": 5361,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5335,
											"end": 5367,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5392,
											"end": 5410,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5382,
											"end": 5390,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5379,
											"end": 5411,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5376,
											"end": 5428,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5376,
											"end": 5428,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 5376,
											"end": 5428,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5424,
											"end": 5425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5414,
											"end": 5426,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5376,
											"end": 5428,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 5376,
											"end": 5428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5447,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 5502,
											"end": 5509,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5491,
											"end": 5499,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5489,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5476,
											"end": 5500,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5447,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 5447,
											"end": 5510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5447,
											"end": 5510,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 5447,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5510,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5563,
											"end": 5566,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5552,
											"end": 5561,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5548,
											"end": 5567,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5535,
											"end": 5568,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5593,
											"end": 5611,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 5591,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5580,
											"end": 5612,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5577,
											"end": 5629,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5577,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 5577,
											"end": 5629,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5625,
											"end": 5626,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5623,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5615,
											"end": 5627,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5577,
											"end": 5629,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 5577,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5648,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 5691,
											"end": 5698,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5680,
											"end": 5688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5669,
											"end": 5678,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5665,
											"end": 5689,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5648,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 5648,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5648,
											"end": 5699,
											"name": "tag",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 5648,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5638,
											"end": 5699,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5638,
											"end": 5699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5638,
											"end": 5699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 5705,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 5705,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 5705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 5705,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 5705,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 5705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 5705,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 5705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 5705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 6856,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 5710,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5889,
											"end": 5891,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5877,
											"end": 5886,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5868,
											"end": 5875,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5887,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5860,
											"end": 5892,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5857,
											"end": 5909,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5857,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 5857,
											"end": 5909,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5905,
											"end": 5906,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5895,
											"end": 5907,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5857,
											"end": 5909,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 5857,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 5954,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5932,
											"end": 5955,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5978,
											"end": 5996,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5970,
											"end": 5976,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5967,
											"end": 5997,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5964,
											"end": 6014,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5964,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 5964,
											"end": 6014,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6008,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6000,
											"end": 6012,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5964,
											"end": 6014,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 5964,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6033,
											"end": 6055,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6033,
											"end": 6055,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6086,
											"end": 6090,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6078,
											"end": 6091,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6091,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6074,
											"end": 6101,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6064,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 6064,
											"end": 6119,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6115,
											"end": 6116,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6113,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6064,
											"end": 6119,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 6064,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6155,
											"end": 6157,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6142,
											"end": 6158,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 6194,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6194,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 6194,
											"end": 6241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6178,
											"end": 6242,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 6178,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6264,
											"end": 6267,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6283,
											"end": 6286,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6276,
											"end": 6295,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6320,
											"end": 6324,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6318,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6311,
											"end": 6325,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6304,
											"end": 6325,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6304,
											"end": 6325,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6377,
											"end": 6381,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6367,
											"end": 6373,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6364,
											"end": 6365,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 6360,
											"end": 6374,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6358,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6348,
											"end": 6382,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6334,
											"end": 6382,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6334,
											"end": 6382,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6405,
											"end": 6412,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6397,
											"end": 6403,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6394,
											"end": 6413,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6391,
											"end": 6430,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6391,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 6391,
											"end": 6430,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6426,
											"end": 6427,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6416,
											"end": 6428,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6391,
											"end": 6430,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 6391,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6458,
											"end": 6462,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6454,
											"end": 6456,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6450,
											"end": 6463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6439,
											"end": 6463,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6439,
											"end": 6463,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6472,
											"end": 6624,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 6472,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6488,
											"end": 6494,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6483,
											"end": 6486,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6480,
											"end": 6495,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6472,
											"end": 6624,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6472,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 6472,
											"end": 6624,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6556,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 6575,
											"end": 6578,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6556,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 6556,
											"end": 6579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6556,
											"end": 6579,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 6556,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6544,
											"end": 6580,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6544,
											"end": 6580,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6609,
											"end": 6613,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6505,
											"end": 6519,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6505,
											"end": 6519,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6505,
											"end": 6519,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6505,
											"end": 6519,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6472,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 6472,
											"end": 6624,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6472,
											"end": 6624,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 6472,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6643,
											"end": 6648,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6701,
											"end": 6705,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6706,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6686,
											"end": 6706,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6673,
											"end": 6707,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6719,
											"end": 6751,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6719,
											"end": 6751,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6716,
											"end": 6768,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6716,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 6716,
											"end": 6768,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6764,
											"end": 6765,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6762,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6754,
											"end": 6766,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6716,
											"end": 6768,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 6716,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6787,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6831,
											"end": 6839,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6820,
											"end": 6829,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6840,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6787,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 6787,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6787,
											"end": 6850,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 6787,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6777,
											"end": 6850,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6777,
											"end": 6850,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6777,
											"end": 6850,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 6856,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 6856,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 6856,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 6856,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 6856,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 6856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 7281,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 6861,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6914,
											"end": 6917,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6952,
											"end": 6957,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6946,
											"end": 6958,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6979,
											"end": 6985,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6974,
											"end": 6977,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6967,
											"end": 6986,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7011,
											"end": 7015,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7006,
											"end": 7009,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7002,
											"end": 7016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6995,
											"end": 7016,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6995,
											"end": 7016,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7050,
											"end": 7054,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7043,
											"end": 7048,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7039,
											"end": 7055,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7073,
											"end": 7074,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7256,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 7083,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7097,
											"end": 7103,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7091,
											"end": 7104,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7256,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 7083,
											"end": 7256,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7158,
											"end": 7171,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7158,
											"end": 7171,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7146,
											"end": 7172,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7146,
											"end": 7172,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7201,
											"end": 7205,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7192,
											"end": 7206,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 7192,
											"end": 7206,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7192,
											"end": 7206,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7192,
											"end": 7206,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7229,
											"end": 7246,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7112,
											"end": 7121,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 7083,
											"end": 7256,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7256,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 7083,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7272,
											"end": 7275,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7272,
											"end": 7275,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 7281,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6861,
											"end": 7281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7286,
											"end": 7547,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 7286,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7465,
											"end": 7467,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7454,
											"end": 7463,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7447,
											"end": 7468,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7428,
											"end": 7432,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 7537,
											"end": 7539,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7526,
											"end": 7535,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7522,
											"end": 7540,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7514,
											"end": 7520,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7485,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 7485,
											"end": 7541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7899,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 7552,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7623,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7631,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7678,
											"end": 7680,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7666,
											"end": 7675,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7657,
											"end": 7664,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7653,
											"end": 7676,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7649,
											"end": 7681,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7646,
											"end": 7698,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7646,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 7646,
											"end": 7698,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7694,
											"end": 7695,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7646,
											"end": 7698,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 7646,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7717,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 7736,
											"end": 7745,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7717,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 7717,
											"end": 7746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7717,
											"end": 7746,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 7717,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7707,
											"end": 7746,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7707,
											"end": 7746,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7796,
											"end": 7798,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7785,
											"end": 7794,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7781,
											"end": 7799,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7768,
											"end": 7800,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7843,
											"end": 7848,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7836,
											"end": 7849,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7829,
											"end": 7850,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7822,
											"end": 7827,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7819,
											"end": 7851,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7809,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 7809,
											"end": 7869,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7865,
											"end": 7866,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7862,
											"end": 7863,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7855,
											"end": 7867,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7809,
											"end": 7869,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 7809,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7888,
											"end": 7893,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7878,
											"end": 7893,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7878,
											"end": 7893,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7878,
											"end": 7893,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7899,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7899,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7899,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7899,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7899,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 8542,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 7904,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7991,
											"end": 7997,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8005,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8007,
											"end": 8013,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8048,
											"end": 8057,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8039,
											"end": 8046,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8035,
											"end": 8058,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8031,
											"end": 8063,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8028,
											"end": 8080,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8028,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 8028,
											"end": 8080,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8076,
											"end": 8077,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8066,
											"end": 8078,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8028,
											"end": 8080,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 8028,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8099,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 8118,
											"end": 8127,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8099,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 8099,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8099,
											"end": 8128,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 8099,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8089,
											"end": 8128,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8197,
											"end": 8199,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8182,
											"end": 8200,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8182,
											"end": 8200,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8169,
											"end": 8201,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8169,
											"end": 8201,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8276,
											"end": 8278,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8261,
											"end": 8279,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8261,
											"end": 8279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8248,
											"end": 8280,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8292,
											"end": 8322,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8292,
											"end": 8322,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8289,
											"end": 8339,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8289,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 8289,
											"end": 8339,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8335,
											"end": 8336,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8333,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8325,
											"end": 8337,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8289,
											"end": 8339,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 8289,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8358,
											"end": 8380,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8358,
											"end": 8380,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8411,
											"end": 8415,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8399,
											"end": 8426,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 8389,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 8389,
											"end": 8444,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8438,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8430,
											"end": 8442,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8389,
											"end": 8444,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 8389,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8463,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 8528,
											"end": 8535,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8523,
											"end": 8525,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8510,
											"end": 8526,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8505,
											"end": 8507,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8501,
											"end": 8503,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8497,
											"end": 8508,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8463,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 8463,
											"end": 8536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8463,
											"end": 8536,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 8463,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8453,
											"end": 8536,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8453,
											"end": 8536,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8453,
											"end": 8536,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 8542,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 8542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 8542,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 8542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 8542,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7904,
											"end": 8542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8807,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8547,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8615,
											"end": 8621,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8623,
											"end": 8629,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8676,
											"end": 8678,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8664,
											"end": 8673,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8655,
											"end": 8662,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8651,
											"end": 8674,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8647,
											"end": 8679,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8644,
											"end": 8696,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8644,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 8644,
											"end": 8696,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8692,
											"end": 8693,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8682,
											"end": 8694,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8644,
											"end": 8696,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 8644,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8715,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 8734,
											"end": 8743,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8715,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 8715,
											"end": 8744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8715,
											"end": 8744,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 8715,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8744,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8705,
											"end": 8744,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8763,
											"end": 8801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 8797,
											"end": 8799,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8786,
											"end": 8795,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8763,
											"end": 8801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 8763,
											"end": 8801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8763,
											"end": 8801,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 8763,
											"end": 8801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8801,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8807,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8807,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8807,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8547,
											"end": 8807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8812,
											"end": 9516,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 8812,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8916,
											"end": 8922,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8924,
											"end": 8930,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8932,
											"end": 8938,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8946,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8948,
											"end": 8954,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9001,
											"end": 9004,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 8989,
											"end": 8998,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8980,
											"end": 8987,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8976,
											"end": 8999,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8972,
											"end": 9005,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8969,
											"end": 9022,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8969,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 8969,
											"end": 9022,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9018,
											"end": 9019,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9015,
											"end": 9016,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9008,
											"end": 9020,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8969,
											"end": 9022,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 8969,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9041,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 9060,
											"end": 9069,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9041,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 9041,
											"end": 9070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9041,
											"end": 9070,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 9041,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9070,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9031,
											"end": 9070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9089,
											"end": 9127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 9123,
											"end": 9125,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9112,
											"end": 9121,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9108,
											"end": 9126,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9089,
											"end": 9127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 9089,
											"end": 9127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9089,
											"end": 9127,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 9089,
											"end": 9127,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9079,
											"end": 9127,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9196,
											"end": 9198,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9181,
											"end": 9199,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9181,
											"end": 9199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9168,
											"end": 9200,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9168,
											"end": 9200,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9297,
											"end": 9299,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9282,
											"end": 9300,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9282,
											"end": 9300,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9269,
											"end": 9301,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9269,
											"end": 9301,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9378,
											"end": 9381,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 9363,
											"end": 9382,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9363,
											"end": 9382,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9350,
											"end": 9383,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9406,
											"end": 9424,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9395,
											"end": 9425,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9395,
											"end": 9425,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9392,
											"end": 9442,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9392,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 9392,
											"end": 9442,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9438,
											"end": 9439,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9435,
											"end": 9436,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9428,
											"end": 9440,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9521,
											"end": 9901,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 9521,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9600,
											"end": 9601,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 9596,
											"end": 9608,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9596,
											"end": 9608,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9596,
											"end": 9608,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 9596,
											"end": 9608,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9643,
											"end": 9655,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9643,
											"end": 9655,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9643,
											"end": 9655,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9664,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 9664,
											"end": 9725,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9718,
											"end": 9722,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 9710,
											"end": 9716,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9706,
											"end": 9723,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9696,
											"end": 9723,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9696,
											"end": 9723,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9664,
											"end": 9725,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 9664,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9771,
											"end": 9773,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9763,
											"end": 9769,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9760,
											"end": 9774,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9737,
											"end": 9775,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9734,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 9734,
											"end": 9895,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9817,
											"end": 9827,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9812,
											"end": 9815,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9808,
											"end": 9828,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9805,
											"end": 9806,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 9849,
											"end": 9850,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9842,
											"end": 9857,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9880,
											"end": 9884,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9877,
											"end": 9878,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9870,
											"end": 9885,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9734,
											"end": 9895,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 9734,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9734,
											"end": 9895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9521,
											"end": 9901,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9521,
											"end": 9901,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9521,
											"end": 9901,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9521,
											"end": 9901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10032,
											"end": 11007,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 10032,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10208,
											"end": 10211,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10237,
											"end": 10238,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10264,
											"end": 10277,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 10300,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 10326,
											"end": 10335,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10300,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 10300,
											"end": 10336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10300,
											"end": 10336,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 10300,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10367,
											"end": 10368,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10352,
											"end": 10369,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10352,
											"end": 10369,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10378,
											"end": 10511,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10378,
											"end": 10511,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10378,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 10378,
											"end": 10511,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10525,
											"end": 10526,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10345,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 10345,
											"end": 10852,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10378,
											"end": 10511,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 10378,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10411,
											"end": 10435,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10411,
											"end": 10435,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10399,
											"end": 10436,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10399,
											"end": 10436,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10484,
											"end": 10498,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10484,
											"end": 10498,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10477,
											"end": 10499,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10465,
											"end": 10500,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10465,
											"end": 10500,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 10456,
											"end": 10501,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10456,
											"end": 10501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10456,
											"end": 10501,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10378,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 10378,
											"end": 10511,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 10520,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10551,
											"end": 10557,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10548,
											"end": 10549,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10558,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10599,
											"end": 10603,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10596,
											"end": 10597,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10586,
											"end": 10604,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 10626,
											"end": 10627,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10640,
											"end": 10806,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 10640,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10654,
											"end": 10660,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10651,
											"end": 10652,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10648,
											"end": 10661,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10640,
											"end": 10806,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10640,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 10640,
											"end": 10806,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10748,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10734,
											"end": 10748,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 10721,
											"end": 10732,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10721,
											"end": 10732,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10721,
											"end": 10732,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10714,
											"end": 10749,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10790,
											"end": 10791,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10777,
											"end": 10792,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10777,
											"end": 10792,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10777,
											"end": 10792,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10777,
											"end": 10792,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10676,
											"end": 10680,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10669,
											"end": 10681,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10640,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 10640,
											"end": 10806,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10640,
											"end": 10806,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 10640,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10644,
											"end": 10647,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10644,
											"end": 10647,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10835,
											"end": 10841,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10830,
											"end": 10833,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10826,
											"end": 10842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10819,
											"end": 10842,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10819,
											"end": 10842,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10345,
											"end": 10852,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 10345,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10345,
											"end": 10852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10345,
											"end": 10852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10345,
											"end": 10852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10883,
											"end": 10889,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10877,
											"end": 10890,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10899,
											"end": 10967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 10958,
											"end": 10966,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10953,
											"end": 10956,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10946,
											"end": 10950,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10944,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10934,
											"end": 10951,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10899,
											"end": 10967,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 10899,
											"end": 10967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10899,
											"end": 10967,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 10899,
											"end": 10967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10983,
											"end": 11001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10983,
											"end": 11001,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10032,
											"end": 11007,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10032,
											"end": 11007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11570,
											"end": 11697,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 11570,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11631,
											"end": 11641,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 11626,
											"end": 11629,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 11622,
											"end": 11642,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 11619,
											"end": 11620,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11612,
											"end": 11643,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11662,
											"end": 11666,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 11659,
											"end": 11660,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11652,
											"end": 11667,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11686,
											"end": 11690,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11676,
											"end": 11691,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 11829,
											"name": "tag",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 11702,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11763,
											"end": 11773,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 11758,
											"end": 11761,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 11754,
											"end": 11774,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 11751,
											"end": 11752,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11744,
											"end": 11775,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11794,
											"end": 11798,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 11791,
											"end": 11792,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11784,
											"end": 11799,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11818,
											"end": 11822,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11815,
											"end": 11816,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11808,
											"end": 11823,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11834,
											"end": 11969,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 11834,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11873,
											"end": 11876,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11894,
											"end": 11911,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11894,
											"end": 11911,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11894,
											"end": 11911,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11891,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 11891,
											"end": 11934,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11914,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 11914,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 11914,
											"end": 11932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11914,
											"end": 11932,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 11914,
											"end": 11932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11961,
											"end": 11962,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11950,
											"end": 11963,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11950,
											"end": 11963,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11834,
											"end": 11969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12182,
											"end": 12700,
											"name": "tag",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 12182,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12284,
											"end": 12286,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 12279,
											"end": 12282,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12276,
											"end": 12287,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12273,
											"end": 12694,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12273,
											"end": 12694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 12273,
											"end": 12694,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12320,
											"end": 12325,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12317,
											"end": 12318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12310,
											"end": 12326,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12364,
											"end": 12368,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12362,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 12434,
											"end": 12436,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 12422,
											"end": 12432,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12415,
											"end": 12416,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 12411,
											"end": 12438,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 12405,
											"end": 12409,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12401,
											"end": 12439,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12470,
											"end": 12474,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12458,
											"end": 12468,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12455,
											"end": 12475,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12452,
											"end": 12499,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12452,
											"end": 12499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 12452,
											"end": 12499,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12493,
											"end": 12497,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12452,
											"end": 12499,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 12452,
											"end": 12499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12548,
											"end": 12550,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 12543,
											"end": 12546,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12539,
											"end": 12551,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12536,
											"end": 12537,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 12532,
											"end": 12552,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 12526,
											"end": 12530,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12522,
											"end": 12553,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12553,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12553,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12603,
											"end": 12684,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 12603,
											"end": 12684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12621,
											"end": 12623,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12614,
											"end": 12619,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12624,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12603,
											"end": 12684,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12603,
											"end": 12684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 12603,
											"end": 12684,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12680,
											"end": 12681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12666,
											"end": 12682,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12666,
											"end": 12682,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 12647,
											"end": 12648,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 12636,
											"end": 12649,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12603,
											"end": 12684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 12603,
											"end": 12684,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12273,
											"end": 12694,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 12273,
											"end": 12694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12182,
											"end": 12700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12182,
											"end": 12700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12182,
											"end": 12700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12182,
											"end": 12700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12876,
											"end": 14175,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 12876,
											"end": 14175,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13002,
											"end": 13005,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12996,
											"end": 13006,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13029,
											"end": 13047,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13021,
											"end": 13027,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13018,
											"end": 13048,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13015,
											"end": 13071,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13015,
											"end": 13071,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 13015,
											"end": 13071,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 13051,
											"end": 13069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13080,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 13170,
											"end": 13176,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13130,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 13162,
											"end": 13166,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13156,
											"end": 13167,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 13130,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 13130,
											"end": 13168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13130,
											"end": 13168,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 13130,
											"end": 13168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13124,
											"end": 13128,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13080,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 13080,
											"end": 13177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13080,
											"end": 13177,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 13080,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13226,
											"end": 13230,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13257,
											"end": 13259,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 13246,
											"end": 13260,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13246,
											"end": 13260,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13274,
											"end": 13275,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13269,
											"end": 13918,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13269,
											"end": 13918,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 13269,
											"end": 13918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 13269,
											"end": 13918,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13962,
											"end": 13963,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13979,
											"end": 13985,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13976,
											"end": 14065,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13976,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 13976,
											"end": 14065,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14031,
											"end": 14050,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14031,
											"end": 14050,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14031,
											"end": 14050,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14025,
											"end": 14051,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13976,
											"end": 14065,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 13976,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12833,
											"end": 12834,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 12829,
											"end": 12840,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12829,
											"end": 12840,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12829,
											"end": 12840,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 12825,
											"end": 12849,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 12821,
											"end": 12850,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 12811,
											"end": 12851,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 12857,
											"end": 12858,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 12853,
											"end": 12864,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12853,
											"end": 12864,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12853,
											"end": 12864,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 12865,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 14078,
											"end": 14159,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14078,
											"end": 14159,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 13239,
											"end": 14169,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 13239,
											"end": 14169,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13269,
											"end": 13918,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 13269,
											"end": 13918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9972,
											"end": 9986,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9972,
											"end": 9986,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9972,
											"end": 9986,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10016,
											"end": 10020,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10003,
											"end": 10021,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10003,
											"end": 10021,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13305,
											"end": 13325,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13305,
											"end": 13325,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13305,
											"end": 13325,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13437,
											"end": 13444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13434,
											"end": 13435,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13431,
											"end": 13445,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13519,
											"end": 13538,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 13519,
											"end": 13538,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13519,
											"end": 13538,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13513,
											"end": 13539,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13498,
											"end": 13540,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13498,
											"end": 13540,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 13626,
											"end": 13630,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13611,
											"end": 13631,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13611,
											"end": 13631,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13611,
											"end": 13631,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13611,
											"end": 13631,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13579,
											"end": 13580,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13567,
											"end": 13581,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13567,
											"end": 13581,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13567,
											"end": 13581,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13567,
											"end": 13581,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13453,
											"end": 13465,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 13423,
											"end": 13645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13427,
											"end": 13430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13673,
											"end": 13679,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13664,
											"end": 13671,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13661,
											"end": 13680,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13658,
											"end": 13859,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13658,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 13658,
											"end": 13859,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13734,
											"end": 13753,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13734,
											"end": 13753,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13734,
											"end": 13753,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13728,
											"end": 13754,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13817,
											"end": 13818,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 13813,
											"end": 13827,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 13813,
											"end": 13827,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13813,
											"end": 13827,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 13829,
											"end": 13832,
											"name": "PUSH",
											"source": 15,
											"value": "F8"
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13805,
											"end": 13842,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 13801,
											"end": 13843,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 13786,
											"end": 13844,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 13771,
											"end": 13845,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13771,
											"end": 13845,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 13658,
											"end": 13859,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 13658,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13905,
											"end": 13906,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13889,
											"end": 13903,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13889,
											"end": 13903,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13889,
											"end": 13903,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 13885,
											"end": 13907,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13872,
											"end": 13908,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13872,
											"end": 13908,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12876,
											"end": 14175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14602,
											"end": 14727,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 14602,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14667,
											"end": 14676,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14667,
											"end": 14676,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14667,
											"end": 14676,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14688,
											"end": 14698,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14688,
											"end": 14698,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14688,
											"end": 14698,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14685,
											"end": 14721,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14685,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 14685,
											"end": 14721,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "262"
										},
										{
											"begin": 14701,
											"end": 14719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14732,
											"end": 15197,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 14732,
											"end": 15197,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14989,
											"end": 14991,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 14978,
											"end": 14987,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14971,
											"end": 14992,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14952,
											"end": 14956,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15015,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 15067,
											"end": 15069,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15056,
											"end": 15065,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15052,
											"end": 15070,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15044,
											"end": 15050,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15015,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 15015,
											"end": 15071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15015,
											"end": 15071,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 15015,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15119,
											"end": 15128,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15111,
											"end": 15117,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15107,
											"end": 15129,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15102,
											"end": 15104,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15091,
											"end": 15100,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15087,
											"end": 15105,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15080,
											"end": 15130,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15147,
											"end": 15191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 15184,
											"end": 15190,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15176,
											"end": 15182,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15147,
											"end": 15191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 15147,
											"end": 15191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15147,
											"end": 15191,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 15147,
											"end": 15191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15139,
											"end": 15191,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 14732,
											"end": 15197,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14732,
											"end": 15197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15202,
											"end": 15759,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 15202,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15461,
											"end": 15493,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15493,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15493,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15443,
											"end": 15494,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15443,
											"end": 15494,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15530,
											"end": 15562,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15530,
											"end": 15562,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15525,
											"end": 15527,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15528,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15510,
											"end": 15528,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15503,
											"end": 15563,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15594,
											"end": 15596,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15579,
											"end": 15597,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15579,
											"end": 15597,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15606,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15606,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15606,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15637,
											"end": 15639,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 15622,
											"end": 15640,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15622,
											"end": 15640,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15615,
											"end": 15649,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15615,
											"end": 15649,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15615,
											"end": 15649,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15481,
											"end": 15484,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 15680,
											"end": 15683,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 15665,
											"end": 15684,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15665,
											"end": 15684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15658,
											"end": 15690,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15658,
											"end": 15690,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15658,
											"end": 15690,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 15707,
											"end": 15753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 15707,
											"end": 15753,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15733,
											"end": 15752,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15733,
											"end": 15752,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15725,
											"end": 15731,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15707,
											"end": 15753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 15707,
											"end": 15753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15707,
											"end": 15753,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 15707,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15699,
											"end": 15753,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 15202,
											"end": 15759,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15202,
											"end": 15759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15764,
											"end": 16013,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 15764,
											"end": 16013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15833,
											"end": 15839,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15886,
											"end": 15888,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15874,
											"end": 15883,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15865,
											"end": 15872,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15861,
											"end": 15884,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 15889,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 15854,
											"end": 15906,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15854,
											"end": 15906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 15854,
											"end": 15906,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15902,
											"end": 15903,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15899,
											"end": 15900,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15892,
											"end": 15904,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15854,
											"end": 15906,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 15854,
											"end": 15906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15934,
											"end": 15943,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15928,
											"end": 15944,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15953,
											"end": 15983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 15977,
											"end": 15982,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15953,
											"end": 15983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 15953,
											"end": 15983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16018,
											"end": 16841,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 16018,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16377,
											"end": 16409,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16377,
											"end": 16409,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16377,
											"end": 16409,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 16359,
											"end": 16410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16359,
											"end": 16410,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16446,
											"end": 16478,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16446,
											"end": 16478,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 16441,
											"end": 16443,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16426,
											"end": 16444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16426,
											"end": 16444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16419,
											"end": 16479,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16397,
											"end": 16400,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 16510,
											"end": 16512,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16488,
											"end": 16519,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16488,
											"end": 16519,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16488,
											"end": 16519,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16542,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 16542,
											"end": 16599,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16579,
											"end": 16598,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16579,
											"end": 16598,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16571,
											"end": 16577,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16542,
											"end": 16599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 16542,
											"end": 16599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16542,
											"end": 16599,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 16542,
											"end": 16599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16647,
											"end": 16656,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16639,
											"end": 16645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16635,
											"end": 16657,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16630,
											"end": 16632,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16619,
											"end": 16628,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16615,
											"end": 16633,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16608,
											"end": 16658,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16681,
											"end": 16725,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 16718,
											"end": 16724,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16710,
											"end": 16716,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16681,
											"end": 16725,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 16681,
											"end": 16725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16681,
											"end": 16725,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 16681,
											"end": 16725,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16667,
											"end": 16725,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16667,
											"end": 16725,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16774,
											"end": 16783,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16766,
											"end": 16772,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16762,
											"end": 16784,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16756,
											"end": 16759,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 16745,
											"end": 16754,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16741,
											"end": 16760,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16734,
											"end": 16785,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16802,
											"end": 16835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 16828,
											"end": 16834,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16820,
											"end": 16826,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16802,
											"end": 16835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 16802,
											"end": 16835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16802,
											"end": 16835,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 16802,
											"end": 16835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16794,
											"end": 16835,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 16018,
											"end": 16841,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16018,
											"end": 16841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SongNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"currentID()": "1c75cfb4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,string)": "d3fc9864",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256)": "0febdd49",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SongNFT.sol\":\"SongNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0xb4eb1c685e07054beaab5d980a18dec0ea59470154fa1ef847f8cfb6ddc1f543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cea55f4390e3c35e08616bb3c4932ab54157eb60e3939798860b26bdd62fac0\",\"dweb:/ipfs/QmWTMWhGVPnaGhwExT8618GSqm2gejaf8yanp9fjsd8oQS\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/SongNFT.sol\":{\"keccak256\":\"0xc5f2e575fca2896cfc0b6b3c7a415dd519d18a21ee5f851ac91a72daf770da9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b99799c90118ee86a24e45896b0d63f3c4cbe09c488dde92d6131239034eda0\",\"dweb:/ipfs/Qma4tU4F8b2Bm3zFXw1C9yXg1MGsfvcpUKnekVFDeQVmGQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1367,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "_baseURI",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1371,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 3244,
								"contract": "contracts/SongNFT.sol:SongNFT",
								"label": "currentID",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1639
						],
						"Context": [
							1669
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							2058
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1456
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							2070
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1311,
							"src": "135:40:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "143:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1353,
							"src": "176:56:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1352,
										"src": "184:16:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1457,
							"src": "233:73:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "241:19:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1670,
							"src": "307:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1669,
										"src": "315:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 2059,
							"src": "356:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2070,
										"src": "364:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 148,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2058,
										"src": "373:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1640,
							"src": "426:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1639,
										"src": "434:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 137,
							"src": "473:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "481:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"756:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1669,
										"src": "756:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"765:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2058,
										"src": "765:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "773:8:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1456,
										"src": "783:19:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 136,
										"src": "804:14:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187,
								136,
								1456,
								1310,
								2058,
								2070,
								1669
							],
							"name": "ERC1155",
							"nameLocation": "745:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 168,
									"libraryName": {
										"id": 165,
										"name": "Arrays",
										"nameLocations": [
											"831:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1639,
										"src": "831:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:1",
									"typeName": {
										"baseType": {
											"id": 166,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 167,
										"nodeType": "ArrayTypeName",
										"src": "842:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 172,
									"libraryName": {
										"id": 169,
										"name": "Arrays",
										"nameLocations": [
											"863:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1639,
										"src": "863:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:1",
									"typeName": {
										"baseType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 171,
										"nodeType": "ArrayTypeName",
										"src": "874:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "890:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 177,
										"keyName": "id",
										"keyNameLocation": "906:2:1",
										"keyType": {
											"id": 173,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 176,
											"keyName": "account",
											"keyNameLocation": "928:7:1",
											"keyType": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "973:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "989:7:1",
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"keyName": "operator",
											"keyNameLocation": "1016:8:1",
											"keyType": {
												"id": 180,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "1182:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 185,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1283:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1301:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 192,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1293:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1263:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:1"
									},
									"scope": 1187,
									"src": "1251:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2057,
										2069
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1488:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1517:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 210,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "1537:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 209,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1310",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1574:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "1594:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1456_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1456_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 215,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1456",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1666:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 221,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1187_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2057,
															"src": "1642:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 226,
												"nodeType": "Return",
												"src": "1498:180:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 202,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2058,
												"src": "1456:6:1"
											},
											{
												"id": 203,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2070,
												"src": "1464:7:1"
											}
										],
										"src": "1447:25:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1407:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1482:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:1"
									},
									"scope": 1187,
									"src": "1380:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2159:28:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "2176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "2169:11:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2097:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2144:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:1"
									},
									"scope": 1187,
									"src": "2084:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2333:46:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 249,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2350:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2360:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"id": 252,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "2364:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "2343:29:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:1",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2266:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2283:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2324:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:1"
									},
									"scope": 1187,
									"src": "2247:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2678:410:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 269,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2692:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 271,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2711:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2688:121:1",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "2723:86:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 275,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "2770:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 277,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "2782:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 274,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2744:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 280,
															"nodeType": "RevertStatement",
															"src": "2737:61:1"
														}
													]
												}
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2819:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 286,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2866:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:1"
											},
											{
												"body": {
													"id": 321,
													"nodeType": "Block",
													"src": "2939:112:1",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 306,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2953:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"id": 307,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "2967:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 312,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3010:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 310,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "2982:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1638,
																				"src": "2982:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 316,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3037:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 314,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 263,
																					"src": "3014:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1625,
																				"src": "3014:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 309,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "2972:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 299,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2913:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 300,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2917:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"initializationExpression": {
													"assignments": [
														296
													],
													"declarations": [
														{
															"constant": false,
															"id": 296,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 322,
															"src": "2898:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 295,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 298,
													"initialValue": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:1",
														"subExpression": {
															"id": 303,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2936:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:1"
											},
											{
												"expression": {
													"id": 323,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "3068:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 324,
												"nodeType": "Return",
												"src": "3061:20:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2569:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2604:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2660:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:1"
									},
									"scope": 1187,
									"src": "2536:552:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "3231:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "3260:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3274:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3284:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3241:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3183:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3201:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 1187,
									"src": "3156:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "3463:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 352,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3480:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 354,
														"indexExpression": {
															"id": 353,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "3499:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 356,
													"indexExpression": {
														"id": 355,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3508:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "3473:44:1"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3393:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3410:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3457:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:1"
									},
									"scope": 1187,
									"src": "3367:157:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3704:238:1",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "3714:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "3731:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3757:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 379,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3765:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 382,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3793:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 383,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "3799:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 381,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "3776:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "3753:129:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "3808:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 388,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "3858:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 389,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3866:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 387,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3829:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 391,
															"nodeType": "RevertStatement",
															"src": "3822:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3909:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3915:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3919:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3923:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3930:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "3891:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:1"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3617:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3631:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3643:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3670:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:1"
									},
									"scope": 1187,
									"src": "3591:351:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1309
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4198:245:1",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "4208:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 421,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "4225:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 425,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4259:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 428,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4287:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4293:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4270:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4247:129:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4302:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "4352:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 435,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "4360:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 433,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4323:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4316:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4408:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4414:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4418:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 444,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4423:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4431:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "4385:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4054:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4076:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4096:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4126:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4159:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:1"
									},
									"scope": 1187,
									"src": "4014:429:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5251:1174:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5265:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 465,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "5279:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "5261:117:1",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "5294:84:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 469,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "5341:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 471,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "5353:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 468,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "5315:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 474,
															"nodeType": "RevertStatement",
															"src": "5308:59:1"
														}
													]
												}
											},
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 601,
														"src": "5388:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 479,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "5407:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:1"
											},
											{
												"body": {
													"id": 562,
													"nodeType": "Block",
													"src": "5471:650:1",
													"statements": [
														{
															"assignments": [
																494
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 494,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5485:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 499,
															"initialValue": {
																"arguments": [
																	{
																		"id": 497,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5521:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 495,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "5498:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "5498:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:1"
														},
														{
															"assignments": [
																501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 501,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5537:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 506,
															"initialValue": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5579:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 502,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5553:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "5553:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "5600:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 508,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 545,
															"nodeType": "IfStatement",
															"src": "5596:420:1",
															"trueBody": {
																"id": 544,
																"nodeType": "Block",
																"src": "5620:396:1",
																"statements": [
																	{
																		"assignments": [
																			514
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 514,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 544,
																				"src": "5638:19:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 520,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 515,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "5660:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 517,
																				"indexExpression": {
																					"id": 516,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "5670:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 519,
																			"indexExpression": {
																				"id": 518,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "5674:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 521,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "5701:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 522,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "5715:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 532,
																		"nodeType": "IfStatement",
																		"src": "5697:129:1",
																		"trueBody": {
																			"id": 531,
																			"nodeType": "Block",
																			"src": "5722:104:1",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 525,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 452,
																								"src": "5778:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 526,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 514,
																								"src": "5784:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 527,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 501,
																								"src": "5797:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 528,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5804:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 524,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 101,
																							"src": "5751:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																								"typeString": "function (address,uint256,uint256,uint256) pure returns (error)"
																							}
																						},
																						"id": 529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_error",
																							"typeString": "error"
																						}
																					},
																					"id": 530,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:1"
																				}
																			]
																		}
																	},
																	{
																		"id": 543,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:1",
																		"statements": [
																			{
																				"expression": {
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 533,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 178,
																								"src": "5942:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 536,
																							"indexExpression": {
																								"id": 534,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5952:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 537,
																						"indexExpression": {
																							"id": 535,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 452,
																							"src": "5956:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 538,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 514,
																							"src": "5964:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 539,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 501,
																							"src": "5978:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 542,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:1"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6034:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 547,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 561,
															"nodeType": "IfStatement",
															"src": "6030:81:1",
															"trueBody": {
																"id": 560,
																"nodeType": "Block",
																"src": "6052:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 552,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "6070:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 555,
																					"indexExpression": {
																						"id": 553,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6080:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 556,
																				"indexExpression": {
																					"id": 554,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "6084:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 557,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "6091:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 559,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5450:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 487,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5454:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"initializationExpression": {
													"assignments": [
														483
													],
													"declarations": [
														{
															"constant": false,
															"id": 483,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 563,
															"src": "5435:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 485,
													"initialValue": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:1",
														"subExpression": {
															"id": 490,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5468:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 492,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 564,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6135:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "6343:76:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6386:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6392:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6396:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 596,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6401:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 591,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "6362:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "6357:51:1"
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "6131:288:1",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "6152:185:1",
													"statements": [
														{
															"assignments": [
																569
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 569,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6166:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 574,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 570,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6179:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "6179:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:1"
														},
														{
															"assignments": [
																576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 576,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6218:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 575,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 581,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 577,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6234:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1625,
																	"src": "6234:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 583,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6296:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6306:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 585,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6312:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 586,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "6316:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 587,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "6320:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 582,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "6281:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 589,
															"nodeType": "EmitStatement",
															"src": "6276:50:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:1",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5161:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5175:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5187:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5209:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 459,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:1"
									},
									"scope": 1187,
									"src": "5144:1281:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "7195:499:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7213:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7219:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7223:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 622,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "7228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 618,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "7205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7249:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 626,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "7245:443:1",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "7267:421:1",
													"statements": [
														{
															"assignments": [
																632
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 632,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 675,
																	"src": "7281:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 635,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 633,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "7300:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 636,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "7330:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "7571:107:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 665,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7625:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 666,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7635:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 667,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7641:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 668,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7645:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 669,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7650:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 670,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7658:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 664,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7589:35:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 672,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:1"
																	}
																]
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "7326:352:1",
															"trueBody": {
																"id": 663,
																"nodeType": "Block",
																"src": "7347:218:1",
																"statements": [
																	{
																		"assignments": [
																			641
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 641,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7365:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 640,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 646,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 642,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7378:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1625,
																				"src": "7378:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:1"
																	},
																	{
																		"assignments": [
																			648
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 648,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7421:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 647,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 653,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 649,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7437:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1625,
																				"src": "7437:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7514:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7524:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 657,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7530:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 658,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "7534:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 659,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 648,
																					"src": "7538:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 660,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7545:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 654,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "7483:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 662,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:1",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7049:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7071:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7091:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 609,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7121:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7154:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:1"
									},
									"scope": 1187,
									"src": "7004:690:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "8259:355:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8273:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 693,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "8269:88:1",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "8291:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 698,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8312:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 704,
															"nodeType": "RevertStatement",
															"src": "8305:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 707,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "8370:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 708,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "8366:88:1",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "8390:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 714,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 713,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "8411:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 719,
															"nodeType": "RevertStatement",
															"src": "8404:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													726,
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8464:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 724,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 725,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8486:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 727,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "8532:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "8536:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "8513:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8579:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "8585:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "8589:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "8594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 740,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 735,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8552:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:1"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:1",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8178:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8192:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8204:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8216:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8231:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:1"
									},
									"scope": 1187,
									"src": "8151:463:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "9194:266:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9208:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 761,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "9204:88:1",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "9226:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 767,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 766,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "9247:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 772,
															"nodeType": "RevertStatement",
															"src": "9240:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "9305:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "9301:88:1",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "9325:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 782,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "9346:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "9339:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9425:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9431:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9435:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 794,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9440:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "9448:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 790,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9398:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:1"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9056:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9078:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9098:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 750,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9128:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 753,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 754,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9161:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:1"
									},
									"scope": 1187,
									"src": "9015:445:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "10338:30:1",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "10348:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 806,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "10355:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:1"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10299:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:1"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:1"
									},
									"scope": 1187,
									"src": "10282:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "10828:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "10842:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 823,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "10838:88:1",
												"trueBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "10860:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 829,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 828,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "10881:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 834,
															"nodeType": "RevertStatement",
															"src": "10874:41:1"
														}
													]
												}
											},
											{
												"assignments": [
													841,
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10936:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 839,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10958:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 842,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 843,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11004:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 847,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "11008:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "10985:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11063:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11067:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 857,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "11072:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 858,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 850,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11024:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:1"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:1",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10761:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10773:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10785:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10800:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:1"
									},
									"scope": 1187,
									"src": "10746:346:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "11630:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "11644:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 877,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "11640:88:1",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "11662:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 883,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 882,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "11683:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 888,
															"nodeType": "RevertStatement",
															"src": "11676:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "11776:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "11780:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 898,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "11785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 899,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "11793:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11737:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:1"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11543:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11555:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 866,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 867,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11577:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 869,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 870,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11602:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:1"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:1"
									},
									"scope": 1187,
									"src": "11523:282:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "12164:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "12178:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 914,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "12174:88:1",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "12198:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 920,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 919,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12219:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 925,
															"nodeType": "RevertStatement",
															"src": "12212:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													932,
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12272:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 930,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 931,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12294:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 933,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 934,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"arguments": [
														{
															"id": 937,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12340:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 938,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "12344:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "12321:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 942,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "12387:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 943,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "12405:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 948,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "12410:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 941,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12360:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:1"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:1",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12114:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12128:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12140:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:1"
									},
									"scope": 1187,
									"src": "12099:329:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "12874:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "12888:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 966,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "12884:88:1",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "12908:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 972,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 971,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12929:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 977,
															"nodeType": "RevertStatement",
															"src": "12922:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 981,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "13008:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "13026:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 987,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "13031:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 980,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12981:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:1"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12804:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12818:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 957,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 958,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12840:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 960,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 961,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:1"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:1"
									},
									"scope": 1187,
									"src": "12784:265:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "13361:222:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "13375:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1003,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "13371:94:1",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "13399:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1009,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1008,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "13420:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1014,
															"nodeType": "RevertStatement",
															"src": "13413:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1017,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "13474:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1020,
															"indexExpression": {
																"id": 1018,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "13493:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1019,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13500:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1022,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "13512:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1026,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "13550:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13557:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "13567:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1025,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "13535:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "EmitStatement",
												"src": "13530:46:1"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13296:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13311:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13329:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:1"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:1"
									},
									"scope": 1187,
									"src": "13268:315:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "13953:782:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1048,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "13967:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "13963:766:1",
												"trueBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "13987:742:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1077,
																		"nodeType": "Block",
																		"src": "14103:206:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1070,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1066,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1064,
																						"src": "14125:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1067,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "14137:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1068,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:1",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1333,
																							"src": "14137:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1069,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1076,
																				"nodeType": "IfStatement",
																				"src": "14121:174:1",
																				"trueBody": {
																					"id": 1075,
																					"nodeType": "Block",
																					"src": "14182:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1072,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14273:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1071,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14250:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1073,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1074,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1078,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1065,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1064,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1078,
																				"src": "14086:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1063,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:1"
																	},
																	"src": "14077:232:1"
																},
																{
																	"block": {
																		"id": 1094,
																		"nodeType": "Block",
																		"src": "14338:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1082,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1080,
																							"src": "14360:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1092,
																					"nodeType": "Block",
																					"src": "14515:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:1",
																								"nodeType": "YulBlock",
																								"src": "14601:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:1",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:1"
																													},
																													"nativeSrc": "14634:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:1"
																													},
																													"nativeSrc": "14651:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:1"
																											},
																											"nativeSrc": "14627:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:1"
																										},
																										"nativeSrc": "14627:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1091,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:1"
																						}
																					]
																				},
																				"id": 1093,
																				"nodeType": "IfStatement",
																				"src": "14356:349:1",
																				"trueBody": {
																					"id": 1090,
																					"nodeType": "Block",
																					"src": "14380:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1087,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14487:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1086,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14464:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1088,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1089,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1095,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1081,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1080,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1095,
																				"src": "14317:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1079,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:1"
																	},
																	"src": "14310:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1057,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "14044:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "14054:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1059,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "14060:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1060,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "14064:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1061,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "14071:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1054,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "14022:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1053,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "14005:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:1",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1333,
																	"src": "14005:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1096,
															"nodeType": "TryStatement",
															"src": "14001:718:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:1",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13810:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13836:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13858:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13878:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13898:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13921:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:1"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:1"
									},
									"scope": 1187,
									"src": "13761:974:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "15140:824:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1118,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "15154:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"nodeType": "IfStatement",
												"src": "15150:808:1",
												"trueBody": {
													"id": 1167,
													"nodeType": "Block",
													"src": "15174:784:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1147,
																		"nodeType": "Block",
																		"src": "15327:211:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1136,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "15349:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1137,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "15361:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1138,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:1",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1351,
																							"src": "15361:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1146,
																				"nodeType": "IfStatement",
																				"src": "15345:179:1",
																				"trueBody": {
																					"id": 1145,
																					"nodeType": "Block",
																					"src": "15411:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1142,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15502:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1141,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15479:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1143,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1144,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1148,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1135,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1134,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1148,
																				"src": "15297:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1133,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:1"
																	},
																	"src": "15271:267:1"
																},
																{
																	"block": {
																		"id": 1164,
																		"nodeType": "Block",
																		"src": "15567:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1152,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1150,
																							"src": "15589:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1162,
																					"nodeType": "Block",
																					"src": "15744:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:1",
																								"nodeType": "YulBlock",
																								"src": "15830:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:1",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:1"
																													},
																													"nativeSrc": "15863:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:1"
																													},
																													"nativeSrc": "15880:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:1"
																											},
																											"nativeSrc": "15856:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:1"
																										},
																										"nativeSrc": "15856:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1161,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:1"
																						}
																					]
																				},
																				"id": 1163,
																				"nodeType": "IfStatement",
																				"src": "15585:349:1",
																				"trueBody": {
																					"id": 1160,
																					"nodeType": "Block",
																					"src": "15609:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1157,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15716:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1156,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15693:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1158,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1159,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1165,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1151,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1150,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1165,
																				"src": "15546:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1149,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:1"
																	},
																	"src": "15539:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "15236:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1128,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "15246:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1129,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "15252:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1130,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "15257:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "15265:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1124,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "15209:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1123,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "15192:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:1",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1351,
																	"src": "15192:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1166,
															"nodeType": "TryStatement",
															"src": "15188:760:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:1",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "14977:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15003:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15045:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15075:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1111,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15108:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:1"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:1"
									},
									"scope": 1187,
									"src": "14923:1041:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "16238:691:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:1",
													"nodeType": "YulBlock",
													"src": "16300:623:1",
													"statements": [
														{
															"nativeSrc": "16358:21:1",
															"nodeType": "YulAssignment",
															"src": "16358:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:1"
																},
																"nativeSrc": "16368:11:1",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:1"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:1"
																},
																"nativeSrc": "16429:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:1"
															},
															"nativeSrc": "16429:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:1"
																		},
																		"nativeSrc": "16563:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:1"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:1"
																},
																"nativeSrc": "16556:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:1"
															},
															"nativeSrc": "16556:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:1"
														},
														{
															"nativeSrc": "16682:27:1",
															"nodeType": "YulAssignment",
															"src": "16682:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:1"
																},
																"nativeSrc": "16692:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:1"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:1"
																},
																"nativeSrc": "16722:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:1"
															},
															"nativeSrc": "16722:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:1"
																		},
																		"nativeSrc": "16759:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:1"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:1"
																},
																"nativeSrc": "16752:35:1",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:1"
															},
															"nativeSrc": "16752:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:1"
																		},
																		"nativeSrc": "16895:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:1"
																},
																"nativeSrc": "16882:31:1",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:1"
															},
															"nativeSrc": "16882:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1173,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:1",
														"valueSize": 1
													},
													{
														"declaration": 1175,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:1",
														"valueSize": 1
													}
												],
												"id": 1184,
												"nodeType": "InlineAssembly",
												"src": "16291:632:1"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:1",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16117:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:1"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16188:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16213:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:1"
									},
									"scope": 1187,
									"src": "16080:849:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1188,
							"src": "727:16204:1",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "109:16823:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC165": [
							2070
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 2071,
							"src": "136:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1190,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2070,
										"src": "144:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1193,
										"name": "IERC165",
										"nameLocations": [
											"358:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2070,
										"src": "358:7:2"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1192,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								2070
							],
							"name": "IERC1155",
							"nameLocation": "346:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:2",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1207,
									"name": "TransferSingle",
									"nameLocation": "508:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "523:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "549:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "571:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "591:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "603:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:2"
									},
									"src": "502:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1222,
									"name": "TransferBatch",
									"nameLocation": "779:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "802:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "836:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "866:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "894:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1215,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1216,
													"nodeType": "ArrayTypeName",
													"src": "894:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "917:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1218,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1219,
													"nodeType": "ArrayTypeName",
													"src": "917:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:2"
									},
									"src": "773:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1231,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1119:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1144:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1170:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:2"
									},
									"src": "1098:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1238,
									"name": "URI",
									"nameLocation": "1545:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1549:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1563:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:2"
									},
									"src": "1539:44:2"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:2",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1785:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:2"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1837:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:2"
									},
									"scope": 1310,
									"src": "1766:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2078:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1250,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1251,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2115:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1253,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1254,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2167:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:2"
									},
									"scope": 1310,
									"src": "2045:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2471:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2489:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:2"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:2"
									},
									"scope": 1310,
									"src": "2444:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2685:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2702:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:2"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2743:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:2"
									},
									"scope": 1310,
									"src": "2659:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3696:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3710:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3722:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3734:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3749:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:2"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:2"
									},
									"scope": 1310,
									"src": "3670:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "3785:814:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4613:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4652:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4644:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4674:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4666:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4705:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4686:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4686:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ArrayTypeName",
													"src": "4686:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4737:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4718:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4718:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1303,
													"nodeType": "ArrayTypeName",
													"src": "4718:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4753:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:144:2"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4787:0:2"
									},
									"scope": 1310,
									"src": "4604:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1311,
							"src": "336:4454:2",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "110:4681:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							2070
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 2071,
							"src": "144:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1313,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2070,
										"src": "152:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1316,
										"name": "IERC165",
										"nameLocations": [
											"357:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2070,
										"src": "357:7:3"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:3",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								2070
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:3",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1238:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1264:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1286:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1306:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1329:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:3"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1373:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:3"
									},
									"scope": 1352,
									"src": "1202:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:3",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2427:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2453:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2475:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1339,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1340,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2507:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1342,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1343,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2542:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:3"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2586:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:3"
									},
									"scope": 1352,
									"src": "2386:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1353,
							"src": "327:2269:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
					"exportedSymbols": {
						"ERC1155": [
							1187
						],
						"ERC1155URIStorage": [
							1440
						],
						"Strings": [
							2034
						]
					},
					"id": 1441,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "130:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 2035,
							"src": "156:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1355,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2034,
										"src": "164:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 1188,
							"src": "208:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1357,
										"name": "ERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1187,
										"src": "216:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1360,
										"name": "ERC1155",
										"nameLocations": [
											"405:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "405:7:4"
									},
									"id": 1361,
									"nodeType": "InheritanceSpecifier",
									"src": "405:7:4"
								}
							],
							"canonicalName": "ERC1155URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1359,
								"nodeType": "StructuredDocumentation",
								"src": "249:116:4",
								"text": " @dev ERC1155 token with storage based token URI management.\n Inspired by the ERC721URIStorage extension"
							},
							"fullyImplemented": true,
							"id": 1440,
							"linearizedBaseContracts": [
								1440,
								1187,
								136,
								1456,
								1310,
								2058,
								2070,
								1669
							],
							"name": "ERC1155URIStorage",
							"nameLocation": "384:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1364,
									"libraryName": {
										"id": 1362,
										"name": "Strings",
										"nameLocations": [
											"425:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2034,
										"src": "425:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "419:26:4",
									"typeName": {
										"id": 1363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "437:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1367,
									"mutability": "mutable",
									"name": "_baseURI",
									"nameLocation": "491:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "476:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1365,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "476:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "",
										"id": 1366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "502:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
											"typeString": "literal_string \"\""
										},
										"value": ""
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1371,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "593:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1440,
									"src": "550:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1370,
										"keyName": "tokenId",
										"keyNameLocation": "566:7:4",
										"keyType": {
											"id": 1368,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "558:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "550:34:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1369,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "577:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										239
									],
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "1414:249:4",
										"statements": [
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "tokenURI",
														"nameLocation": "1438:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1405,
														"src": "1424:22:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1380,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1424:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"baseExpression": {
														"id": 1382,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "1449:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1384,
													"indexExpression": {
														"id": 1383,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "1460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1449:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1424:44:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1388,
																		"name": "tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "1579:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1573:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1386,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1573:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1573:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1589:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1573:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1598:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1573:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 1401,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "1648:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1399,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1638:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155URIStorage_$1440_$",
																	"typeString": "type(contract super ERC1155URIStorage)"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1644:3:4",
															"memberName": "uri",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 239,
															"src": "1638:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256) view returns (string memory)"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1638:18:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1573:83:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 1396,
																"name": "_baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "1616:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															{
																"id": 1397,
																"name": "tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "1626:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1602:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 1393,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "1602:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1609:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "1602:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1602:33:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1404,
												"nodeType": "Return",
												"src": "1566:90:4"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "610:716:4",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the concatenation of the `_baseURI`\n and the token-specific uri if the latter is set\n This enables the following behaviors:\n - if `_tokenURIs[tokenId]` is set, then the result is the concatenation\n   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`\n   is empty per default);\n - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`\n   which in most cases will contain `ERC1155._uri`;\n - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a\n   uri value set, then the result is empty."
									},
									"functionSelector": "0e89341c",
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1340:3:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1376,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1381:8:4"
									},
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1352:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "1344:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1343:17:4"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "1399:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1377,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1399:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:15:4"
									},
									"scope": 1440,
									"src": "1331:332:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "1818:88:4",
										"statements": [
											{
												"expression": {
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1414,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "1828:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1416,
														"indexExpression": {
															"id": 1415,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "1839:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1828:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1417,
														"name": "tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "1850:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1828:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "1828:30:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1422,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "1881:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1421,
																"name": "uri",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1406
																],
																"referencedDeclaration": 1406,
																"src": "1877:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) view returns (string memory)"
																}
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1877:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1424,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "1891:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1420,
														"name": "URI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "1873:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "EmitStatement",
												"src": "1868:31:4"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "1669:69:4",
										"text": " @dev Sets `tokenURI` as the tokenURI of `tokenId`."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "1752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1768:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "1760:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "1791:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "1777:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1777:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:41:4"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:4"
									},
									"scope": 1440,
									"src": "1743:163:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "2049:35:4",
										"statements": [
											{
												"expression": {
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1434,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "2059:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1435,
														"name": "baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "2070:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2059:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "2059:18:4"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "1912:71:4",
										"text": " @dev Sets `baseURI` as the `_baseURI` for all tokens"
									},
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBaseURI",
									"nameLocation": "1997:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "baseURI",
												"nameLocation": "2023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "2009:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:23:4"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:0:4"
									},
									"scope": 1440,
									"src": "1988:96:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1441,
							"src": "366:1720:4",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "130:1957:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC1155MetadataURI": [
							1456
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1442,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1444,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1311,
							"src": "158:41:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1443,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "166:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1446,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "399:8:5"
									},
									"id": 1447,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1456,
							"linearizedBaseContracts": [
								1456,
								1310,
								2070
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "624:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:5"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "659:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:5"
									},
									"scope": 1456,
									"src": "611:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1457,
							"src": "366:310:5",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "132:545:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1639
						],
						"Math": [
							3124
						],
						"StorageSlot": [
							1779
						]
					},
					"id": 1640,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1640,
							"sourceUnit": 1780,
							"src": "126:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1459,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "134:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1640,
							"sourceUnit": 3125,
							"src": "173:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3124,
										"src": "181:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:6",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1639,
							"linearizedBaseContracts": [
								1639
							],
							"name": "Arrays",
							"nameLocation": "284:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1466,
									"libraryName": {
										"id": 1464,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1779,
										"src": "303:11:6"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:6",
									"typeName": {
										"id": 1465,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "843:834:6",
										"statements": [
											{
												"assignments": [
													1478
												],
												"declarations": [
													{
														"constant": false,
														"id": 1478,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1548,
														"src": "853:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"hexValue": "30",
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:6"
											},
											{
												"assignments": [
													1482
												],
												"declarations": [
													{
														"constant": false,
														"id": 1482,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1548,
														"src": "878:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1481,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1485,
												"initialValue": {
													"expression": {
														"id": 1483,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "893:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1486,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "920:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1492,
												"nodeType": "IfStatement",
												"src": "916:48:6",
												"trueBody": {
													"id": 1491,
													"nodeType": "Block",
													"src": "931:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1476,
															"id": 1490,
															"nodeType": "Return",
															"src": "945:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 1524,
													"nodeType": "Block",
													"src": "993:423:6",
													"statements": [
														{
															"assignments": [
																1497
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1497,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1524,
																	"src": "1007:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1496,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1503,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1500,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "1034:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1501,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1482,
																		"src": "1039:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1498,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3124,
																		"src": "1021:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3124_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2298,
																	"src": "1021:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1505,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1470,
																				"src": "1282:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1506,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1497,
																				"src": "1289:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1504,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1570,
																				1591,
																				1612
																			],
																			"referencedDeclaration": 1612,
																			"src": "1269:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1684_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1683,
																	"src": "1269:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1509,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "1302:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1522,
																"nodeType": "Block",
																"src": "1360:46:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1516,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1478,
																				"src": "1378:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1517,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1497,
																					"src": "1384:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1518,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1521,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:6"
																	}
																]
															},
															"id": 1523,
															"nodeType": "IfStatement",
															"src": "1265:141:6",
															"trueBody": {
																"id": 1515,
																"nodeType": "Block",
																"src": "1311:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1511,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1482,
																				"src": "1329:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1512,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1497,
																				"src": "1336:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1514,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1493,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "981:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1494,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "987:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1525,
												"nodeType": "WhileStatement",
												"src": "974:442:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1526,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "1533:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1530,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "1557:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1531,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "1564:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1529,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1570,
																		1591,
																		1612
																	],
																	"referencedDeclaration": 1612,
																	"src": "1544:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1684_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1683,
															"src": "1544:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1536,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "1582:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1546,
													"nodeType": "Block",
													"src": "1636:35:6",
													"statements": [
														{
															"expression": {
																"id": 1544,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "1657:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1476,
															"id": 1545,
															"nodeType": "Return",
															"src": "1650:10:6"
														}
													]
												},
												"id": 1547,
												"nodeType": "IfStatement",
												"src": "1529:142:6",
												"trueBody": {
													"id": 1543,
													"nodeType": "Block",
													"src": "1591:39:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1539,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1478,
																	"src": "1612:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1476,
															"id": 1542,
															"nodeType": "Return",
															"src": "1605:14:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:6",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "769:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1468,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1469,
													"nodeType": "ArrayTypeName",
													"src": "769:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "794:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:6"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "834:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:6"
									},
									"scope": 1639,
									"src": "745:932:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "1993:459:6",
										"statements": [
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "2003:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1561,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:6"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:6",
													"nodeType": "YulBlock",
													"src": "2316:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:6"
																},
																"nativeSrc": "2330:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:6"
															},
															"nativeSrc": "2330:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:6"
														},
														{
															"nativeSrc": "2362:36:6",
															"nodeType": "YulAssignment",
															"src": "2362:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:6"
																		},
																		"nativeSrc": "2374:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:6"
																},
																"nativeSrc": "2370:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1553,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1555,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1562,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:6",
														"valueSize": 1
													}
												],
												"id": 1564,
												"nodeType": "InlineAssembly",
												"src": "2307:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1565,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "2424:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:6",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "2424:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1675_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1675_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1560,
												"id": 1568,
												"nodeType": "Return",
												"src": "2417:28:6"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1901:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1551,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1552,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1924:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:6"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1960:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1675_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1558,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1557,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:6",
															"1972:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1675,
														"src": "1960:23:6"
													},
													"referencedDeclaration": 1675,
													"src": "1960:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1675_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:6"
									},
									"scope": 1639,
									"src": "1879:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "2768:459:6",
										"statements": [
											{
												"assignments": [
													1583
												],
												"declarations": [
													{
														"constant": false,
														"id": 1583,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1590,
														"src": "2778:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1582,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1584,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:6",
													"nodeType": "YulBlock",
													"src": "3091:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:6"
																},
																"nativeSrc": "3105:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:6"
															},
															"nativeSrc": "3105:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:6"
														},
														{
															"nativeSrc": "3137:36:6",
															"nodeType": "YulAssignment",
															"src": "3137:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:6"
																		},
																		"nativeSrc": "3149:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:6"
																},
																"nativeSrc": "3145:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1574,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1576,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1583,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:6",
														"valueSize": 1
													}
												],
												"id": 1585,
												"nodeType": "InlineAssembly",
												"src": "3082:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1586,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "3199:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:6",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1723,
														"src": "3199:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1681_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1681_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1589,
												"nodeType": "Return",
												"src": "3192:28:6"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2676:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2699:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:6"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2735:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1681_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1578,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:6",
															"2747:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1681,
														"src": "2735:23:6"
													},
													"referencedDeclaration": 1681,
													"src": "2735:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1681_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:6"
									},
									"scope": 1639,
									"src": "2654:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "3543:459:6",
										"statements": [
											{
												"assignments": [
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "3553:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1603,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:6"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:6",
													"nodeType": "YulBlock",
													"src": "3866:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:6"
																},
																"nativeSrc": "3880:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:6"
															},
															"nativeSrc": "3880:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:6"
														},
														{
															"nativeSrc": "3912:36:6",
															"nodeType": "YulAssignment",
															"src": "3912:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:6"
																		},
																		"nativeSrc": "3924:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:6"
																},
																"nativeSrc": "3920:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1595,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1597,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1604,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:6",
														"valueSize": 1
													}
												],
												"id": 1606,
												"nodeType": "InlineAssembly",
												"src": "3857:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1607,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "3974:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:6",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1734,
														"src": "3974:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1684_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1610,
												"nodeType": "Return",
												"src": "3967:28:6"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3451:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1593,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1594,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3474:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:6"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3510:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1600,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1599,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:6",
															"3522:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1684,
														"src": "3510:23:6"
													},
													"referencedDeclaration": 1684,
													"src": "3510:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:6"
									},
									"scope": 1639,
									"src": "3429:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "4303:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:6",
													"nodeType": "YulBlock",
													"src": "4322:73:6",
													"statements": [
														{
															"nativeSrc": "4336:49:6",
															"nodeType": "YulAssignment",
															"src": "4336:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:6"
																				},
																				"nativeSrc": "4353:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:6"
																				},
																				"nativeSrc": "4369:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:6"
																		},
																		"nativeSrc": "4349:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:6"
																},
																"nativeSrc": "4343:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1616,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1618,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:6",
														"valueSize": 1
													}
												],
												"id": 1623,
												"nodeType": "InlineAssembly",
												"src": "4313:82:6"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "4232:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1614,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1615,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "4254:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:6"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "4290:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:6"
									},
									"scope": 1639,
									"src": "4204:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "4702:98:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:6",
													"nodeType": "YulBlock",
													"src": "4721:73:6",
													"statements": [
														{
															"nativeSrc": "4735:49:6",
															"nodeType": "YulAssignment",
															"src": "4735:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:6"
																				},
																				"nativeSrc": "4752:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:6",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:6"
																				},
																				"nativeSrc": "4768:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:6"
																		},
																		"nativeSrc": "4748:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:6"
																},
																"nativeSrc": "4742:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1629,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1631,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:6",
														"valueSize": 1
													}
												],
												"id": 1636,
												"nodeType": "InlineAssembly",
												"src": "4712:82:6"
											}
										]
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4631:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1627,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1628,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4653:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:6"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4689:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:6"
									},
									"scope": 1639,
									"src": "4603:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1640,
							"src": "276:4526:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1669
						]
					},
					"id": 1670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1641,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1642,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1669,
							"linearizedBaseContracts": [
								1669
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1647,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1649,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1669,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1656,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1655,
												"id": 1658,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1669,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1664,
												"id": 1666,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1669,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1670,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1779
						]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1671,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1672,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1779,
							"linearizedBaseContracts": [
								1779
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1675,
									"members": [
										{
											"constant": false,
											"id": 1674,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1675,
											"src": "1300:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1673,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1271:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1678,
									"members": [
										{
											"constant": false,
											"id": 1677,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1678,
											"src": "1355:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1676,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1326:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1681,
									"members": [
										{
											"constant": false,
											"id": 1680,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1681,
											"src": "1407:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1679,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1378:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1684,
									"members": [
										{
											"constant": false,
											"id": 1683,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1684,
											"src": "1462:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1682,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1433:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1687,
									"members": [
										{
											"constant": false,
											"id": 1686,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1687,
											"src": "1516:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1685,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1488:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1690,
									"members": [
										{
											"constant": false,
											"id": 1689,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1690,
											"src": "1568:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1688,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:8",
									"nodeType": "StructDefinition",
									"scope": 1779,
									"src": "1541:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "1768:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:8",
													"nodeType": "YulBlock",
													"src": "1830:38:8",
													"statements": [
														{
															"nativeSrc": "1844:14:8",
															"nodeType": "YulAssignment",
															"src": "1844:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:8",
																"nodeType": "YulIdentifier",
																"src": "1854:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1697,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1693,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:8",
														"valueSize": 1
													}
												],
												"id": 1699,
												"nodeType": "InlineAssembly",
												"src": "1821:47:8"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "1708:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:8"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "1745:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1675_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1696,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1695,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1675,
														"src": "1745:11:8"
													},
													"referencedDeclaration": 1675,
													"src": "1745:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1675_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:8"
									},
									"scope": 1779,
									"src": "1684:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "2056:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:8",
													"nodeType": "YulBlock",
													"src": "2118:38:8",
													"statements": [
														{
															"nativeSrc": "2132:14:8",
															"nodeType": "YulAssignment",
															"src": "2132:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:8",
																"nodeType": "YulIdentifier",
																"src": "2142:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1708,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1704,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:8",
														"valueSize": 1
													}
												],
												"id": 1710,
												"nodeType": "InlineAssembly",
												"src": "2109:47:8"
											}
										]
									},
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "1996:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1703,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:8"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "2033:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1678_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1707,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1706,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1678,
														"src": "2033:11:8"
													},
													"referencedDeclaration": 1678,
													"src": "2033:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1678_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:8"
									},
									"scope": 1779,
									"src": "1972:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "2344:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:8",
													"nodeType": "YulBlock",
													"src": "2406:38:8",
													"statements": [
														{
															"nativeSrc": "2420:14:8",
															"nodeType": "YulAssignment",
															"src": "2420:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:8",
																"nodeType": "YulIdentifier",
																"src": "2430:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1719,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1715,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:8",
														"valueSize": 1
													}
												],
												"id": 1721,
												"nodeType": "InlineAssembly",
												"src": "2397:47:8"
											}
										]
									},
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2284:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1714,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:8"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "2321:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1681_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1718,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1717,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1681,
														"src": "2321:11:8"
													},
													"referencedDeclaration": 1681,
													"src": "2321:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1681_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:8"
									},
									"scope": 1779,
									"src": "2260:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "2632:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:8",
													"nodeType": "YulBlock",
													"src": "2694:38:8",
													"statements": [
														{
															"nativeSrc": "2708:14:8",
															"nodeType": "YulAssignment",
															"src": "2708:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:8",
																"nodeType": "YulIdentifier",
																"src": "2718:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1730,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1726,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:8",
														"valueSize": 1
													}
												],
												"id": 1732,
												"nodeType": "InlineAssembly",
												"src": "2685:47:8"
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2572:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1725,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:8"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2609:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1729,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1728,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1684,
														"src": "2609:11:8"
													},
													"referencedDeclaration": 1684,
													"src": "2609:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1684_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:8"
									},
									"scope": 1779,
									"src": "2548:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "2917:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:8",
													"nodeType": "YulBlock",
													"src": "2979:38:8",
													"statements": [
														{
															"nativeSrc": "2993:14:8",
															"nodeType": "YulAssignment",
															"src": "2993:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:8",
																"nodeType": "YulIdentifier",
																"src": "3003:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1737,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:8",
														"valueSize": 1
													}
												],
												"id": 1743,
												"nodeType": "InlineAssembly",
												"src": "2970:47:8"
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "2858:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1736,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:8"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "2895:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1687_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1739,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1687,
														"src": "2895:10:8"
													},
													"referencedDeclaration": 1687,
													"src": "2895:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1687_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:8"
									},
									"scope": 1779,
									"src": "2835:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "3225:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:8",
													"nodeType": "YulBlock",
													"src": "3287:44:8",
													"statements": [
														{
															"nativeSrc": "3301:20:8",
															"nodeType": "YulAssignment",
															"src": "3301:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:8",
																"nodeType": "YulIdentifier",
																"src": "3311:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1752,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1748,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1754,
												"nodeType": "InlineAssembly",
												"src": "3278:53:8"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "3158:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1747,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:8"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "3203:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1687_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1751,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1750,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1687,
														"src": "3203:10:8"
													},
													"referencedDeclaration": 1687,
													"src": "3203:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1687_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:8"
									},
									"scope": 1779,
									"src": "3135:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "3513:106:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:8",
													"nodeType": "YulBlock",
													"src": "3575:38:8",
													"statements": [
														{
															"nativeSrc": "3589:14:8",
															"nodeType": "YulAssignment",
															"src": "3589:14:8",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:8",
																"nodeType": "YulIdentifier",
																"src": "3599:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1763,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1759,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:8",
														"valueSize": 1
													}
												],
												"id": 1765,
												"nodeType": "InlineAssembly",
												"src": "3566:47:8"
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3455:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1758,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:8"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "3492:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1690_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1762,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1761,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1690,
														"src": "3492:9:8"
													},
													"referencedDeclaration": 1690,
													"src": "3492:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1690_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:8"
									},
									"scope": 1779,
									"src": "3433:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "3816:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:8",
													"nodeType": "YulBlock",
													"src": "3878:44:8",
													"statements": [
														{
															"nativeSrc": "3892:20:8",
															"nodeType": "YulAssignment",
															"src": "3892:20:8",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:8",
																"nodeType": "YulIdentifier",
																"src": "3902:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1774,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1770,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1776,
												"nodeType": "InlineAssembly",
												"src": "3869:53:8"
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "3751:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:8"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "3795:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1690_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1772,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1690,
														"src": "3795:9:8"
													},
													"referencedDeclaration": 1690,
													"src": "3795:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1690_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:8"
									},
									"scope": 1779,
									"src": "3729:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1780,
							"src": "1245:2685:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3124
						],
						"SignedMath": [
							3229
						],
						"Strings": [
							2034
						]
					},
					"id": 2035,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2035,
							"sourceUnit": 3125,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1782,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3124,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1785,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2035,
							"sourceUnit": 3230,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1784,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3229,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1786,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2034,
							"linearizedBaseContracts": [
								2034
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1789,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2034,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1787,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1788,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1792,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2034,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1790,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1791,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1799,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1845,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1808
														],
														"declarations": [
															{
																"constant": false,
																"id": 1808,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1845,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1807,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1815,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1811,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1809,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3124,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3124_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2944,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1817
														],
														"declarations": [
															{
																"constant": false,
																"id": 1817,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1845,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1816,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1822,
														"initialValue": {
															"arguments": [
																{
																	"id": 1820,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1818,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1824
														],
														"declarations": [
															{
																"constant": false,
																"id": 1824,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1845,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1823,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1825,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1817,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1808,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1824,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1826,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1841,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1828,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1824,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1830,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1789,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1824,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1802,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1831,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1832,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1802,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1835,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1802,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1840,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1839,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1842,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1843,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1806,
														"id": 1844,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 2034,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1858,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1867,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1865,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3229,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3229_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3228,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1864,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1855,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1871,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1849,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1852,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 2034,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 1891,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1882,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1876,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1885,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1876,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1883,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3124,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3124_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3066,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1881,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1893,
																	1976,
																	1996
																],
																"referencedDeclaration": 1976,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1880,
														"id": 1890,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1878,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 2034,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1975,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													1904
												],
												"declarations": [
													{
														"constant": false,
														"id": 1904,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1975,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1906,
												"initialValue": {
													"id": 1905,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1896,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													1908
												],
												"declarations": [
													{
														"constant": false,
														"id": 1908,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1975,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1907,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1917,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1912,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1909,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1918,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1920,
														"indexExpression": {
															"hexValue": "30",
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1923,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1924,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1926,
														"indexExpression": {
															"hexValue": "31",
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 1958,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1944,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1908,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1946,
																	"indexExpression": {
																		"id": 1945,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1947,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1951,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1948,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1953,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1954,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1957,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1938,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1959,
												"initializationExpression": {
													"assignments": [
														1931
													],
													"declarations": [
														{
															"constant": false,
															"id": 1931,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1959,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1930,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1937,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1933,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 1941,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1943,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1960,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1969,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 1968,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1964,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1896,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1965,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1963,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1967,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1972,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1970,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1902,
												"id": 1974,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 2034,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1989,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1979,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1987,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1985,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1992,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1984,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1893,
															1976,
															1996
														],
														"referencedDeclaration": 1976,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1983,
												"id": 1994,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 1977,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 2034,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2008,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2006,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2013,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2001,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2011,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2020,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1999,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2018,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2017,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2026,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2001,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2024,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2023,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2005,
												"id": 2031,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2000,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 2034,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2035,
							"src": "251:2847:9",
							"usedErrors": [
								1799
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2058
						],
						"IERC165": [
							2070
						]
					},
					"id": 2059,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2036,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2038,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2059,
							"sourceUnit": 2071,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2037,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2070,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2040,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2070,
										"src": "687:7:10"
									},
									"id": 2041,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2039,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2058,
							"linearizedBaseContracts": [
								2058,
								2070
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2069
									],
									"body": {
										"id": 2056,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2049,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2051,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2070,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2070_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2070_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2050,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2070",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2048,
												"id": 2055,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2043,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 2058,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2059,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2070
						]
					},
					"id": 2071,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2060,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2061,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2070,
							"linearizedBaseContracts": [
								2070
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2063,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 2070,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2071,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3124
						]
					},
					"id": 3125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2072,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2073,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3124,
							"linearizedBaseContracts": [
								3124
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2076,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2081,
									"members": [
										{
											"id": 2077,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 2078,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 2079,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 2080,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 2111,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															2094
														],
														"declarations": [
															{
																"constant": false,
																"id": 2094,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2111,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2093,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2098,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2095,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2096,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2086,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2099,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2100,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2106,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2104,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2092,
															"id": 2105,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2108,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2109,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2092,
														"id": 2110,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2082,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 3124,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 2139,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2125,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2126,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2132,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2130,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2124,
															"id": 2131,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2134,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2116,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2135,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2118,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2137,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2124,
														"id": 2138,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 3124,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2181,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2153,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2160,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2158,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2152,
															"id": 2159,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2162
														],
														"declarations": [
															{
																"constant": false,
																"id": 2162,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2181,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2161,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2166,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2163,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2164,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2146,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2167,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2168,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2170,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2146,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2176,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2174,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2152,
															"id": 2175,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2178,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2179,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2152,
														"id": 2180,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 3124,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2209,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2195,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2202,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2200,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2194,
															"id": 2201,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2204,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2186,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2205,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2188,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2207,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2194,
														"id": 2208,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 3124,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2237,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2223,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2230,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2228,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2222,
															"id": 2229,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2232,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2214,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2216,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2222,
														"id": 2236,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 3124,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2249,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2250,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2253,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2244,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2252,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2248,
												"id": 2255,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2240,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 3124,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2274,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2267,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2260,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2268,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2262,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2260,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2266,
												"id": 2273,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2258,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 3124,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2285,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2286,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2288,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2289,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2290,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2292,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2284,
												"id": 2296,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2276,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 3124,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2308,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2316,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2315,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2311,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2312,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2303,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2307,
															"id": 2314,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2317,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2301,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2321,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2301,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2324,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2303,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2307,
												"id": 2330,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2299,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 3124,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2456,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2345
														],
														"declarations": [
															{
																"constant": false,
																"id": 2345,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2456,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2344,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2349,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2346,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2335,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2347,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2337,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2351
														],
														"declarations": [
															{
																"constant": false,
																"id": 2351,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2456,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2350,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2352,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2335,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2337,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2353,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2354,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2362,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2361,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2357,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2345,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2358,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2343,
																	"id": 2360,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2363,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2364,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2370,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2369,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2366,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2368,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2372
														],
														"declarations": [
															{
																"constant": false,
																"id": 2372,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2456,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2371,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2373,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2339,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2372,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2372,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2372,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2335,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2337,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2374,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2376
														],
														"declarations": [
															{
																"constant": false,
																"id": 2376,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2456,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2375,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2383,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2377,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2379,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2381,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2339,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2339,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2345,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2376,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2376,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2376,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2376,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2376,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2384,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2385,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2345,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2386,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2387,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2376,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2390,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2392
														],
														"declarations": [
															{
																"constant": false,
																"id": 2392,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2456,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2391,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2399,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2394,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2396,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2400,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2402,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2403,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2407,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2408,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2410,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2411,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2415,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2416,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2418,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2419,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2423,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2424,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2426,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2427,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2431,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2432,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2434,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2435,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2439,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2440,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2442,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2443,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2392,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2447,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2448,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2449,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2345,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2450,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2453,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2454,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2343,
														"id": 2455,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 3124,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2500,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2474
												],
												"declarations": [
													{
														"constant": false,
														"id": 2474,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2500,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2473,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2480,
												"initialValue": {
													"arguments": [
														{
															"id": 2476,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2477,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2478,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2475,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2458,
															2501
														],
														"referencedDeclaration": 2458,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2482,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2081",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2081",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2481,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3123,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2081_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2485,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2461,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2486,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2463,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2487,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2465,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2484,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2497,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2496,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2492,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2495,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2498,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2474,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2472,
												"id": 2499,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2459,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2466,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 3124,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2612,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2509,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2515,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2514,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2508,
															"id": 2513,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2517
												],
												"declarations": [
													{
														"constant": false,
														"id": 2517,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2612,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2526,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2520,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2504,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2519,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2780,
																			2815
																		],
																		"referencedDeclaration": 2780,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2524,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2611,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2527,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2528,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2529,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2530,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2533,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2537,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2538,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2539,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2540,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2541,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2544,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2548,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2549,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2550,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2551,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2552,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2555,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2559,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2560,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2561,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2562,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2563,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2566,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2570,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2571,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2572,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2573,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2574,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2577,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2581,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2582,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2583,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2584,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2585,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2588,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2592,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2593,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2594,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2517,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2595,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2504,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2596,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2599,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2603,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2605,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2517,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2606,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2504,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2607,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2604,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2508,
														"id": 2610,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2502,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 3124,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2647,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2646,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2625
														],
														"declarations": [
															{
																"constant": false,
																"id": 2625,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2646,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2624,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2629,
														"initialValue": {
															"arguments": [
																{
																	"id": 2627,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2616,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2626,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2613,
																	2648
																],
																"referencedDeclaration": 2613,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2630,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2625,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2632,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2619,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2631,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3123,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2081_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2636,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2634,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2635,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2637,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2616,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2623,
														"id": 2645,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2614,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2618,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2617,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 3124,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2779,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2657
												],
												"declarations": [
													{
														"constant": false,
														"id": 2657,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2779,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2659,
												"initialValue": {
													"hexValue": "30",
													"id": 2658,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2776,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2660,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2674,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2673,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2669,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2672,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2675,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2689,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2688,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2680,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2683,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2684,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2687,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2690,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2704,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2703,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2695,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2698,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2702,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2705,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2719,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2718,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2710,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2713,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2714,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2717,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2720,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2734,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2733,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2725,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2728,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2729,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2732,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2735,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2749,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2748,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2740,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2743,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2744,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2747,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2750,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2764,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2763,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2755,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2758,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2759,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2762,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2765,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2775,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2774,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2770,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2773,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2777,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2657,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2655,
												"id": 2778,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2649,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 3124,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2814,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2813,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2792
														],
														"declarations": [
															{
																"constant": false,
																"id": 2792,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2813,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2791,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2796,
														"initialValue": {
															"arguments": [
																{
																	"id": 2794,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2783,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2793,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2780,
																	2815
																],
																"referencedDeclaration": 2780,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2797,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2792,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2799,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2786,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2798,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3123,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2081_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2803,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2801,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2802,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2792,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2804,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2783,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2810,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2790,
														"id": 2812,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2781,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2785,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2784,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 3124,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2943,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2824
												],
												"declarations": [
													{
														"constant": false,
														"id": 2824,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2943,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2826,
												"initialValue": {
													"hexValue": "30",
													"id": 2825,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 2940,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2827,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2843,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2842,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2832,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2837,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2838,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2841,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2844,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2860,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2859,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2854,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2855,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2858,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2861,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2877,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2876,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2866,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2871,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2872,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2875,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2878,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2894,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 2893,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2883,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2888,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2889,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2892,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2895,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2911,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 2910,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2900,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2905,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2906,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2909,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2912,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2928,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 2927,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2917,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2922,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 2925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2923,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2926,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2929,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2939,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 2938,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2934,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2937,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2941,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2824,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2822,
												"id": 2942,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2816,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 3124,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2978,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 2977,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															2956
														],
														"declarations": [
															{
																"constant": false,
																"id": 2956,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2977,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2955,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2960,
														"initialValue": {
															"arguments": [
																{
																	"id": 2958,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2947,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2957,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2944,
																	2979
																],
																"referencedDeclaration": 2944,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2961,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2956,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2963,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2950,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2962,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3123,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2081_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2967,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2965,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2966,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2956,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2968,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2947,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2974,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2954,
														"id": 2976,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2945,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2949,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2948,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2979,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 3124,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3065,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													2988
												],
												"declarations": [
													{
														"constant": false,
														"id": 2988,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3065,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2987,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2990,
												"initialValue": {
													"hexValue": "30",
													"id": 2989,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 3062,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3005,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 3004,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2996,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2982,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2999,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 3002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3000,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2988,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3003,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3020,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 3019,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3011,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2982,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3014,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 3017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3015,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2988,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3018,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3021,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3035,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 3034,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3026,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2982,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3029,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 3032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3030,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2988,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3033,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3036,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3050,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 3049,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3041,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2982,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3044,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 3047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3045,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2988,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3048,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3051,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3061,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 3060,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3056,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2988,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3059,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3063,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2988,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2986,
												"id": 3064,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 2980,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 3124,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3103,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 3102,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															3078
														],
														"declarations": [
															{
																"constant": false,
																"id": 3078,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3102,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3077,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3082,
														"initialValue": {
															"arguments": [
																{
																	"id": 3080,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3069,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3079,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3066,
																	3104
																],
																"referencedDeclaration": 3066,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3083,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3078,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3085,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3072,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2081",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3084,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3123,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2081_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3092,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3087,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3090,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3088,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3078,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3089,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3091,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3093,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3069,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3076,
														"id": 3101,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3067,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3071,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3070,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 3124,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3122,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3115,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3108,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2081",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2081",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3113,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3112,
												"id": 3121,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 3105,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2081",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3107,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3106,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2081,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 2081,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2081",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 3124,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3125,
							"src": "203:14914:12",
							"usedErrors": [
								2076
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3229
						]
					},
					"id": 3230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3127,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3229,
							"linearizedBaseContracts": [
								3229
							],
							"name": "SignedMath",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3144,
										"nodeType": "Block",
										"src": "376:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3137,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3130,
															"src": "393:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3138,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3132,
															"src": "397:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3141,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3132,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:13",
													"trueExpression": {
														"id": 3140,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3130,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3136,
												"id": 3143,
												"nodeType": "Return",
												"src": "386:20:13"
											}
										]
									},
									"documentation": {
										"id": 3128,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "325:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3129,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3132,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3131,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:13"
									},
									"returnParameters": {
										"id": 3136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "368:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3134,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:13"
									},
									"scope": 3229,
									"src": "312:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3162,
										"nodeType": "Block",
										"src": "555:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3155,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3148,
															"src": "572:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3156,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "576:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3159,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:13",
													"trueExpression": {
														"id": 3158,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3148,
														"src": "580:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3154,
												"id": 3161,
												"nodeType": "Return",
												"src": "565:20:13"
											}
										]
									},
									"documentation": {
										"id": 3146,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "504:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3147,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3149,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:13"
									},
									"returnParameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3163,
												"src": "547:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3152,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:13"
									},
									"scope": 3229,
									"src": "491:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3206,
										"nodeType": "Block",
										"src": "797:162:13",
										"statements": [
											{
												"assignments": [
													3174
												],
												"declarations": [
													{
														"constant": false,
														"id": 3174,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3206,
														"src": "859:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3173,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3187,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3175,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3166,
																	"src": "871:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3176,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3168,
																	"src": "875:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3178,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3179,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3166,
																				"src": "882:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3180,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3168,
																				"src": "886:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3182,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3185,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3188,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3174,
														"src": "911:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3193,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3174,
																						"src": "931:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3191,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3189,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3198,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3166,
																				"src": "945:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3199,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3168,
																				"src": "949:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3201,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3203,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3172,
												"id": 3205,
												"nodeType": "Return",
												"src": "904:48:13"
											}
										]
									},
									"documentation": {
										"id": 3164,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3166,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3207,
												"src": "746:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3165,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3168,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3207,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3167,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:13"
									},
									"returnParameters": {
										"id": 3172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3207,
												"src": "789:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3170,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:13"
									},
									"scope": 3229,
									"src": "729:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3227,
										"nodeType": "Block",
										"src": "1103:158:13",
										"statements": [
											{
												"id": 3226,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3217,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3210,
																			"src": "1228:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:13",
																		"subExpression": {
																			"id": 3221,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3210,
																			"src": "1242:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:13",
																	"trueExpression": {
																		"id": 3220,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3210,
																		"src": "1237:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3215,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3214,
														"id": 3225,
														"nodeType": "Return",
														"src": "1213:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3208,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3210,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3209,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:13"
									},
									"returnParameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "1094:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:13"
									},
									"scope": 3229,
									"src": "1048:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3230,
							"src": "216:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:13"
				},
				"id": 13
			},
			"contracts/SongNFT.sol": {
				"ast": {
					"absolutePath": "contracts/SongNFT.sol",
					"exportedSymbols": {
						"Arrays": [
							1639
						],
						"Context": [
							1669
						],
						"ERC1155": [
							1187
						],
						"ERC1155URIStorage": [
							1440
						],
						"ERC165": [
							2058
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1456
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							2070
						],
						"SongNFT": [
							3292
						],
						"Strings": [
							2034
						]
					},
					"id": 3293,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 3232,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3293,
							"sourceUnit": 1188,
							"src": "107:59:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
							"id": 3233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3293,
							"sourceUnit": 1441,
							"src": "167:80:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3234,
										"name": "ERC1155URIStorage",
										"nameLocations": [
											"269:17:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1440,
										"src": "269:17:14"
									},
									"id": 3235,
									"nodeType": "InheritanceSpecifier",
									"src": "269:17:14"
								}
							],
							"canonicalName": "SongNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3292,
							"linearizedBaseContracts": [
								3292,
								1440,
								1187,
								136,
								1456,
								1310,
								2058,
								2070,
								1669
							],
							"name": "SongNFT",
							"nameLocation": "258:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3241,
										"nodeType": "Block",
										"src": "318:2:14",
										"statements": []
									},
									"id": 3242,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 3238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "315:2:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 3239,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3237,
												"name": "ERC1155",
												"nameLocations": [
													"307:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1187,
												"src": "307:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "307:11:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:2:14"
									},
									"returnParameters": {
										"id": 3240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:0:14"
									},
									"scope": 3292,
									"src": "293:27:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1c75cfb4",
									"id": 3244,
									"mutability": "mutable",
									"name": "currentID",
									"nameLocation": "341:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3292,
									"src": "326:24:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3268,
										"nodeType": "Block",
										"src": "457:103:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3246,
															"src": "473:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3255,
															"name": "currentID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3244,
															"src": "477:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3256,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3248,
															"src": "488:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 3257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "496:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 3253,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "467:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "467:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3259,
												"nodeType": "ExpressionStatement",
												"src": "467:32:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3261,
															"name": "currentID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3244,
															"src": "517:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3262,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3250,
															"src": "528:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3260,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1428,
															810
														],
														"referencedDeclaration": 1428,
														"src": "509:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "509:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3264,
												"nodeType": "ExpressionStatement",
												"src": "509:23:14"
											},
											{
												"expression": {
													"id": 3266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "542:11:14",
													"subExpression": {
														"id": 3265,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3244,
														"src": "542:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3267,
												"nodeType": "ExpressionStatement",
												"src": "542:11:14"
											}
										]
									},
									"functionSelector": "d3fc9864",
									"id": 3269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "366:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3246,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "388:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3269,
												"src": "380:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3248,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "408:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3269,
												"src": "400:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3250,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "438:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 3269,
												"src": "424:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "424:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:77:14"
									},
									"returnParameters": {
										"id": 3252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "457:0:14"
									},
									"scope": 3292,
									"src": "357:203:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3290,
										"nodeType": "Block",
										"src": "655:67:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3283,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3271,
															"src": "688:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3284,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3273,
															"src": "695:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3285,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3275,
															"src": "700:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3277,
															"src": "705:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 3287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "712:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"id": 3280,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "665:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SongNFT_$3292_$",
																"typeString": "type(contract super SongNFT)"
															}
														},
														"id": 3282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "671:16:14",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 403,
														"src": "665:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "665:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3289,
												"nodeType": "ExpressionStatement",
												"src": "665:50:14"
											}
										]
									},
									"functionSelector": "0febdd49",
									"id": 3291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "575:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "600:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3291,
												"src": "592:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "614:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3291,
												"src": "606:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3275,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "626:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3291,
												"src": "618:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "638:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3291,
												"src": "630:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:53:14"
									},
									"returnParameters": {
										"id": 3279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:0:14"
									},
									"scope": 3292,
									"src": "566:156:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3293,
							"src": "249:475:14",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "81:644:14"
				},
				"id": 14
			}
		}
	}
}